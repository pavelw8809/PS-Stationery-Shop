{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\Cart\\\\Cart.js\";\n\n/*\r\n    Plik:               Cart.js\r\n    Funkcja:            STRONA PODSUMOWANIA ZAKUPÓW - KOSZYK\r\n    Opis:               Strona wyświetlająca dodane artykuły do koszyka i pokazująca sumę należności za zakupy\r\n    Elementy:           Nawigacja górna (Navbar), \r\n                        Logo (PS Logo), \r\n                        Searching Bar (SearchBar), \r\n                        Przycisk Zaloguj (LogBtn => Login.js), \r\n                        Przycisk Koszyka (CartBtn => Cart.js), \r\n                        Suma zakupów {props.totalprice} - wyświetlane w przycisku Koszyk\r\n                        Nawigacja dolna - sklep (ArtNav)\r\n    Przykład użycia:    Komponent bazowy wyświetlany w App.js - <Header totalprice={suma} />\r\n    Dodatkowe info:     <Navlink> - list przekierowujący do odpowiedniego kontenera w routingu - routing w pliku głównym App.js\r\n*/\nimport React, { useContext, useEffect, useState } from 'react';\nimport { CartContext, TotalContext } from '../App';\nimport CartItem from '../../components/CartItem/CartItem';\nimport './Cart.scss';\n\nconst SCart = () => {\n  const [initCart, Cart] = useContext(CartContext);\n  const [initTotal, Total] = useContext(TotalContext);\n\n  const increaseQuantity = index => {\n    let newCart = [...initCart];\n    newCart[index].quantity = newCart[index].quantity + 1;\n    newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\n    setCounter({\n      quantity: newCart[index].quantity\n    });\n    setTotalPrice({\n      totalprice: newCart[index].prodtotal\n    });\n    Total({\n      total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\n    });\n  };\n\n  const removeItem = index => {\n    console.log(index);\n    let newCart = initCart.slice();\n    newCart.splice(index, 1);\n    Cart(newCart);\n    const total = newCart.reduce((previousState, currentState) => previousState + currentState.prodtotal, 0);\n    Total({\n      total\n    });\n  };\n\n  let ShowCartItems;\n\n  if (initCart.length === 0) {\n    ShowCartItems = React.createElement(\"div\", {\n      className: \"CartItems\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Tw\\xF3j koszyk jest pusty\"));\n  } else {\n    ShowCartItems = React.createElement(\"div\", {\n      className: \"CartItems\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, initCart.map((r, index) => {\n      return React.createElement(CartItem, {\n        id: r.id,\n        name: r.name,\n        desc: r.desc,\n        price: r.price,\n        quantity: r.quantity,\n        prodtotal: r.prodtotal,\n        imagename: r.imagename,\n        key: r.id,\n        additem: increaseQuantity.bind(this, index),\n        removeitem: removeItem.bind(this, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"CART\"), React.createElement(\"div\", {\n    className: \"CartContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CartList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"TW\\xD3J KOSZYK\"), ShowCartItems), React.createElement(\"div\", {\n    className: \"CartSummary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"PODSUMOWANIE\"), React.createElement(\"div\", {\n    className: \"CartSummaryInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"CartSummaryLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"SUMA\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, parseFloat(initTotal.total).toFixed(2))))));\n};\n\nexport default SCart;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/Cart/Cart.js"],"names":["React","useContext","useEffect","useState","CartContext","TotalContext","CartItem","SCart","initCart","Cart","initTotal","Total","increaseQuantity","index","newCart","quantity","prodtotal","parseFloat","price","setCounter","setTotalPrice","totalprice","total","removeItem","console","log","slice","splice","reduce","previousState","currentState","ShowCartItems","length","map","r","id","name","desc","imagename","bind","toFixed"],"mappings":";;AAAA;;;;;;;;;;;;;;AAeA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,QAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB,QAAM,CAACC,QAAD,EAAWC,IAAX,IAAmBR,UAAU,CAACG,WAAD,CAAnC;AACA,QAAM,CAACM,SAAD,EAAYC,KAAZ,IAAqBV,UAAU,CAACI,YAAD,CAArC;;AAEA,QAAMO,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAIC,OAAO,GAAG,CAAC,GAAGN,QAAJ,CAAd;AACAM,IAAAA,OAAO,CAACD,KAAD,CAAP,CAAeE,QAAf,GAA0BD,OAAO,CAACD,KAAD,CAAP,CAAeE,QAAf,GAAwB,CAAlD;AACAD,IAAAA,OAAO,CAACD,KAAD,CAAP,CAAeG,SAAf,GAA2BC,UAAU,CAACH,OAAO,CAACD,KAAD,CAAP,CAAeG,SAAhB,CAAV,GAAuCC,UAAU,CAACH,OAAO,CAACD,KAAD,CAAP,CAAeK,KAAhB,CAA5E;AAEAC,IAAAA,UAAU,CAAC;AACPJ,MAAAA,QAAQ,EAAED,OAAO,CAACD,KAAD,CAAP,CAAeE;AADlB,KAAD,CAAV;AAGAK,IAAAA,aAAa,CAAC;AACVC,MAAAA,UAAU,EAAEP,OAAO,CAACD,KAAD,CAAP,CAAeG;AADjB,KAAD,CAAb;AAGAL,IAAAA,KAAK,CAAC;AACFW,MAAAA,KAAK,EAAEL,UAAU,CAACP,SAAS,CAACY,KAAX,CAAV,GAA8BL,UAAU,CAACH,OAAO,CAACD,KAAD,CAAP,CAAeK,KAAhB;AAD7C,KAAD,CAAL;AAGH,GAdD;;AAgBA,QAAMK,UAAU,GAAIV,KAAD,IAAW;AAC1BW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,QAAIC,OAAO,GAAGN,QAAQ,CAACkB,KAAT,EAAd;AACAZ,IAAAA,OAAO,CAACa,MAAR,CAAed,KAAf,EAAsB,CAAtB;AACAJ,IAAAA,IAAI,CAACK,OAAD,CAAJ;AACA,UAAMQ,KAAK,GAAGR,OAAO,CAACc,MAAR,CAAe,CAACC,aAAD,EAAgBC,YAAhB,KAAiCD,aAAa,GAAGC,YAAY,CAACd,SAA7E,EAAwF,CAAxF,CAAd;AACAL,IAAAA,KAAK,CAAC;AAACW,MAAAA;AAAD,KAAD,CAAL;AACH,GAPD;;AASA,MAAIS,aAAJ;;AAEA,MAAIvB,QAAQ,CAACwB,MAAT,KAAoB,CAAxB,EAA2B;AACvBD,IAAAA,aAAa,GACT;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ;AAKH,GAND,MAMO;AACHA,IAAAA,aAAa,GACT;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKvB,QAAQ,CAACyB,GAAT,CAAa,CAACC,CAAD,EAAIrB,KAAJ,KAAc;AACxB,aACI,oBAAC,QAAD;AACI,QAAA,EAAE,EAAEqB,CAAC,CAACC,EADV;AAEI,QAAA,IAAI,EAAED,CAAC,CAACE,IAFZ;AAGI,QAAA,IAAI,EAAEF,CAAC,CAACG,IAHZ;AAII,QAAA,KAAK,EAAEH,CAAC,CAAChB,KAJb;AAKI,QAAA,QAAQ,EAAEgB,CAAC,CAACnB,QALhB;AAMI,QAAA,SAAS,EAAEmB,CAAC,CAAClB,SANjB;AAOI,QAAA,SAAS,EAAEkB,CAAC,CAACI,SAPjB;AAQI,QAAA,GAAG,EAAEJ,CAAC,CAACC,EARX;AASI,QAAA,OAAO,EAAEvB,gBAAgB,CAAC2B,IAAjB,CAAsB,IAAtB,EAA4B1B,KAA5B,CATb;AAUI,QAAA,UAAU,EAAEU,UAAU,CAACgB,IAAX,CAAgB,IAAhB,EAAsB1B,KAAtB,CAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAcH,KAfA,CADL,CADJ;AAoBH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKkB,aAFL,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMd,UAAU,CAACP,SAAS,CAACY,KAAX,CAAV,CAA4BkB,OAA5B,CAAoC,CAApC,CAAN,CAFJ,CAFJ,CALJ,CAFJ,CADJ;AAkBH,CA/ED;;AAiFA,eAAejC,KAAf","sourcesContent":["/*\r\n    Plik:               Cart.js\r\n    Funkcja:            STRONA PODSUMOWANIA ZAKUPÓW - KOSZYK\r\n    Opis:               Strona wyświetlająca dodane artykuły do koszyka i pokazująca sumę należności za zakupy\r\n    Elementy:           Nawigacja górna (Navbar), \r\n                        Logo (PS Logo), \r\n                        Searching Bar (SearchBar), \r\n                        Przycisk Zaloguj (LogBtn => Login.js), \r\n                        Przycisk Koszyka (CartBtn => Cart.js), \r\n                        Suma zakupów {props.totalprice} - wyświetlane w przycisku Koszyk\r\n                        Nawigacja dolna - sklep (ArtNav)\r\n    Przykład użycia:    Komponent bazowy wyświetlany w App.js - <Header totalprice={suma} />\r\n    Dodatkowe info:     <Navlink> - list przekierowujący do odpowiedniego kontenera w routingu - routing w pliku głównym App.js\r\n*/\r\n\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { CartContext, TotalContext } from '../App';\r\nimport CartItem from '../../components/CartItem/CartItem';\r\nimport './Cart.scss';\r\n\r\nconst SCart = () => {\r\n\r\n    const [initCart, Cart] = useContext(CartContext);\r\n    const [initTotal, Total] = useContext(TotalContext);\r\n\r\n    const increaseQuantity = (index) => {\r\n        let newCart = [...initCart];\r\n        newCart[index].quantity = newCart[index].quantity+1;\r\n        newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\r\n        \r\n        setCounter({\r\n            quantity: newCart[index].quantity\r\n        })\r\n        setTotalPrice({\r\n            totalprice: newCart[index].prodtotal\r\n        })\r\n        Total({\r\n            total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\r\n        })\r\n    }\r\n\r\n    const removeItem = (index) => {\r\n        console.log(index);\r\n        let newCart = initCart.slice();\r\n        newCart.splice(index, 1);\r\n        Cart(newCart);\r\n        const total = newCart.reduce((previousState, currentState) => previousState + currentState.prodtotal, 0);\r\n        Total({total});\r\n    }\r\n\r\n    let ShowCartItems;\r\n\r\n    if (initCart.length === 0) {\r\n        ShowCartItems = (\r\n            <div className=\"CartItems\">\r\n                <p>Twój koszyk jest pusty</p>\r\n            </div>\r\n        )\r\n    } else {\r\n        ShowCartItems = (\r\n            <div className=\"CartItems\">\r\n                {initCart.map((r, index) => {\r\n                    return(\r\n                        <CartItem \r\n                            id={r.id}\r\n                            name={r.name}\r\n                            desc={r.desc}\r\n                            price={r.price}\r\n                            quantity={r.quantity}\r\n                            prodtotal={r.prodtotal}\r\n                            imagename={r.imagename}\r\n                            key={r.id}\r\n                            additem={increaseQuantity.bind(this, index)}\r\n                            removeitem={removeItem.bind(this, index)}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"Cart\">\r\n            <h1>CART</h1>\r\n            <div className=\"CartContainer\">\r\n                <div className=\"CartList\">\r\n                    <h4>TWÓJ KOSZYK</h4>\r\n                    {ShowCartItems}\r\n                </div>\r\n                <div className=\"CartSummary\">\r\n                    <h4>PODSUMOWANIE</h4>\r\n                    <div className=\"CartSummaryInfo\">\r\n                        <p className=\"CartSummaryLabel\">SUMA</p>\r\n                        <div>{parseFloat(initTotal.total).toFixed(2)}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SCart;"]},"metadata":{},"sourceType":"module"}