{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\UserBtn\\\\UserBtn.js\";\nimport React, { useContext, useState } from 'react';\nimport './UserBtn.scss';\nimport Login from '../Login/Login';\nimport AccountMenu from '../AccountMenu/AccountMenu';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport { ServerPath, UserContext } from '../../containers/App';\nimport { FaRegUserCircle } from 'react-icons/fa';\n\nconst UserBtn = props => {\n  // LOGIN STATES\n  const [User, setUser] = useContext(UserContext); // User State\n\n  const [LogShow, setLogShow] = useState(false); // Show loggin button\n  //const [AccShow, setAccShow] = useState(false);\n\n  const [LoginData, setLoginData] = useState(); // Temporary state for sending login data\n\n  const handleUsername = event => {\n    setLoginData({ ...LoginData,\n      user: event.target.value\n    });\n  };\n\n  const handlePassword = event => {\n    setLoginData({ ...LoginData,\n      password: event.target.value\n    });\n  };\n\n  let history = useHistory();\n  console.log(User); // Login pop-up (if user is not logged in)\n\n  let windowstyle; //let LoginW;\n\n  const loginWindow = () => {\n    setLogShow(!LogShow);\n  };\n\n  if (!LogShow) {\n    windowstyle = {\n      visibility: 'hidden',\n      opacity: 0,\n      transitionDuration: '0.5s'\n    };\n  } // Acount menu (if user is logged in)\n\n\n  const accountMenu = () => {} //setAccShow(!AccShow)\n  // Checking if user is logged in\n  ;\n\n  let UserInfoBtn;\n\n  if (!User.userinfo.login) {\n    UserInfoBtn = React.createElement(\"button\", {\n      className: \"LogBtn\",\n      onClick: loginWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"ZALOGUJ\");\n  } else {\n    UserInfoBtn = React.createElement(\"button\", {\n      className: \"LogBtn AccountBtn\",\n      onClick: loginWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(FaRegUserCircle, {\n      size: 20,\n      className: \"UserIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), User.userinfo.login);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"UserBtnContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"LoginW\",\n    style: windowstyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Login, {\n    LogShow: LogShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"LoginWt\",\n    style: windowstyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(AccountMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), UserInfoBtn);\n};\n\nexport default UserBtn;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/UserBtn/UserBtn.js"],"names":["React","useContext","useState","Login","AccountMenu","NavLink","useHistory","Axios","ServerPath","UserContext","FaRegUserCircle","UserBtn","props","User","setUser","LogShow","setLogShow","LoginData","setLoginData","handleUsername","event","user","target","value","handlePassword","password","history","console","log","windowstyle","loginWindow","visibility","opacity","transitionDuration","accountMenu","UserInfoBtn","userinfo","login"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport './UserBtn.scss';\r\nimport Login from '../Login/Login';\r\nimport AccountMenu from '../AccountMenu/AccountMenu';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { ServerPath, UserContext } from '../../containers/App';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\n\r\nconst UserBtn = (props) => {\r\n\r\n    // LOGIN STATES\r\n\r\n    const [User, setUser] = useContext(UserContext);    // User State\r\n    const [LogShow, setLogShow] = useState(false);      // Show loggin button\r\n    //const [AccShow, setAccShow] = useState(false);\r\n    const [LoginData, setLoginData] = useState()        // Temporary state for sending login data\r\n\r\n    const handleUsername = (event) => {\r\n        setLoginData({...LoginData, user: event.target.value});\r\n    }\r\n\r\n    const handlePassword = (event) => {\r\n        setLoginData({...LoginData, password: event.target.value});\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    console.log(User);\r\n\r\n    // Login pop-up (if user is not logged in)\r\n\r\n    let windowstyle;\r\n    //let LoginW;\r\n\r\n    const loginWindow = () => {\r\n        setLogShow(!LogShow);\r\n    }\r\n\r\n    if (!LogShow) {\r\n        windowstyle = {\r\n            visibility: 'hidden',\r\n            opacity: 0,\r\n            transitionDuration: '0.5s'\r\n        }\r\n    }\r\n\r\n    // Acount menu (if user is logged in)\r\n\r\n    const accountMenu = () => {\r\n        //setAccShow(!AccShow)\r\n    }\r\n\r\n    \r\n\r\n    // Checking if user is logged in\r\n\r\n    let UserInfoBtn;\r\n\r\n    if (!User.userinfo.login) {\r\n        UserInfoBtn = <button className=\"LogBtn\" onClick={loginWindow}>ZALOGUJ</button>\r\n    } else {\r\n        UserInfoBtn = <button className=\"LogBtn AccountBtn\" onClick={loginWindow}><FaRegUserCircle size={20} className=\"UserIcon\"/>{User.userinfo.login}</button>\r\n    }\r\n\r\n    return(\r\n        <div className=\"UserBtnContainer\">\r\n            <div className=\"LoginW\" style={windowstyle}>\r\n                <Login LogShow={LogShow}/>\r\n            </div>\r\n            <div className=\"LoginWt\" style={windowstyle}>\r\n                <AccountMenu/>\r\n            </div>\r\n            {UserInfoBtn}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserBtn;"]},"metadata":{},"sourceType":"module"}