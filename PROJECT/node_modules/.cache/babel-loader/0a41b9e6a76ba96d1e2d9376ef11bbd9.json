{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\ArtDetails\\\\ArtDetails.js\";\nimport React, { useState, useContext } from 'react';\nimport { CartContext, TotalContext } from '../../containers/App';\nimport './ArtDetails.scss';\nimport { useHistory } from 'react-router-dom';\nimport carticon from '../../images/icons/black_cart.png';\n\nconst Artdetails = props => {\n  const [Cart, setCart] = useContext(CartContext); // stan globalny - stan koszyka\n\n  const [Total, setTotal] = useContext(TotalContext); // stan globalny - suma do zapłaty\n\n  const [counter, setCounter] = useState({\n    quantity: 0\n  }); // stan lokalny - wyświetla ilość produktu\n\n  const increaseQuantity = () => {\n    if (counter.quantity < 100) {\n      setCounter({\n        quantity: counter.quantity + 1\n      });\n    }\n  };\n\n  const decreaseQuantity = () => {\n    if (counter.quantity > 0) {\n      setCounter({\n        quantity: counter.quantity - 1\n      });\n    }\n  };\n\n  const handleQuantity = event => {\n    let regexp = /^[0-9\\b]+$/;\n    let input = event.target.value;\n\n    if (regexp.test(input)) {\n      setCounter({\n        quantity: parseInt(input)\n      });\n    } else {\n      document.querySelector(\".ArtDqInput\").value = 0;\n    }\n  };\n\n  const addProd = (prodid, name, desc, q, price, imagename) => {\n    let check = 0;\n    let idToChange;\n    let orSum = parseFloat(q * price);\n    Cart.map((r, index) => {\n      if (r.prodid === prodid) {\n        check = 1;\n        idToChange = parseInt(index);\n      }\n    });\n\n    if (q > 0) {\n      if (check === 0) {\n        setCart(prevCart => [...Cart, {\n          id: Cart.length,\n          prodid: prodid,\n          name: name,\n          desc: desc,\n          price: parseFloat(price),\n          quantity: q,\n          prodtotal: q * price,\n          imagename: imagename\n        }]);\n        let CartStorageN = [...CartStorage, {\n          id: CartStorage.length,\n          prodid: prodid,\n          name: name,\n          desc: desc,\n          price: parseFloat(price),\n          quantity: q,\n          prodtotal: q * price,\n          imagename: imagename\n        }];\n        localStorage.setItem('pscart', JSON.stringify(CartStorageN));\n      } else {\n        let newCart = [...Cart];\n        newCart[idToChange].quantity = newCart[idToChange].quantity + q;\n        newCart[idToChange].prodtotal = newCart[idToChange].price * newCart[idToChange].quantity;\n        let CartStorageN = [...CartStorage];\n        CartStorageN[idToChange].quantity = CartStorageN[idToChange].quantity + q;\n        CartStorageN[idToChange].prodtotal = CartStorageN[idToChange].price * CartStorageN[idToChange].quantity;\n      }\n\n      setTotal({\n        total: parseFloat(Total.total + orSum)\n      });\n      setCounter({\n        quantity: 0\n      });\n    }\n  };\n\n  localStorage.setItem('pscart', JSON.stringify(Cart));\n  localStorage.setItem('pstotal', Total.total);\n\n  if (props.location.artProps.name = 'undefined') {\n    let History = new History();\n    History.push('/notfound');\n  } else {\n    const Image = require('../../images/images/' + props.location.artProps.imagename + '.png'); // Ścieżka do zdjęcia\n\n\n    let ProdImgStyle;\n    ProdImgStyle = {\n      // Stylizacja zdjęcia - zdjęcie jako tło karty\n      backgroundImage: \"url(\" + Image + \")\",\n      backgroundColor: 'white'\n    };\n    let NetPrice = (props.location.artProps.price / 1.23).toFixed(2);\n    let CartStorage = JSON.parse(localStorage.getItem('pscart'));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"ArtDetails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ArtDContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ArtImgContainer\",\n    style: ProdImgStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Nr artyku\\u0142u: \", props.location.artProps.prodid)), React.createElement(\"div\", {\n    className: \"ArtDCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ArtDMain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"ArtDTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, props.location.artProps.name), React.createElement(\"p\", {\n    className: \"ArtDShortDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, props.location.artProps.shortdesc)), React.createElement(\"div\", {\n    className: \"ArtDDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, props.location.artProps.description)), React.createElement(\"div\", {\n    className: \"ArtDPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Cena netto:\", React.createElement(\"p\", {\n    className: \"NetPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, NetPrice)), React.createElement(\"div\", {\n    className: \"GrossPriceContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Cena brutto:\", React.createElement(\"p\", {\n    className: \"GrossPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, props.location.artProps.price)), React.createElement(\"div\", {\n    className: \"ArtDOrderPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"ArtDqBtn\",\n    onClick: increaseQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"input\", {\n    className: \"ArtDqInput\",\n    type: \"text\",\n    value: counter.quantity,\n    onChange: handleQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"ArtDqBtn\",\n    onClick: decreaseQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"-\"))), React.createElement(\"div\", {\n    className: \"ArtDOrderBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"ArtDOrderBtn\",\n    onClick: addProd.bind(this, props.location.artProps.prodid, props.location.artProps.name, props.location.artProps.shortdesc, counter.quantity, props.location.artProps.price, props.location.artProps.imagename),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"carticonBtn\",\n    src: carticon,\n    alt: \"cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), \"DO KOSZYKA\")));\n};\n\nexport default Artdetails;\n/*\r\n            <p>{props.location.artProps.name}</p>\r\n            <p>{props.location.artProps.shortdesc}</p>\r\n            <p>{props.location.artProps.description}</p>\r\n            <p>{props.location.artProps.price}</p>\r\n*/","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/ArtDetails/ArtDetails.js"],"names":["React","useState","useContext","CartContext","TotalContext","useHistory","carticon","Artdetails","props","Cart","setCart","Total","setTotal","counter","setCounter","quantity","increaseQuantity","decreaseQuantity","handleQuantity","event","regexp","input","target","value","test","parseInt","document","querySelector","addProd","prodid","name","desc","q","price","imagename","check","idToChange","orSum","parseFloat","map","r","index","prevCart","id","length","prodtotal","CartStorageN","CartStorage","localStorage","setItem","JSON","stringify","newCart","total","location","artProps","History","push","Image","require","ProdImgStyle","backgroundImage","backgroundColor","NetPrice","toFixed","parse","getItem","shortdesc","description","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,sBAA1C;AACA,OAAO,mBAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,mCAArB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,UAAU,CAACC,WAAD,CAAlC,CAF0B,CAEqD;;AAC/E,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACE,YAAD,CAApC,CAH0B,CAGqD;;AAC/E,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC;AAACc,IAAAA,QAAQ,EAAE;AAAX,GAAD,CAAtC,CAJ0B,CAIyC;;AAEnE,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAIH,OAAO,CAACE,QAAR,GAAmB,GAAvB,EAA4B;AACxBD,MAAAA,UAAU,CAAC;AACPC,QAAAA,QAAQ,EAAEF,OAAO,CAACE,QAAR,GAAiB;AADpB,OAAD,CAAV;AAGH;AACJ,GAND;;AAQA,QAAME,gBAAgB,GAAG,MAAM;AAC3B,QAAGJ,OAAO,CAACE,QAAR,GAAmB,CAAtB,EAAyB;AACrBD,MAAAA,UAAU,CAAC;AACPC,QAAAA,QAAQ,EAAEF,OAAO,CAACE,QAAR,GAAiB;AADpB,OAAD,CAAV;AAGH;AACJ,GAND;;AAQA,QAAMG,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAIC,MAAM,GAAG,YAAb;AACA,QAAIC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAzB;;AACA,QAAIH,MAAM,CAACI,IAAP,CAAYH,KAAZ,CAAJ,EAAwB;AACxBP,MAAAA,UAAU,CAAC;AACPC,QAAAA,QAAQ,EAAEU,QAAQ,CAACJ,KAAD;AADX,OAAD,CAAV;AAGC,KAJD,MAIO;AACHK,MAAAA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCJ,KAAtC,GAA8C,CAA9C;AACH;AACJ,GAVD;;AAYA,QAAMK,OAAO,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,IAAf,EAAqBC,CAArB,EAAwBC,KAAxB,EAA+BC,SAA/B,KAA6C;AACzD,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,UAAJ;AACA,QAAIC,KAAK,GAAGC,UAAU,CAAEN,CAAC,GAACC,KAAJ,CAAtB;AAEAxB,IAAAA,IAAI,CAAC8B,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACnB,UAAID,CAAC,CAACX,MAAF,KAAaA,MAAjB,EAAyB;AACrBM,QAAAA,KAAK,GAAG,CAAR;AACAC,QAAAA,UAAU,GAAGX,QAAQ,CAACgB,KAAD,CAArB;AACH;AACJ,KALD;;AAOA,QAAIT,CAAC,GAAG,CAAR,EAAW;AACP,UAAIG,KAAK,KAAK,CAAd,EAAiB;AACbzB,QAAAA,OAAO,CAACgC,QAAQ,IAAK,CAAC,GAAGjC,IAAJ,EAAU;AAC3BkC,UAAAA,EAAE,EAAElC,IAAI,CAACmC,MADkB;AAE3Bf,UAAAA,MAAM,EAAEA,MAFmB;AAG3BC,UAAAA,IAAI,EAAEA,IAHqB;AAI3BC,UAAAA,IAAI,EAAEA,IAJqB;AAK3BE,UAAAA,KAAK,EAAEK,UAAU,CAACL,KAAD,CALU;AAM3BlB,UAAAA,QAAQ,EAAEiB,CANiB;AAO3Ba,UAAAA,SAAS,EAAEb,CAAC,GAACC,KAPc;AAQ3BC,UAAAA,SAAS,EAAEA;AARgB,SAAV,CAAd,CAAP;AAUA,YAAIY,YAAY,GAAI,CAAC,GAAGC,WAAJ,EAAiB;AACjCJ,UAAAA,EAAE,EAAEI,WAAW,CAACH,MADiB;AAEjCf,UAAAA,MAAM,EAAEA,MAFyB;AAGjCC,UAAAA,IAAI,EAAEA,IAH2B;AAIjCC,UAAAA,IAAI,EAAEA,IAJ2B;AAKjCE,UAAAA,KAAK,EAAEK,UAAU,CAACL,KAAD,CALgB;AAMjClB,UAAAA,QAAQ,EAAEiB,CANuB;AAOjCa,UAAAA,SAAS,EAAEb,CAAC,GAACC,KAPoB;AAQjCC,UAAAA,SAAS,EAAEA;AARsB,SAAjB,CAApB;AAUAc,QAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeL,YAAf,CAA/B;AACH,OAtBD,MAsBO;AACH,YAAIM,OAAO,GAAG,CAAC,GAAG3C,IAAJ,CAAd;AACA2C,QAAAA,OAAO,CAAChB,UAAD,CAAP,CAAoBrB,QAApB,GAA+BqC,OAAO,CAAChB,UAAD,CAAP,CAAoBrB,QAApB,GAA6BiB,CAA5D;AACAoB,QAAAA,OAAO,CAAChB,UAAD,CAAP,CAAoBS,SAApB,GAAgCO,OAAO,CAAChB,UAAD,CAAP,CAAoBH,KAApB,GAA0BmB,OAAO,CAAChB,UAAD,CAAP,CAAoBrB,QAA9E;AACA,YAAI+B,YAAY,GAAG,CAAC,GAAGC,WAAJ,CAAnB;AACAD,QAAAA,YAAY,CAACV,UAAD,CAAZ,CAAyBrB,QAAzB,GAAoC+B,YAAY,CAACV,UAAD,CAAZ,CAAyBrB,QAAzB,GAAkCiB,CAAtE;AACAc,QAAAA,YAAY,CAACV,UAAD,CAAZ,CAAyBS,SAAzB,GAAqCC,YAAY,CAACV,UAAD,CAAZ,CAAyBH,KAAzB,GAA+Ba,YAAY,CAACV,UAAD,CAAZ,CAAyBrB,QAA7F;AACH;;AACDH,MAAAA,QAAQ,CAAC;AACLyC,QAAAA,KAAK,EAAEf,UAAU,CAAC3B,KAAK,CAAC0C,KAAN,GAAYhB,KAAb;AADZ,OAAD,CAAR;AAGAvB,MAAAA,UAAU,CAAC;AACPC,QAAAA,QAAQ,EAAE;AADH,OAAD,CAAV;AAGH;AACJ,GAlDD;;AAoDAiC,EAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAe1C,IAAf,CAA/B;AACAuC,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCtC,KAAK,CAAC0C,KAAtC;;AAEA,MAAI7C,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwBzB,IAAxB,GAA+B,WAAnC,EAAgD;AAC5C,QAAI0B,OAAO,GAAG,IAAIA,OAAJ,EAAd;AACAA,IAAAA,OAAO,CAACC,IAAR,CAAa,WAAb;AACH,GAHD,MAGO;AACH,UAAMC,KAAK,GAAGC,OAAO,CAAC,yBAAyBnD,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwBrB,SAAjD,GAA6D,MAA9D,CAArB,CADG,CAC+F;;;AAElG,QAAI0B,YAAJ;AACAA,IAAAA,YAAY,GAAG;AAAiE;AAC5EC,MAAAA,eAAe,EAAE,SAASH,KAAT,GAAiB,GADvB;AAEXI,MAAAA,eAAe,EAAE;AAFN,KAAf;AAKA,QAAIC,QAAQ,GAAG,CAACvD,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwBtB,KAAxB,GAA8B,IAA/B,EAAqC+B,OAArC,CAA6C,CAA7C,CAAf;AAEA,QAAIjB,WAAW,GAAGG,IAAI,CAACe,KAAL,CAAWjB,YAAY,CAACkB,OAAb,CAAqB,QAArB,CAAX,CAAlB;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAEN,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAiBpD,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwB1B,MAAzC,CADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BrB,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwBzB,IAAnD,CADJ,EAEI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BtB,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwBY,SAAtD,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI3D,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwBa,WAA5B,CADJ,CALJ,EAQI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBL,QAAzB,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BvD,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwBtB,KAAnD,CAFJ,CALJ,EASI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEjB,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,IAAI,EAAC,MAAnC;AAA0C,IAAA,KAAK,EAAEH,OAAO,CAACE,QAAzD;AAAmE,IAAA,QAAQ,EAAEG,cAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAED,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CATJ,CARJ,EAuBI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,CAJJ,EA+BI;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,OAAO,EAAEW,OAAO,CAACyC,IAAR,CAAa,IAAb,EAAmB7D,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwB1B,MAA3C,EAAmDrB,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwBzB,IAA3E,EAAiFtB,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwBY,SAAzG,EAAoHtD,OAAO,CAACE,QAA5H,EAAsIP,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwBtB,KAA9J,EAAqKzB,KAAK,CAAC8C,QAAN,CAAeC,QAAf,CAAwBrB,SAA7L,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEsN;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,GAAG,EAAE5B,QAAlC;AAA4C,IAAA,GAAG,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtN,eA/BJ,CADJ,CADJ;AAuCH,CAjJD;;AAmJA,eAAeC,UAAf;AAEA","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { CartContext, TotalContext } from '../../containers/App';\r\nimport './ArtDetails.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport carticon from '../../images/icons/black_cart.png';\r\n\r\nconst Artdetails = (props) => {\r\n\r\n    const [Cart, setCart] = useContext(CartContext);                               // stan globalny - stan koszyka\r\n    const [Total, setTotal] = useContext(TotalContext);                            // stan globalny - suma do zapłaty\r\n    const [counter, setCounter] = useState({quantity: 0})              // stan lokalny - wyświetla ilość produktu\r\n\r\n    const increaseQuantity = () => {\r\n        if (counter.quantity < 100) {\r\n            setCounter({\r\n                quantity: counter.quantity+1\r\n            })\r\n        }\r\n    }\r\n    \r\n    const decreaseQuantity = () => {\r\n        if(counter.quantity > 0) {\r\n            setCounter({\r\n                quantity: counter.quantity-1\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (event) => {\r\n        let regexp = /^[0-9\\b]+$/\r\n        let input = event.target.value\r\n        if (regexp.test(input)) {\r\n        setCounter({\r\n            quantity: parseInt(input)\r\n        })\r\n        } else {\r\n            document.querySelector(\".ArtDqInput\").value = 0;\r\n        }\r\n    }\r\n\r\n    const addProd = (prodid, name, desc, q, price, imagename) => {\r\n        let check = 0;\r\n        let idToChange;\r\n        let orSum = parseFloat((q*price));\r\n\r\n        Cart.map((r, index) => {\r\n            if (r.prodid === prodid) {\r\n                check = 1\r\n                idToChange = parseInt(index);\r\n            }\r\n        })\r\n\r\n        if (q > 0) {\r\n            if (check === 0) {\r\n                setCart(prevCart => ([...Cart, {\r\n                    id: Cart.length, \r\n                    prodid: prodid,\r\n                    name: name, \r\n                    desc: desc,\r\n                    price: parseFloat(price),\r\n                    quantity: q, \r\n                    prodtotal: q*price,\r\n                    imagename: imagename\r\n                }]))\r\n                let CartStorageN = ([...CartStorage, {\r\n                    id: CartStorage.length,\r\n                    prodid: prodid,\r\n                    name: name, \r\n                    desc: desc,\r\n                    price: parseFloat(price),\r\n                    quantity: q,                                                                               \r\n                    prodtotal: q*price,                             \r\n                    imagename: imagename\r\n                }]);\r\n                localStorage.setItem('pscart', JSON.stringify(CartStorageN))\r\n            } else {\r\n                let newCart = [...Cart];\r\n                newCart[idToChange].quantity = newCart[idToChange].quantity+q;\r\n                newCart[idToChange].prodtotal = newCart[idToChange].price*newCart[idToChange].quantity;\r\n                let CartStorageN = [...CartStorage];\r\n                CartStorageN[idToChange].quantity = CartStorageN[idToChange].quantity+q;\r\n                CartStorageN[idToChange].prodtotal = CartStorageN[idToChange].price*CartStorageN[idToChange].quantity;\r\n            }\r\n            setTotal({\r\n                total: parseFloat(Total.total+orSum)\r\n            })\r\n            setCounter({\r\n                quantity: 0\r\n            })\r\n        }\r\n    }\r\n\r\n    localStorage.setItem('pscart', JSON.stringify(Cart));\r\n    localStorage.setItem('pstotal', Total.total);\r\n\r\n    if (props.location.artProps.name = 'undefined') {\r\n        let History = new History();\r\n        History.push('/notfound');\r\n    } else {\r\n        const Image = require('../../images/images/' + props.location.artProps.imagename + '.png');       // Ścieżka do zdjęcia\r\n\r\n        let ProdImgStyle;\r\n        ProdImgStyle = {                                                                // Stylizacja zdjęcia - zdjęcie jako tło karty\r\n            backgroundImage: \"url(\" + Image + \")\",\r\n            backgroundColor: 'white',\r\n        }\r\n    \r\n        let NetPrice = (props.location.artProps.price/1.23).toFixed(2);\r\n    \r\n        let CartStorage = JSON.parse(localStorage.getItem('pscart'));\r\n    }\r\n\r\n    return(\r\n        <div className=\"ArtDetails\">\r\n            <div className=\"ArtDContainer\">\r\n                <div className=\"ArtImgContainer\" style={ProdImgStyle}>\r\n                    <p>Nr artykułu: {props.location.artProps.prodid}</p>\r\n                </div>\r\n                <div className=\"ArtDCard\">\r\n                    <div className=\"ArtDMain\">\r\n                        <h4 className=\"ArtDTitle\">{props.location.artProps.name}</h4>\r\n                        <p className=\"ArtDShortDesc\">{props.location.artProps.shortdesc}</p>\r\n                    </div>\r\n                    <div className=\"ArtDDesc\">\r\n                        <p>{props.location.artProps.description}</p>\r\n                    </div>\r\n                    <div className=\"ArtDPrice\">\r\n                        <div>\r\n                            Cena netto:\r\n                            <p className=\"NetPrice\">{NetPrice}</p>\r\n                        </div>\r\n                        <div className=\"GrossPriceContainer\">\r\n                            Cena brutto: \r\n                            <p className=\"GrossPrice\">{props.location.artProps.price}</p>\r\n                        </div>\r\n                        <div className=\"ArtDOrderPanel\">\r\n                            <button className=\"ArtDqBtn\" onClick={increaseQuantity}>+</button>\r\n                            <input className=\"ArtDqInput\" type=\"text\" value={counter.quantity} onChange={handleQuantity}/>\r\n                            <button className=\"ArtDqBtn\" onClick={decreaseQuantity}>-</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ArtDOrderBar\">\r\n\r\n                    </div>\r\n                </div>\r\n                <button \r\n                    className=\"ArtDOrderBtn\" \r\n                    onClick={addProd.bind(this, props.location.artProps.prodid, props.location.artProps.name, props.location.artProps.shortdesc, counter.quantity, props.location.artProps.price, props.location.artProps.imagename)}><img className=\"carticonBtn\" src={carticon} alt=\"cart\"/>DO KOSZYKA</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Artdetails;\r\n\r\n/*\r\n            <p>{props.location.artProps.name}</p>\r\n            <p>{props.location.artProps.shortdesc}</p>\r\n            <p>{props.location.artProps.description}</p>\r\n            <p>{props.location.artProps.price}</p>\r\n*/"]},"metadata":{},"sourceType":"module"}