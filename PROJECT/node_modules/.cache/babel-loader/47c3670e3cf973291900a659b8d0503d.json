{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\UserBtn\\\\UserBtn.js\";\nimport React, { useContext, useState } from 'react';\nimport './UserBtn.scss';\nimport Login from '../Login/Login';\nimport AccountMenu from '../AccountMenu/AccountMenu';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport { ServerPath, UserContext } from '../../containers/App';\nimport { FaRegUserCircle } from 'react-icons/fa';\nimport Cookies from 'js-cookie';\n\nconst UserBtn = props => {\n  // LOGIN STATES\n  const [User, setUser] = useContext(UserContext); // User State\n\n  const [LogShow, setLogShow] = useState(false); // Show loggin button\n\n  const [LoginData, setLoginData] = useState(); // Temporary state for sending login data\n\n  const [Error, setError] = useState(); // Error container    \n  // check content in username field and update LoginData state\n\n  const handleUsername = event => {\n    setLoginData({ ...LoginData,\n      user: event.target.value\n    });\n  }; // check content in password field and update LoginData state\n\n\n  const handlePassword = event => {\n    setLoginData({ ...LoginData,\n      password: event.target.value\n    });\n  }; // handle login action after subitting user data\n\n\n  const handleLogin = ErrorInfo => {\n    console.log(LoginData);\n    Axios.post(ServerPath + \"Login.php\", LoginData).then(function (res) {\n      if (res.data.u_id) {\n        console.log(res.data);\n        setUser({\n          userinfo: {\n            id: res.data.u_id,\n            login: res.data.u_login\n          }\n        });\n        Cookies.set('psid', res.data.u_id);\n        Cookies.set('psname', res.data.u_login);\n        setLogShow(false);\n      } else {\n        //console.log(res.data);\n        let ErrorInfo = res.data;\n      }\n    });\n  }; // hadle logout action\n\n\n  const handleLogout = () => {\n    Cookies.remove('psid');\n    Cookies.remove('psname');\n    setUser({\n      userinfo: {}\n    });\n    setLogShow(false);\n  }; // SHOW/HIDE USER BUTTON\n\n\n  let windowstyle;\n\n  const loginWindow = () => {\n    setLogShow(!LogShow);\n  };\n\n  if (!LogShow) {\n    windowstyle = {\n      visibility: 'hidden',\n      opacity: 0,\n      transitionDuration: '0.5s'\n    };\n  } // DISPLAY ADEQUATE CONTENT ON THE USER BUTTON (User logged-in/logged-out)\n\n\n  let UserInfoBtn;\n  let UserMenu;\n\n  if (!User.userinfo.login) {\n    UserInfoBtn = React.createElement(\"button\", {\n      className: \"LogBtn\",\n      onClick: loginWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"ZALOGUJ\");\n    UserMenu = React.createElement(Login, {\n      username: handleUsername,\n      password: handlePassword,\n      login: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  } else {\n    UserInfoBtn = React.createElement(\"button\", {\n      className: \"LogBtn AccountBtn\",\n      onClick: loginWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(FaRegUserCircle, {\n      size: 20,\n      className: \"UserIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), User.userinfo.login);\n    UserMenu = React.createElement(AccountMenu, {\n      logout: handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"UserBtnContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, UserInfoBtn, React.createElement(\"div\", {\n    className: \"LoginW\",\n    style: windowstyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, UserMenu));\n};\n\nexport default UserBtn;\n/*\r\n            <div className=\"Login\">\r\n                <label htmlFor=\"login\">Nazwa użytkownika:</label>\r\n                <input type=\"text\" onChange={handleUsername} name=\"login\"/>\r\n                <label htmlFor=\"pass\">Hasło:</label>\r\n                <input type=\"password\" onChange={handlePassword} name=\"pass\"/>\r\n                <button className=\"LoginBtn\" onClick={handleLogin}>ZALOGUJ</button>\r\n                <p>Nie masz konta?</p>\r\n                <NavLink to=\"/regform\" className=\"RegBtnContainer\">\r\n                    <button className=\"RegBtn\">ZAREJESTRUJ SIĘ</button>\r\n                </NavLink>\r\n            </div>\r\n*/","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/UserBtn/UserBtn.js"],"names":["React","useContext","useState","Login","AccountMenu","NavLink","useHistory","Axios","ServerPath","UserContext","FaRegUserCircle","Cookies","UserBtn","props","User","setUser","LogShow","setLogShow","LoginData","setLoginData","Error","setError","handleUsername","event","user","target","value","handlePassword","password","handleLogin","ErrorInfo","console","log","post","then","res","data","u_id","userinfo","id","login","u_login","set","handleLogout","remove","windowstyle","loginWindow","visibility","opacity","transitionDuration","UserInfoBtn","UserMenu"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport './UserBtn.scss';\r\nimport Login from '../Login/Login';\r\nimport AccountMenu from '../AccountMenu/AccountMenu';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { ServerPath, UserContext } from '../../containers/App';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst UserBtn = (props) => {\r\n\r\n    // LOGIN STATES\r\n\r\n    const [User, setUser] = useContext(UserContext);    // User State\r\n    const [LogShow, setLogShow] = useState(false);      // Show loggin button\r\n    const [LoginData, setLoginData] = useState();       // Temporary state for sending login data\r\n    const [Error, setError] = useState();               // Error container    \r\n\r\n    // check content in username field and update LoginData state\r\n    const handleUsername = (event) => {\r\n        setLoginData({...LoginData, user: event.target.value});\r\n    }\r\n\r\n    // check content in password field and update LoginData state\r\n    const handlePassword = (event) => {\r\n        setLoginData({...LoginData, password: event.target.value});\r\n    }\r\n\r\n    // handle login action after subitting user data\r\n\r\n    const handleLogin = (ErrorInfo) => {\r\n        console.log(LoginData);\r\n        Axios.post(ServerPath + \"Login.php\", LoginData)\r\n        .then(function(res) {\r\n            if (res.data.u_id) {\r\n                console.log(res.data);\r\n                setUser({\r\n                userinfo: {\r\n                    id: res.data.u_id,\r\n                    login: res.data.u_login\r\n                } \r\n                })\r\n                Cookies.set('psid', res.data.u_id);\r\n                Cookies.set('psname', res.data.u_login);\r\n                setLogShow(false);\r\n            } else {\r\n                //console.log(res.data);\r\n                let ErrorInfo = res.data;\r\n            }\r\n        })\r\n    }\r\n\r\n    // hadle logout action\r\n    const handleLogout = () => {\r\n        Cookies.remove('psid');\r\n        Cookies.remove('psname');\r\n        setUser({userinfo: {}})\r\n        setLogShow(false);\r\n    }\r\n\r\n    // SHOW/HIDE USER BUTTON\r\n\r\n    let windowstyle;\r\n\r\n    const loginWindow = () => {\r\n        setLogShow(!LogShow);\r\n    }\r\n\r\n    if (!LogShow) {\r\n        windowstyle = {\r\n            visibility: 'hidden',\r\n            opacity: 0,\r\n            transitionDuration: '0.5s'\r\n        }\r\n    }\r\n\r\n    // DISPLAY ADEQUATE CONTENT ON THE USER BUTTON (User logged-in/logged-out)\r\n\r\n    let UserInfoBtn;\r\n    let UserMenu;\r\n\r\n    if (!User.userinfo.login) {\r\n        UserInfoBtn = <button className=\"LogBtn\" onClick={loginWindow}>ZALOGUJ</button>\r\n        UserMenu = <Login \r\n                        username={handleUsername} \r\n                        password={handlePassword} \r\n                        login={handleLogin} />\r\n    } else {\r\n        UserInfoBtn = <button className=\"LogBtn AccountBtn\" onClick={loginWindow}><FaRegUserCircle size={20} className=\"UserIcon\"/>{User.userinfo.login}</button>\r\n        UserMenu = <AccountMenu logout={handleLogout}/>\r\n    }\r\n\r\n    return(\r\n        <div className=\"UserBtnContainer\">\r\n            {UserInfoBtn}\r\n            <div className=\"LoginW\" style={windowstyle}>\r\n                {UserMenu}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserBtn;\r\n\r\n/*\r\n            <div className=\"Login\">\r\n                <label htmlFor=\"login\">Nazwa użytkownika:</label>\r\n                <input type=\"text\" onChange={handleUsername} name=\"login\"/>\r\n                <label htmlFor=\"pass\">Hasło:</label>\r\n                <input type=\"password\" onChange={handlePassword} name=\"pass\"/>\r\n                <button className=\"LoginBtn\" onClick={handleLogin}>ZALOGUJ</button>\r\n                <p>Nie masz konta?</p>\r\n                <NavLink to=\"/regform\" className=\"RegBtnContainer\">\r\n                    <button className=\"RegBtn\">ZAREJESTRUJ SIĘ</button>\r\n                </NavLink>\r\n            </div>\r\n*/"]},"metadata":{},"sourceType":"module"}