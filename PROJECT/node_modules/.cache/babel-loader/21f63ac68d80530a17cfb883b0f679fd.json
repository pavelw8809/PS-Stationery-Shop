{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\ArtCard\\\\ArtCard.js\";\n\n/*\r\n    Plik:               ArtCard.js\r\n    Funkcja:            KARTA PRODUKTU\r\n    Opis:               Wyświetla bieżący produkt w karcie.\r\n    Elementy:           Zdjęcie {props.imagename}, \r\n                        nazwa produktu {props.name}, \r\n                        opis produktu {props.description}, \r\n                        cena {props.price}, \r\n                        wybór ilości +/-, \r\n                        przycisk koszyka\r\n    Przykład użycia:    <ArtCard imagename={nazwa_zdjecia} name={nazwa_artykulu} description={opis artykulu} price={cena} />\r\n    Dodatkowe info:     {nazwa_zdjecia} ma korespondowac z numerem artykulu w bazie danych\r\n*/\nimport React, { useState, useContext } from 'react';\nimport App, { SumContext } from '../../containers/App';\nimport carticon from '../../images/icons/black_cart.png';\nimport \"./ArtCard.scss\"; // Import arkusza stylu dla dla komponentu\n\nconst Artcard = props => {\n  const [counter, setCounter] = useState({\n    quantity: 0\n  });\n  const [initSum, Sum] = useContext(SumContext);\n  console.log(initSum);\n\n  const Image = require('../../images/images/' + props.imagename + '.png'); // Ścieżka do zdjęcia\n\n\n  let ProdImgStyle;\n  ProdImgStyle = {\n    // Stylizacja zdjęcia - zdjęcie jako tło karty\n    backgroundImage: \"url(\" + Image + \")\",\n    backgroundColor: 'white'\n  };\n\n  const increaseQuantity = () => {\n    setCounter({\n      quantity: counter.quantity + 1\n    });\n  };\n\n  const decreaseQuantity = () => {\n    if (counter.quantity > 0) {\n      setCounter({\n        quantity: counter.quantity - 1\n      });\n    }\n  };\n\n  const handleQuantity = event => {\n    setCounter({\n      quantity: parseInt(event.target.value)\n    });\n  };\n\n  const addProd = (q, price) => {\n    let orSum = (q * price).toPrecision(2);\n    Sum({\n      total: parseInt(initSum.total) + parseInt(orSum)\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"artCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ProdImgContainer\",\n    style: ProdImgStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"ProdInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, props.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, props.shortdesc)), React.createElement(\"div\", {\n    className: \"ProdState\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.price), React.createElement(\"div\", {\n    className: \"OrderBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: increaseQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"input\", {\n    type: \"number\",\n    value: counter.quantity,\n    onChange: handleQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: decreaseQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"-\")), React.createElement(\"button\", {\n    className: \"ToCartBtn\",\n    onClick: addProd.bind(this, counter.quantity, props.price),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"carticonBtn\",\n    src: carticon,\n    alt: \"cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), \"DO KOSZYKA\")));\n};\n\nexport default Artcard; //<img className=\"ProdImg\" src={Image} alt={props.imagename}/>","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/ArtCard/ArtCard.js"],"names":["React","useState","useContext","App","SumContext","carticon","Artcard","props","counter","setCounter","quantity","initSum","Sum","console","log","Image","require","imagename","ProdImgStyle","backgroundImage","backgroundColor","increaseQuantity","decreaseQuantity","handleQuantity","event","parseInt","target","value","addProd","q","price","orSum","toPrecision","total","name","shortdesc","bind"],"mappings":"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","sourcesContent":["/*\r\n    Plik:               ArtCard.js\r\n    Funkcja:            KARTA PRODUKTU\r\n    Opis:               Wyświetla bieżący produkt w karcie.\r\n    Elementy:           Zdjęcie {props.imagename}, \r\n                        nazwa produktu {props.name}, \r\n                        opis produktu {props.description}, \r\n                        cena {props.price}, \r\n                        wybór ilości +/-, \r\n                        przycisk koszyka\r\n    Przykład użycia:    <ArtCard imagename={nazwa_zdjecia} name={nazwa_artykulu} description={opis artykulu} price={cena} />\r\n    Dodatkowe info:     {nazwa_zdjecia} ma korespondowac z numerem artykulu w bazie danych\r\n*/\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport App, { SumContext } from '../../containers/App';\r\nimport carticon from '../../images/icons/black_cart.png';\r\nimport \"./ArtCard.scss\";                                                            // Import arkusza stylu dla dla komponentu\r\n\r\nconst Artcard = (props) =>{\r\n\r\n    const [counter, setCounter] = useState({\r\n        quantity: 0\r\n    })\r\n    const [initSum, Sum] = useContext(SumContext);\r\n    console.log(initSum);\r\n\r\n    const Image = require('../../images/images/' + props.imagename + '.png');       // Ścieżka do zdjęcia\r\n\r\n    let ProdImgStyle;\r\n    ProdImgStyle = {                                                                // Stylizacja zdjęcia - zdjęcie jako tło karty\r\n        backgroundImage: \"url(\" + Image + \")\",\r\n        backgroundColor: 'white',\r\n    }\r\n\r\n    const increaseQuantity = () => {\r\n        setCounter({\r\n            quantity: counter.quantity+1\r\n        })\r\n    }\r\n    \r\n    const decreaseQuantity = () => {\r\n        if(counter.quantity > 0) {\r\n            setCounter({\r\n                quantity: counter.quantity-1\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (event) => {\r\n        setCounter({\r\n            quantity: parseInt(event.target.value)\r\n        })\r\n    }\r\n\r\n    const addProd = (q, price) => {\r\n        let orSum = (q*price).toPrecision(2);\r\n        Sum({\r\n            total: parseInt(initSum.total)+parseInt(orSum)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"artCard\">\r\n            <div className=\"ProdImgContainer\" style={ProdImgStyle}>\r\n            </div>\r\n            <div className=\"ProdInfo\">\r\n                <h4>{props.name}</h4>\r\n                <p>{props.shortdesc}</p>\r\n            </div>\r\n            <div className=\"ProdState\">\r\n                <p>{props.price}</p>\r\n                <div className=\"OrderBar\">\r\n                    <button className=\"qBtn\" onClick={increaseQuantity}>+</button>\r\n                    <input type=\"number\" value={counter.quantity} onChange={handleQuantity}/>\r\n                    <button className=\"qBtn\" onClick={decreaseQuantity}>-</button>\r\n                </div>\r\n                <button className=\"ToCartBtn\" onClick={addProd.bind(this, counter.quantity, props.price)}><img className=\"carticonBtn\" src={carticon} alt=\"cart\"/>DO KOSZYKA</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Artcard;\r\n\r\n//<img className=\"ProdImg\" src={Image} alt={props.imagename}/>\r\n\r\n"]},"metadata":{},"sourceType":"module"}