{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\Cart\\\\Cart.js\";\n\n/*\r\n    Plik:               Cart.js\r\n    Funkcja:            STRONA PODSUMOWANIA ZAKUPÓW - KOSZYK\r\n    Opis:               Strona wyświetlająca dodane artykuły do koszyka i pokazująca sumę należności za zakupy\r\n    Elementy:           Nawigacja górna (Navbar), \r\n                        Logo (PS Logo), \r\n                        Searching Bar (SearchBar), \r\n                        Przycisk Zaloguj (LogBtn => Login.js), \r\n                        Przycisk Koszyka (CartBtn => Cart.js), \r\n                        Suma zakupów {props.totalprice} - wyświetlane w przycisku Koszyk\r\n                        Nawigacja dolna - sklep (ArtNav)\r\n    Przykład użycia:    Komponent bazowy wyświetlany w App.js - <Header totalprice={suma} />\r\n    Dodatkowe info:     <Navlink> - list przekierowujący do odpowiedniego kontenera w routingu - routing w pliku głównym App.js\r\n*/\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserContext, TotalContext, ServerPath } from '../App';\nimport CartItem from '../../components/CartItem/CartItem';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport './Cart.scss';\nimport { FaRegFrownOpen } from 'react-icons/fa';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst SCart = () => {\n  const [User, setUser] = useContext(UserContext);\n  const [Total, setTotal] = useContext(TotalContext);\n  const [CartError, setCartError] = useState();\n  let CartStorage = JSON.parse(localStorage.getItem('pscart'));\n  const [Cart, setCart] = useState({\n    articles: [CartStorage],\n    uid: User.userinfo.id\n  }); //setCart(CartStorage)\n\n  const removeItem = index => {\n    let CartStorageN = CartStorage.slice();\n    CartStorageN.splice(index, 1);\n    localStorage.setItem('pscart', JSON.stringify(CartStorageN));\n    const cartarray = [];\n    const sum = Object.values(CartStorageN).map(obj => {\n      cartarray.push(obj.prodtotal);\n      return obj.prodtotal;\n    }).reduce((sum, el) => {\n      console.log(sum + el);\n      return sum + el;\n    }, 0);\n    CartStorage = CartStorageN;\n    setTotal({\n      total: sum\n    });\n  };\n\n  const History = useHistory();\n\n  const sendOrder = () => {\n    if (typeof User.userinfo.uid === 'undefined') {\n      console.log(\"Użytkownik nie jest zalogowany\");\n      History.push({\n        pathname: '/login',\n        addProps: {\n          cartoption: true,\n          addinfo: \"Aby złożyć zamówienie wymagane jest logowanie. Po zalogowaniu kliknij poniwnie przycisk złóż zamówienie.\"\n        }\n      });\n    } else {\n      let OrderData = {\n        articles: CartStorage,\n        uid: User.userinfo.uid,\n        compid: User.userinfo.compid,\n        privid: User.userinfo.privid,\n        total: parseFloat(Total.total).toFixed(2)\n      };\n      console.log(OrderData);\n      Axios.post(ServerPath + 'Order.php', OrderData).then(res => {\n        console.log(res.data);\n\n        if (res.data === \"success\") {\n          localStorage.setItem('pscart', JSON.stringify([]));\n          History.push('/thankyou');\n          setTotal({\n            total: 0\n          });\n        } else {\n          setCartError(\"BŁĄD: Problem z połączeniem. Sprawdź połączenie internetowe lub spróbuj później.\");\n        }\n      });\n    }\n  };\n\n  let ShowCartItems;\n  let OrderBtn;\n\n  if (CartStorage.length === 0) {\n    ShowCartItems = React.createElement(\"div\", {\n      className: \"CartEmpty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(FaRegFrownOpen, {\n      className: \"EmptyCartIcon\",\n      size: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Tw\\xF3j koszyk jest pusty\"));\n    OrderBtn = \"\";\n  } else {\n    ShowCartItems = React.createElement(\"div\", {\n      className: \"CartItems\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, CartStorage.map((r, index) => {\n      //console.log(r.id)\n      return React.createElement(CartItem, {\n        id: r.prodid,\n        name: r.name,\n        shortdesc: r.shortdesc,\n        desc: r.desc,\n        price: r.price,\n        quantity: r.quantity,\n        prodtotal: r.prodtotal,\n        imagename: r.imagename,\n        keyid: index,\n        key: index,\n        removeitem: removeItem.bind(this, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n    }));\n    OrderBtn = React.createElement(\"div\", {\n      className: \"CartSubmitContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"CartSubmit\",\n      onClick: sendOrder.bind(this, Cart),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Z\\u0141\\xD3\\u017B ZAM\\xD3WIENIE\"));\n  } //useEffect(() => {\n  //let LocalStorage = JSON.parse(localStorage.getItem('pscart'));\n  //setCart(LocalStorage);\n  //localStorage.setItem('pscart', JSON.stringify(Cart));\n  //localStorage.setItem('pstotal', Total.total);\n  //let LocalStorage = localStorage.getItem('pstotal');\n  //}, []);\n  //localStorage.setItem('pscart', JSON.stringify(Cart));\n  //localStorage.setItem('pstotal', Total.total);\n\n\n  return React.createElement(\"div\", {\n    className: \"Cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: \"koszyk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CartContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CartList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"TW\\xD3J KOSZYK\"), ShowCartItems), React.createElement(\"div\", {\n    className: \"CartSummary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"PODSUMOWANIE\"), React.createElement(\"div\", {\n    className: \"CartSummaryInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CartSummaryContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"CartSummaryLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"SUMA\"), React.createElement(\"div\", {\n    className: \"CartSummaryTotal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, parseFloat(Total.total).toFixed(2))), OrderBtn, React.createElement(\"div\", {\n    className: \"CartError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, CartError)))));\n};\n\nexport default SCart;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/Cart/Cart.js"],"names":["React","useContext","useEffect","useState","UserContext","TotalContext","ServerPath","CartItem","TitleBar","FaRegFrownOpen","Axios","useHistory","SCart","User","setUser","Total","setTotal","CartError","setCartError","CartStorage","JSON","parse","localStorage","getItem","Cart","setCart","articles","uid","userinfo","id","removeItem","index","CartStorageN","slice","splice","setItem","stringify","cartarray","sum","Object","values","map","obj","push","prodtotal","reduce","el","console","log","total","History","sendOrder","pathname","addProps","cartoption","addinfo","OrderData","compid","privid","parseFloat","toFixed","post","then","res","data","ShowCartItems","OrderBtn","length","r","prodid","name","shortdesc","desc","price","quantity","imagename","bind"],"mappings":"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","sourcesContent":["/*\r\n    Plik:               Cart.js\r\n    Funkcja:            STRONA PODSUMOWANIA ZAKUPÓW - KOSZYK\r\n    Opis:               Strona wyświetlająca dodane artykuły do koszyka i pokazująca sumę należności za zakupy\r\n    Elementy:           Nawigacja górna (Navbar), \r\n                        Logo (PS Logo), \r\n                        Searching Bar (SearchBar), \r\n                        Przycisk Zaloguj (LogBtn => Login.js), \r\n                        Przycisk Koszyka (CartBtn => Cart.js), \r\n                        Suma zakupów {props.totalprice} - wyświetlane w przycisku Koszyk\r\n                        Nawigacja dolna - sklep (ArtNav)\r\n    Przykład użycia:    Komponent bazowy wyświetlany w App.js - <Header totalprice={suma} />\r\n    Dodatkowe info:     <Navlink> - list przekierowujący do odpowiedniego kontenera w routingu - routing w pliku głównym App.js\r\n*/\r\n\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { UserContext, TotalContext, ServerPath } from '../App';\r\nimport CartItem from '../../components/CartItem/CartItem';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport './Cart.scss';\r\nimport { FaRegFrownOpen } from 'react-icons/fa';\r\nimport Axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SCart = () => {\r\n\r\n    const [User, setUser] = useContext(UserContext);\r\n    const [Total, setTotal] = useContext(TotalContext);\r\n    const [CartError, setCartError] = useState();\r\n\r\n\r\n    let CartStorage = JSON.parse(localStorage.getItem('pscart'));\r\n    const [Cart, setCart] = useState({articles: [CartStorage], uid: User.userinfo.id})\r\n    //setCart(CartStorage)\r\n\r\n    const removeItem = (index) => {\r\n        let CartStorageN = CartStorage.slice();\r\n        CartStorageN.splice(index, 1);\r\n        localStorage.setItem('pscart', JSON.stringify(CartStorageN));\r\n\r\n        const cartarray = [];\r\n    \r\n        const sum = Object.values(CartStorageN)\r\n          .map(obj => { cartarray.push(obj.prodtotal); return obj.prodtotal\r\n        })\r\n          .reduce((sum, el) => {console.log(sum+el); return sum+el; }, 0);\r\n    \r\n        CartStorage = CartStorageN;\r\n        setTotal({total: sum});\r\n    }\r\n\r\n    const History = useHistory();\r\n\r\n    const sendOrder = () => {\r\n        if (typeof(User.userinfo.uid) === 'undefined') {\r\n            console.log(\"Użytkownik nie jest zalogowany\")\r\n            History.push({\r\n                            pathname: '/login',\r\n                            addProps: {\r\n                                cartoption: true,\r\n                                addinfo: \"Aby złożyć zamówienie wymagane jest logowanie. Po zalogowaniu kliknij poniwnie przycisk złóż zamówienie.\"\r\n                            }\r\n                        });\r\n        } else {\r\n            let OrderData = {\r\n                                articles: CartStorage, \r\n                                uid: User.userinfo.uid, \r\n                                compid: User.userinfo.compid, \r\n                                privid: User.userinfo.privid,\r\n                                total: parseFloat(Total.total).toFixed(2)\r\n                            };\r\n            console.log(OrderData);\r\n            Axios.post(ServerPath + 'Order.php', OrderData)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    if (res.data === \"success\") {\r\n                        localStorage.setItem('pscart', JSON.stringify([]));\r\n                        History.push('/thankyou');\r\n                        setTotal({total: 0});\r\n                    } else {\r\n                        setCartError(\"BŁĄD: Problem z połączeniem. Sprawdź połączenie internetowe lub spróbuj później.\");\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    let ShowCartItems;\r\n    let OrderBtn;\r\n\r\n    if (CartStorage.length === 0) {\r\n        ShowCartItems = (\r\n            <div className=\"CartEmpty\">\r\n                <FaRegFrownOpen className=\"EmptyCartIcon\" size={50}/>\r\n                <p>Twój koszyk jest pusty</p>\r\n            </div>\r\n        )\r\n        OrderBtn = (\"\");\r\n    } else {\r\n        ShowCartItems = (\r\n            <div className=\"CartItems\">\r\n                {CartStorage.map((r, index) => {\r\n                    //console.log(r.id)\r\n                    return(\r\n                        <CartItem \r\n                            id={r.prodid}\r\n                            name={r.name}\r\n                            shortdesc={r.shortdesc}\r\n                            desc={r.desc}\r\n                            price={r.price}\r\n                            quantity={r.quantity}\r\n                            prodtotal={r.prodtotal}\r\n                            imagename={r.imagename}\r\n                            keyid={index}\r\n                            key={index}\r\n                            removeitem={removeItem.bind(this, index)}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n        OrderBtn = (\r\n            <div className=\"CartSubmitContainer\">\r\n                <button className=\"CartSubmit\" onClick={sendOrder.bind(this, Cart)}>ZŁÓŻ ZAMÓWIENIE</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //useEffect(() => {\r\n        //let LocalStorage = JSON.parse(localStorage.getItem('pscart'));\r\n        //setCart(LocalStorage);\r\n        //localStorage.setItem('pscart', JSON.stringify(Cart));\r\n        //localStorage.setItem('pstotal', Total.total);\r\n        //let LocalStorage = localStorage.getItem('pstotal');\r\n    //}, []);\r\n\r\n    //localStorage.setItem('pscart', JSON.stringify(Cart));\r\n    //localStorage.setItem('pstotal', Total.total);\r\n\r\n    return(\r\n        <div className=\"Cart\">\r\n            <TitleBar title=\"koszyk\"/>\r\n            <div className=\"CartContainer\">\r\n                <div className=\"CartList\">\r\n                    <h4>TWÓJ KOSZYK</h4>\r\n                    {ShowCartItems}\r\n                </div>\r\n                <div className=\"CartSummary\">\r\n                    <h4>PODSUMOWANIE</h4>\r\n                    <div className=\"CartSummaryInfo\">\r\n                        <div className=\"CartSummaryContainer\">\r\n                            <p className=\"CartSummaryLabel\">SUMA</p>\r\n                            <div className=\"CartSummaryTotal\">{parseFloat(Total.total).toFixed(2)}</div>\r\n                        </div>\r\n                        {OrderBtn}\r\n                        <div className=\"CartError\">{CartError}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SCart;"]},"metadata":{},"sourceType":"module"}