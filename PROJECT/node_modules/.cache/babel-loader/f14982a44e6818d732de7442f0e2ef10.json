{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\CartItem\\\\CartItem.js\";\nimport React, { useState, useContext } from 'react';\nimport App, { CartContext, TotalContext } from '../../containers/App';\nimport './CartItem.scss';\n\nconst CartItem = props => {\n  const [initCart, Cart] = useContext(CartContext);\n  const [initTotal, Total] = useContext(TotalContext);\n  const [counter, setCounter] = useState({\n    quantity: props.quantity\n  });\n  const [totalPrice, setTotalPrice] = useState({\n    totalprice: props.prodtotal\n  });\n\n  const Image = require('../../images/images/' + props.imagename + '.png');\n\n  let prodtotal = parseFloat(props.prodtotal).toFixed(2);\n\n  const increaseQuantity = index => {\n    let newCart = [...initCart];\n    newCart[index].quantity = newCart[index].quantity + 1;\n    newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\n    console.log(initCart);\n    setCounter({\n      quantity: newCart[index].quantity\n    });\n    setTotalPrice({\n      totalprice: newCart[index].prodtotal\n    });\n  };\n\n  const decreaseQuantity = index => {\n    if (counter.quantity > 0) {\n      let newCart = [...initCart];\n      newCart[index].quantity = newCart[index].quantity - 1;\n      setCounter({\n        quantity: newCart[index].quantity\n      });\n    }\n  };\n\n  const handleQuantity = (event, index) => {\n    let newCart = [...initCart];\n    newCart[index].quantity = parseInt(event.handler.value);\n  };\n\n  console.log(initCart[props.id].quantity);\n  return React.createElement(\"div\", {\n    className: \"CartItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"CartItemImg\",\n    src: Image,\n    alt: \"prodimg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CartItemContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"CartItemName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.name, \" - \", props.desc), React.createElement(\"div\", {\n    className: \"CartItemPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.price), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: increaseQuantity.bind(this, props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"input\", {\n    className: \"CartqInput\",\n    value: counter.quantity,\n    onChange: handleQuantity.bind(this, props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: decreaseQuantity.bind(this, props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"-\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, totalPrice.totalprice))));\n};\n\nexport default CartItem;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/CartItem/CartItem.js"],"names":["React","useState","useContext","App","CartContext","TotalContext","CartItem","props","initCart","Cart","initTotal","Total","counter","setCounter","quantity","totalPrice","setTotalPrice","totalprice","prodtotal","Image","require","imagename","parseFloat","toFixed","increaseQuantity","index","newCart","price","console","log","decreaseQuantity","handleQuantity","event","parseInt","handler","value","id","name","desc","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,GAAP,IAAcC,WAAd,EAA2BC,YAA3B,QAA+C,sBAA/C;AACA,OAAO,iBAAP;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAM,CAACC,QAAD,EAAWC,IAAX,IAAmBP,UAAU,CAACE,WAAD,CAAnC;AACA,QAAM,CAACM,SAAD,EAAYC,KAAZ,IAAqBT,UAAU,CAACG,YAAD,CAArC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;AAACa,IAAAA,QAAQ,EAAEP,KAAK,CAACO;AAAjB,GAAD,CAAtC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC;AAACgB,IAAAA,UAAU,EAAEV,KAAK,CAACW;AAAnB,GAAD,CAA5C;;AAEA,QAAMC,KAAK,GAAGC,OAAO,CAAC,yBAAyBb,KAAK,CAACc,SAA/B,GAA2C,MAA5C,CAArB;;AACA,MAAIH,SAAS,GAAGI,UAAU,CAACf,KAAK,CAACW,SAAP,CAAV,CAA4BK,OAA5B,CAAoC,CAApC,CAAhB;;AAEA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAIC,OAAO,GAAG,CAAC,GAAGlB,QAAJ,CAAd;AACAkB,IAAAA,OAAO,CAACD,KAAD,CAAP,CAAeX,QAAf,GAA0BY,OAAO,CAACD,KAAD,CAAP,CAAeX,QAAf,GAAwB,CAAlD;AACAY,IAAAA,OAAO,CAACD,KAAD,CAAP,CAAeP,SAAf,GAA2BI,UAAU,CAACI,OAAO,CAACD,KAAD,CAAP,CAAeP,SAAhB,CAAV,GAAuCI,UAAU,CAACI,OAAO,CAACD,KAAD,CAAP,CAAeE,KAAhB,CAA5E;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAZ;AAEAK,IAAAA,UAAU,CAAC;AACPC,MAAAA,QAAQ,EAAEY,OAAO,CAACD,KAAD,CAAP,CAAeX;AADlB,KAAD,CAAV;AAGAE,IAAAA,aAAa,CAAC;AACVC,MAAAA,UAAU,EAAES,OAAO,CAACD,KAAD,CAAP,CAAeP;AADjB,KAAD,CAAb;AAGH,GAZD;;AAcA,QAAMY,gBAAgB,GAAIL,KAAD,IAAW;AAChC,QAAIb,OAAO,CAACE,QAAR,GAAmB,CAAvB,EAA0B;AACtB,UAAIY,OAAO,GAAG,CAAC,GAAGlB,QAAJ,CAAd;AACAkB,MAAAA,OAAO,CAACD,KAAD,CAAP,CAAeX,QAAf,GAA0BY,OAAO,CAACD,KAAD,CAAP,CAAeX,QAAf,GAAwB,CAAlD;AAEAD,MAAAA,UAAU,CAAC;AACPC,QAAAA,QAAQ,EAAEY,OAAO,CAACD,KAAD,CAAP,CAAeX;AADlB,OAAD,CAAV;AAGH;AACJ,GATD;;AAWA,QAAMiB,cAAc,GAAG,CAACC,KAAD,EAAQP,KAAR,KAAkB;AACrC,QAAIC,OAAO,GAAG,CAAC,GAAGlB,QAAJ,CAAd;AACAkB,IAAAA,OAAO,CAACD,KAAD,CAAP,CAAeX,QAAf,GAA0BmB,QAAQ,CAACD,KAAK,CAACE,OAAN,CAAcC,KAAf,CAAlC;AACH,GAHD;;AAKAP,EAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAQ,CAACD,KAAK,CAAC6B,EAAP,CAAR,CAAmBtB,QAA/B;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,GAAG,EAAEK,KAAlC;AAAyC,IAAA,GAAG,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BZ,KAAK,CAAC8B,IAApC,SAA6C9B,KAAK,CAAC+B,IAAnD,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM/B,KAAK,CAACoB,KAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAEH,gBAAgB,CAACe,IAAjB,CAAsB,IAAtB,EAA4BhC,KAAK,CAAC6B,EAAlC,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,KAAK,EAAExB,OAAO,CAACE,QAA7C;AAAuD,IAAA,QAAQ,EAAEiB,cAAc,CAACQ,IAAf,CAAoB,IAApB,EAA0BhC,KAAK,CAAC6B,EAAhC,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAEN,gBAAgB,CAACS,IAAjB,CAAsB,IAAtB,EAA4BhC,KAAK,CAAC6B,EAAlC,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMrB,UAAU,CAACE,UAAjB,CAPJ,CAFJ,CAFJ,CADJ;AAiBH,CA3DD;;AA6DA,eAAeX,QAAf","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport App, { CartContext, TotalContext } from '../../containers/App';\r\nimport './CartItem.scss';\r\n\r\nconst CartItem = (props) => {\r\n\r\n    const [initCart, Cart] = useContext(CartContext);\r\n    const [initTotal, Total] = useContext(TotalContext);\r\n    const [counter, setCounter] = useState({quantity: props.quantity})\r\n    const [totalPrice, setTotalPrice] = useState({totalprice: props.prodtotal})\r\n\r\n    const Image = require('../../images/images/' + props.imagename + '.png');\r\n    let prodtotal = parseFloat(props.prodtotal).toFixed(2);\r\n\r\n    const increaseQuantity = (index) => {\r\n        let newCart = [...initCart];\r\n        newCart[index].quantity = newCart[index].quantity+1;\r\n        newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\r\n        console.log(initCart);\r\n        \r\n        setCounter({\r\n            quantity: newCart[index].quantity\r\n        })\r\n        setTotalPrice({\r\n            totalprice: newCart[index].prodtotal\r\n        })\r\n    }\r\n\r\n    const decreaseQuantity = (index) => {\r\n        if (counter.quantity > 0) {\r\n            let newCart = [...initCart];\r\n            newCart[index].quantity = newCart[index].quantity-1;\r\n\r\n            setCounter({\r\n                quantity: newCart[index].quantity\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (event, index) => {\r\n        let newCart = [...initCart];\r\n        newCart[index].quantity = parseInt(event.handler.value)\r\n    }\r\n\r\n    console.log(initCart[props.id].quantity)\r\n\r\n    return(\r\n        <div className=\"CartItem\">\r\n            <img className=\"CartItemImg\" src={Image} alt=\"prodimg\"/>\r\n            <div className=\"CartItemContainer\">\r\n                <h4 className=\"CartItemName\">{props.name} - {props.desc}</h4>\r\n                <div className=\"CartItemPrice\">\r\n                    <div>{props.price}</div>\r\n                    <div>\r\n                        <button className=\"qBtn\" onClick={increaseQuantity.bind(this, props.id)}>+</button>\r\n                        <input className=\"CartqInput\" value={counter.quantity} onChange={handleQuantity.bind(this, props.id)}/>\r\n                        <button className=\"qBtn\" onClick={decreaseQuantity.bind(this, props.id)}>-</button>\r\n                    </div>\r\n                    <div>{totalPrice.totalprice}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n"]},"metadata":{},"sourceType":"module"}