{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\CartItem\\\\CartItem.js\";\nimport React, { useState, useContext } from 'react';\nimport { CartContext, TotalContext } from '../../containers/App';\nimport './CartItem.scss';\nimport { TiDelete } from \"react-icons/ti\";\n\nconst increaseQuantity2 = (index, state) => {\n  let newState = [...state];\n  newState[index].quantity = newState[index].quantity + 1;\n  newState[index].prodtotal = parseFloat(newState[index].prodtotal) + parseFloat(newState[index].price);\n};\n\nconst CartItem = props => {\n  const [initCart, Cart] = useContext(CartContext); // stan globalny - stan koszyka\n\n  const [initTotal, Total] = useContext(TotalContext); // stan globalny - suma do zapłaty\n\n  const [counter, setCounter] = useState({\n    quantity: props.quantity\n  }); // stan lokalny - wyświetla ilość produktu\n\n  const [totalPrice, setTotalPrice] = useState({\n    totalprice: props.prodtotal\n  }); // stan lokalny - wyświetla sumę do zapłaty\n\n  const Image = require('../../images/images/' + props.imagename + '.png'); // Ścieżka do zdjęcia\n\n\n  let ProdImgStyle;\n  ProdImgStyle = {\n    // Stylizacja zdjęcia - zdjęcie jako tło karty\n    backgroundImage: \"url(\" + Image + \")\"\n  };\n\n  const increaseQuantity = index => {\n    let newCart = [...initCart];\n    newCart[index].quantity = newCart[index].quantity + 1;\n    newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\n    setCounter({\n      quantity: newCart[index].quantity\n    });\n    setTotalPrice({\n      totalprice: newCart[index].prodtotal\n    });\n    Total({\n      total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\n    });\n  };\n\n  const decreaseQuantity = index => {\n    if (counter.quantity > 1) {\n      let newCart = [...initCart];\n      newCart[index].quantity = newCart[index].quantity - 1;\n      newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\n      setCounter({\n        quantity: newCart[index].quantity\n      });\n      setTotalPrice({\n        totalprice: newCart[index].prodtotal\n      });\n      Total({\n        total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"CartItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CartItemImg\",\n    style: ProdImgStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CartItemContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"CartItemName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.name, \" - \", props.desc), React.createElement(\"div\", {\n    className: \"CartItemPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CartProdPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, parseFloat(props.price).toFixed(2)), React.createElement(\"div\", {\n    className: \"CartItemPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: increaseQuantity2.bind(this, props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"input\", {\n    className: \"CartqInput\",\n    type: \"text\",\n    value: counter.quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: decreaseQuantity.bind(this, props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"-\")), React.createElement(\"div\", {\n    className: \"CartItemTotal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, parseFloat(totalPrice.totalprice).toFixed(2)))), React.createElement(\"button\", {\n    className: \"CartRemBtn\",\n    onClick: props.removeitem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(TiDelete, {\n    size: 30,\n    className: \"RemBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n};\n\nexport default CartItem; //<img className=\"CartItemImg\" src={Image} alt=\"prodimg\"/>","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/CartItem/CartItem.js"],"names":["React","useState","useContext","CartContext","TotalContext","TiDelete","increaseQuantity2","index","state","newState","quantity","prodtotal","parseFloat","price","CartItem","props","initCart","Cart","initTotal","Total","counter","setCounter","totalPrice","setTotalPrice","totalprice","Image","require","imagename","ProdImgStyle","backgroundImage","increaseQuantity","newCart","total","decreaseQuantity","name","desc","toFixed","bind","id","removeitem"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { CartContext, TotalContext } from '../../containers/App';\r\nimport './CartItem.scss';\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\nconst increaseQuantity2 = (index, state) => {\r\n    let newState = [...state];\r\n    newState[index].quantity = newState[index].quantity+1;\r\n    newState[index].prodtotal = parseFloat(newState[index].prodtotal) + parseFloat(newState[index].price);\r\n}\r\n\r\nconst CartItem = (props) => {\r\n\r\n    const [initCart, Cart] = useContext(CartContext);                               // stan globalny - stan koszyka\r\n    const [initTotal, Total] = useContext(TotalContext);                            // stan globalny - suma do zapłaty\r\n    const [counter, setCounter] = useState({quantity: props.quantity})              // stan lokalny - wyświetla ilość produktu\r\n    const [totalPrice, setTotalPrice] = useState({totalprice: props.prodtotal})     // stan lokalny - wyświetla sumę do zapłaty\r\n\r\n    const Image = require('../../images/images/' + props.imagename + '.png');       // Ścieżka do zdjęcia\r\n\r\n    let ProdImgStyle;\r\n    ProdImgStyle = {                                                                // Stylizacja zdjęcia - zdjęcie jako tło karty\r\n        backgroundImage: \"url(\" + Image + \")\"\r\n    }\r\n\r\n\r\n\r\n    const increaseQuantity = (index) => {\r\n        let newCart = [...initCart];\r\n        newCart[index].quantity = newCart[index].quantity+1;\r\n        newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\r\n        \r\n        setCounter({\r\n            quantity: newCart[index].quantity\r\n        })\r\n        setTotalPrice({\r\n            totalprice: newCart[index].prodtotal\r\n        })\r\n        Total({\r\n            total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\r\n        })\r\n    }\r\n\r\n    const decreaseQuantity = (index) => {\r\n        if (counter.quantity > 1) {\r\n            let newCart = [...initCart];\r\n            newCart[index].quantity = newCart[index].quantity-1;\r\n            newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\r\n\r\n            setCounter({\r\n                quantity: newCart[index].quantity\r\n            })\r\n            setTotalPrice({\r\n                totalprice: newCart[index].prodtotal\r\n            })\r\n            Total({\r\n                total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"CartItem\">\r\n            <div className=\"CartItemImg\" style={ProdImgStyle}></div>\r\n            <div className=\"CartItemContainer\">\r\n                <h4 className=\"CartItemName\">{props.name} - {props.desc}</h4>\r\n                <div className=\"CartItemPrice\">\r\n                    <div className=\"CartProdPrice\">{parseFloat(props.price).toFixed(2)}</div>\r\n                    <div className=\"CartItemPanel\">\r\n                        <button className=\"qBtn\" onClick={increaseQuantity2.bind(this, props.id)}>+</button>\r\n                        <input className=\"CartqInput\" type=\"text\" value={counter.quantity}/>\r\n                        <button className=\"qBtn\" onClick={decreaseQuantity.bind(this, props.id)}>-</button>\r\n                    </div>\r\n                    <div className=\"CartItemTotal\">\r\n                        {parseFloat(totalPrice.totalprice).toFixed(2)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className=\"CartRemBtn\" onClick={props.removeitem}><TiDelete size={30} className=\"RemBtn\"/></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n\r\n//<img className=\"CartItemImg\" src={Image} alt=\"prodimg\"/>\r\n"]},"metadata":{},"sourceType":"module"}