{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\SearchResult\\\\SearchResult.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport './SearchResult.scss';\nimport ArtCard from '../../components/ArtCard/ArtCard';\nimport Cookies from 'js-cookie';\nimport Axios from 'axios';\nimport { UserContext, ServerPath } from '../App';\nimport TitleBar from '../../components/TitleBar/TitleBar';\n\nconst SearchResult = props => {\n  const [User, setUser] = useContext(UserContext);\n  const [SearchHook, setSearchHook] = useState({}); //const [ReadCookie, setReadCookie] = useState();\n\n  let SearchingCookie = Cookies.get('pssearching');\n  let DecodedCookie = decodeURIComponent(SearchingCookie);\n  let InfoTxt = \"Wyniki wyszukiwania dla frazy: \" + DecodedCookie; //let showCards;\n\n  console.log(props.location.searchProps);\n  /*\r\n      if (props.length === 0) {\r\n          if (DecodedCookie !== 'undefined') {\r\n              Axios.post(ServerPath + 'Search.php',\r\n              DecodedCookie)\r\n              .then(function (res) {\r\n                  setUser({...User, searchmemo: res.data});\r\n              })\r\n              let showCards = (\r\n                  <div className=\"ProdFlexbox\">\r\n                      {User.searchmemo.map((r, index) => {\r\n                          return(\r\n                              <ArtCard \r\n                                  imagename={r.p_code}\r\n                                  prodid = {r.p_id}\r\n                                  name = {r.p_name}\r\n                                  shortdesc = {r.p_shortdescription}\r\n                                  description = {r.p_description}\r\n                                  price={r.p_price}\r\n                                  key={index}\r\n                              />\r\n                          )\r\n                      })}\r\n                  </div>\r\n              )\r\n          } else {\r\n              showCards = <h4>Brak wyników</h4>\r\n          }\r\n      } else {\r\n          let showCards = (\r\n              <div className=\"ProdFlexbox\">\r\n                  {User.searchmemo.map((r, index) => {\r\n                      return(\r\n                          <ArtCard \r\n                              imagename={r.p_code}\r\n                              prodid = {r.p_id}\r\n                              name = {r.p_name}\r\n                              shortdesc = {r.p_shortdescription}\r\n                              description = {r.p_description}\r\n                              price={r.p_price}\r\n                              key={index}\r\n                          />\r\n                      )\r\n                  })}\r\n              </div>\r\n          )\r\n      }\r\n  */\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: InfoTxt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), showCards);\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/SearchResult/SearchResult.js"],"names":["React","useEffect","useContext","useState","ArtCard","Cookies","Axios","UserContext","ServerPath","TitleBar","SearchResult","props","User","setUser","SearchHook","setSearchHook","SearchingCookie","get","DecodedCookie","decodeURIComponent","InfoTxt","console","log","location","searchProps","showCards"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,qBAAP;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,QAAxC;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,UAAU,CAACK,WAAD,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C,CAF4B,CAG5B;;AAEA,MAAIa,eAAe,GAAGX,OAAO,CAACY,GAAR,CAAY,aAAZ,CAAtB;AACA,MAAIC,aAAa,GAAGC,kBAAkB,CAACH,eAAD,CAAtC;AACA,MAAII,OAAO,GAAG,oCAAoCF,aAAlD,CAP4B,CAS5B;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,QAAN,CAAeC,WAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKK,SAFL,CADJ;AAMH,CApED;;AAsEA,eAAef,YAAf","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\r\nimport './SearchResult.scss';\r\nimport ArtCard from '../../components/ArtCard/ArtCard';\r\nimport Cookies from 'js-cookie';\r\nimport Axios from 'axios';\r\nimport { UserContext, ServerPath } from '../App';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\n\r\nconst SearchResult = (props) => {\r\n    const [User, setUser] = useContext(UserContext);\r\n    const [SearchHook, setSearchHook] = useState({});\r\n    //const [ReadCookie, setReadCookie] = useState();\r\n\r\n    let SearchingCookie = Cookies.get('pssearching');\r\n    let DecodedCookie = decodeURIComponent(SearchingCookie);\r\n    let InfoTxt = \"Wyniki wyszukiwania dla frazy: \" + DecodedCookie;\r\n\r\n    //let showCards;\r\n    console.log(props.location.searchProps);\r\n\r\n    /*\r\n        if (props.length === 0) {\r\n            if (DecodedCookie !== 'undefined') {\r\n                Axios.post(ServerPath + 'Search.php',\r\n                DecodedCookie)\r\n                .then(function (res) {\r\n                    setUser({...User, searchmemo: res.data});\r\n                })\r\n                let showCards = (\r\n                    <div className=\"ProdFlexbox\">\r\n                        {User.searchmemo.map((r, index) => {\r\n                            return(\r\n                                <ArtCard \r\n                                    imagename={r.p_code}\r\n                                    prodid = {r.p_id}\r\n                                    name = {r.p_name}\r\n                                    shortdesc = {r.p_shortdescription}\r\n                                    description = {r.p_description}\r\n                                    price={r.p_price}\r\n                                    key={index}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                )\r\n            } else {\r\n                showCards = <h4>Brak wyników</h4>\r\n            }\r\n        } else {\r\n            let showCards = (\r\n                <div className=\"ProdFlexbox\">\r\n                    {User.searchmemo.map((r, index) => {\r\n                        return(\r\n                            <ArtCard \r\n                                imagename={r.p_code}\r\n                                prodid = {r.p_id}\r\n                                name = {r.p_name}\r\n                                shortdesc = {r.p_shortdescription}\r\n                                description = {r.p_description}\r\n                                price={r.p_price}\r\n                                key={index}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n    */\r\n\r\n\r\n    return(\r\n        <div>\r\n            <TitleBar title={InfoTxt}/>\r\n            {showCards}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResult;"]},"metadata":{},"sourceType":"module"}