{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\Account\\\\Account.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Account.scss';\nimport { UserContext, ServerPath } from '../../containers/App';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { FaRegUserCircle } from 'react-icons/fa';\n\nconst Account = () => {\n  const [User, setUser] = useContext(UserContext);\n  const [AccountInfo, setAccountInfo] = useState([]);\n  const [AccountFound, setAccountFound] = useState(false);\n  let UserId = Cookies.get('psid');\n  let DecodedUserId = decodeURIComponent(UserId);\n  let UserName = Cookies.get('psname');\n  let DecodedUserName = decodeURIComponent(UserName);\n  const [UserData, setUserData] = useState({\n    id: DecodedUserId,\n    login: DecodedUserName\n  });\n  useEffect(() => {\n    if (DecodedUserId !== \"undefined\") {\n      Axios.post(ServerPath + 'UserAccount.php', UserData).then(res => {\n        setAccountInfo(res.data);\n        console.log(res.data);\n        setAccountFound(true);\n      });\n    }\n  }, []);\n  let AccountData;\n  let name, surname, fullname, street, streetno, city, zip, nip, regon;\n  let AccountType;\n\n  if (AccountFound) {\n    AccountInfo.map((r, index) => {\n      console.log(r.cc_name);\n\n      if (r.cc_name == null) {\n        AccountType = \"prywatne\";\n        name = r.ci_name;\n        surname = r.ci_surname;\n        fullname = r.ci_name + \" \" + r.ci_surname;\n        street = r.ci_street;\n        streetno = r.ci_number;\n        city = r.ci_city;\n        zip = r.ci_zip;\n      } else {\n        AccountType = \"firmowe\";\n        name = r.cc_name;\n        fullname = r.cc_name;\n        street = r.cc_street;\n        streetno = r.cc_number;\n        city = r.cc_city;\n        zip = r.cc_zip;\n        nip = r.cc_NIP;\n        regon = r.cc_REGON;\n      } //key = {index};\n\n    });\n\n    if (AccountType === \"prywatne\") {\n      AccountData = React.createElement(\"div\", {\n        className: \"AccountData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AccountName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(FaRegUserCircle, {\n        size: 50,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, fullname), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Konto \", AccountType)));\n    }\n  } else {\n    AccountData = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Brak danych\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"SiteContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: \"Dane konta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Rodzaj konta: \", AccountType), AccountData);\n};\n\nexport default Account;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/Account/Account.js"],"names":["React","useContext","useEffect","useState","UserContext","ServerPath","TitleBar","Axios","Cookies","FaRegUserCircle","Account","User","setUser","AccountInfo","setAccountInfo","AccountFound","setAccountFound","UserId","get","DecodedUserId","decodeURIComponent","UserName","DecodedUserName","UserData","setUserData","id","login","post","then","res","data","console","log","AccountData","name","surname","fullname","street","streetno","city","zip","nip","regon","AccountType","map","r","index","cc_name","ci_name","ci_surname","ci_street","ci_number","ci_city","ci_zip","cc_street","cc_number","cc_city","cc_zip","cc_NIP","cc_REGON"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './Account.scss';\r\nimport { UserContext, ServerPath } from '../../containers/App';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\n\r\nconst Account = () => {\r\n    const [User, setUser] = useContext(UserContext);\r\n    const [AccountInfo, setAccountInfo] = useState([]);\r\n    const [AccountFound, setAccountFound] = useState(false);\r\n    let UserId = Cookies.get('psid');\r\n    let DecodedUserId = decodeURIComponent(UserId);\r\n    let UserName = Cookies.get('psname');\r\n    let DecodedUserName = decodeURIComponent(UserName);\r\n    const [UserData, setUserData] = useState({\r\n        id: DecodedUserId,\r\n        login: DecodedUserName\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (DecodedUserId !== \"undefined\") {\r\n            Axios.post(ServerPath   + 'UserAccount.php', UserData)\r\n            .then(res => {\r\n                setAccountInfo(res.data);\r\n                console.log(res.data);\r\n                setAccountFound(true);\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    let AccountData;\r\n    let name, surname, fullname, street, streetno, city, zip, nip, regon;\r\n    let AccountType;\r\n\r\n    if (AccountFound) {\r\n        AccountInfo.map((r, index) => {\r\n            console.log(r.cc_name);\r\n            if (r.cc_name == null) {\r\n                AccountType = \"prywatne\";\r\n                name = r.ci_name;\r\n                surname = r.ci_surname;\r\n                fullname = r.ci_name + \" \" + r.ci_surname\r\n                street = r.ci_street;\r\n                streetno = r.ci_number;\r\n                city = r.ci_city;\r\n                zip = r.ci_zip;\r\n            } else {\r\n                AccountType = \"firmowe\"\r\n                name = r.cc_name;\r\n                fullname = r.cc_name;\r\n                street = r.cc_street;\r\n                streetno = r.cc_number;\r\n                city = r.cc_city;\r\n                zip = r.cc_zip;\r\n                nip = r.cc_NIP;\r\n                regon = r.cc_REGON;\r\n            }\r\n            //key = {index};\r\n        })\r\n        if (AccountType === \"prywatne\") {\r\n            AccountData = (\r\n                <div className=\"AccountData\">\r\n                    <div className=\"AccountName\">\r\n                        <FaRegUserCircle size={50}/>\r\n                        <h1>{fullname}</h1>\r\n                        <div>Konto {AccountType}</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    } else {\r\n        AccountData = <p>Brak danych</p>\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"SiteContainer\">\r\n            <TitleBar title=\"Dane konta\"/>\r\n            <h4>Rodzaj konta: {AccountType}</h4>\r\n            {AccountData}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account;"]},"metadata":{},"sourceType":"module"}