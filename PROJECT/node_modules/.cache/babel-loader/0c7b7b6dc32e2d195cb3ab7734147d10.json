{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\SStationary\\\\SStationary.js\";\n\n/*\r\n    Plik:               SOffice.js\r\n    Funkcja:            SKLEP - ARTYKUŁY BIUROWE\r\n    Opis:               Strona sklepu wyświetlająca artykuły z kategorii art. biurowe.\r\n    Elementy:           Product Query - ComponentDidMount(), \r\n                        Karta Produktu dla każdego z elementów (ArdCard)\r\n    Przykład użycia:    N/A\r\n    Dodatkowe info:     Query + zwrócenie wyniku w kartach\r\n*/\nimport React, { useState } from 'react';\nimport ArtCard from '../../components/ArtCard/ArtCard'; // import komponentu karty produktu\n\nimport axios from 'axios';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport \"../../components/ArtCard/ArtCard.scss\";\nimport { ServerPath } from '../App';\n\nconst SStationary = () => {\n  const [Products, setProducts] = useState([]);\n  useEffect(() => {\n    axios.get(ServerPath + 'SStationary.php').then(res => {\n      setProducts(res.data);\n    });\n  }, []);\n  let showCards; // pusta zmienna dla tablicy z wynikami zapytania\n\n  showCards = React.createElement(\"div\", {\n    className: \"ProdFlexbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, this.state.products.map((record, index) => {\n    // mapowanie zapytania\n    return React.createElement(ArtCard, {\n      imagename: record.p_code,\n      prodid: record.p_id,\n      name: record.p_name,\n      shortdesc: record.p_shortdescription,\n      description: record.p_description,\n      price: record.p_price,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }));\n  return React.createElement(\"div\", {\n    className: \"MainProductBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: \"ARTYKU\\u0141Y PI\\u015AMIENNICZE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), showCards);\n};\n\nexport default SOffice; // className Flexbox is stored in scss for ArtCard to not repeat it for all the containers!","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/SStationary/SStationary.js"],"names":["React","useState","ArtCard","axios","TitleBar","ServerPath","SStationary","Products","setProducts","useEffect","get","then","res","data","showCards","state","products","map","record","index","p_code","p_id","p_name","p_shortdescription","p_description","p_price","SOffice"],"mappings":";;AAAA;;;;;;;;;AAUA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,kCAApB,C,CAAoE;;AACpE,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,uCAAP;AACA,SAASC,UAAT,QAA2B,QAA3B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAQ,EAAAA,SAAS,CAAC,MAAM;AACZN,IAAAA,KAAK,CAACO,GAAN,CAAUL,UAAU,GAAG,iBAAvB,EACCM,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,WAAW,CAACI,GAAG,CAACC,IAAL,CAAX;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,MAAIC,SAAJ,CAXsB,CAW0C;;AAEhEA,EAAAA,SAAS,GACL;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAAa;AACrD,WACI,oBAAC,OAAD;AACI,MAAA,SAAS,EAAED,MAAM,CAACE,MADtB;AAEI,MAAA,MAAM,EAAIF,MAAM,CAACG,IAFrB;AAGI,MAAA,IAAI,EAAEH,MAAM,CAACI,MAHjB;AAII,MAAA,SAAS,EAAEJ,MAAM,CAACK,kBAJtB;AAKI,MAAA,WAAW,EAAEL,MAAM,CAACM,aALxB;AAMI,MAAA,KAAK,EAAEN,MAAM,CAACO,OANlB;AAOI,MAAA,GAAG,EAAEN,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAWH,GAZA,CADL,CADJ;AAkBA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,iCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKL,SAFL,CADJ;AAMH,CArCD;;AAuCA,eAAeY,OAAf,C,CAEA","sourcesContent":["/*\r\n    Plik:               SOffice.js\r\n    Funkcja:            SKLEP - ARTYKUŁY BIUROWE\r\n    Opis:               Strona sklepu wyświetlająca artykuły z kategorii art. biurowe.\r\n    Elementy:           Product Query - ComponentDidMount(), \r\n                        Karta Produktu dla każdego z elementów (ArdCard)\r\n    Przykład użycia:    N/A\r\n    Dodatkowe info:     Query + zwrócenie wyniku w kartach\r\n*/\r\n\r\nimport React, { useState } from 'react';\r\nimport ArtCard from '../../components/ArtCard/ArtCard';             // import komponentu karty produktu\r\nimport axios from 'axios';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport \"../../components/ArtCard/ArtCard.scss\";\r\nimport { ServerPath } from '../App';\r\n\r\nconst SStationary = () => {\r\n\r\n    const [Products, setProducts] = useState([]);  \r\n    \r\n    useEffect(() => {\r\n        axios.get(ServerPath + 'SStationary.php')\r\n        .then(res => {\r\n            setProducts(res.data);\r\n        })\r\n    }, [])\r\n\r\n    let showCards;                                                  // pusta zmienna dla tablicy z wynikami zapytania\r\n\r\n    showCards = (\r\n        <div className=\"ProdFlexbox\">\r\n            {this.state.products.map((record, index) => {            // mapowanie zapytania\r\n                return(\r\n                    <ArtCard\r\n                        imagename={record.p_code}\r\n                        prodid = {record.p_id}\r\n                        name={record.p_name}\r\n                        shortdesc={record.p_shortdescription}\r\n                        description={record.p_description}\r\n                        price={record.p_price}\r\n                        key={index}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n\r\n    return(\r\n        <div className=\"MainProductBox\">\r\n            <TitleBar title=\"ARTYKUŁY PIŚMIENNICZE\"/>\r\n            {showCards}\r\n        </div>     \r\n    )\r\n}\r\n\r\nexport default SOffice;\r\n\r\n// className Flexbox is stored in scss for ArtCard to not repeat it for all the containers!"]},"metadata":{},"sourceType":"module"}