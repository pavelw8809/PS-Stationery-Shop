{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\ArtDetails\\\\ArtDetails.js\";\nimport React from 'react';\nimport './ArtDetails.scss';\n\nconst artdetails = props => {\n  const Image = require('../../images/images/' + 'CC3' + '.png'); // Ścieżka do zdjęcia\n\n\n  let ProdImgStyle;\n  ProdImgStyle = {\n    // Stylizacja zdjęcia - zdjęcie jako tło karty\n    backgroundImage: \"url(\" + Image + \")\",\n    backgroundColor: 'white'\n  };\n\n  const increaseQuantity = index => {\n    let newCart = [...initCart];\n    newCart[index].quantity = newCart[index].quantity + 1;\n    newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\n    setCounter({\n      quantity: newCart[index].quantity\n    });\n    setTotalPrice({\n      totalprice: newCart[index].prodtotal\n    });\n    Total({\n      total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\n    });\n  };\n\n  const decreaseQuantity = index => {\n    if (counter.quantity > 1) {\n      let newCart = [...initCart];\n      newCart[index].quantity = newCart[index].quantity - 1;\n      newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\n      setCounter({\n        quantity: newCart[index].quantity\n      });\n      setTotalPrice({\n        totalprice: newCart[index].prodtotal\n      });\n      Total({\n        total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\n      });\n    }\n  };\n\n  console.log(props.location.artProps);\n  return React.createElement(\"div\", {\n    className: \"ArtDetails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ProdImgContainer\",\n    style: ProdImgStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n};\n\nexport default artdetails;\n/*\r\n            <p>{props.location.artProps.name}</p>\r\n            <p>{props.location.artProps.shortdesc}</p>\r\n            <p>{props.location.artProps.description}</p>\r\n            <p>{props.location.artProps.price}</p>\r\n*/","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/ArtDetails/ArtDetails.js"],"names":["React","artdetails","props","Image","require","ProdImgStyle","backgroundImage","backgroundColor","increaseQuantity","index","newCart","initCart","quantity","prodtotal","parseFloat","price","setCounter","setTotalPrice","totalprice","Total","total","initTotal","decreaseQuantity","counter","console","log","location","artProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE1B,QAAMC,KAAK,GAAGC,OAAO,CAAC,yBAAyB,KAAzB,GAAiC,MAAlC,CAArB,CAF0B,CAE4C;;;AAEtE,MAAIC,YAAJ;AACAA,EAAAA,YAAY,GAAG;AAAiE;AAC5EC,IAAAA,eAAe,EAAE,SAASH,KAAT,GAAiB,GADvB;AAEXI,IAAAA,eAAe,EAAE;AAFN,GAAf;;AAKA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAIC,OAAO,GAAG,CAAC,GAAGC,QAAJ,CAAd;AACAD,IAAAA,OAAO,CAACD,KAAD,CAAP,CAAeG,QAAf,GAA0BF,OAAO,CAACD,KAAD,CAAP,CAAeG,QAAf,GAAwB,CAAlD;AACAF,IAAAA,OAAO,CAACD,KAAD,CAAP,CAAeI,SAAf,GAA2BC,UAAU,CAACJ,OAAO,CAACD,KAAD,CAAP,CAAeI,SAAhB,CAAV,GAAuCC,UAAU,CAACJ,OAAO,CAACD,KAAD,CAAP,CAAeM,KAAhB,CAA5E;AAEAC,IAAAA,UAAU,CAAC;AACPJ,MAAAA,QAAQ,EAAEF,OAAO,CAACD,KAAD,CAAP,CAAeG;AADlB,KAAD,CAAV;AAGAK,IAAAA,aAAa,CAAC;AACVC,MAAAA,UAAU,EAAER,OAAO,CAACD,KAAD,CAAP,CAAeI;AADjB,KAAD,CAAb;AAGAM,IAAAA,KAAK,CAAC;AACFC,MAAAA,KAAK,EAAEN,UAAU,CAACO,SAAS,CAACD,KAAX,CAAV,GAA8BN,UAAU,CAACJ,OAAO,CAACD,KAAD,CAAP,CAAeM,KAAhB;AAD7C,KAAD,CAAL;AAGH,GAdD;;AAgBA,QAAMO,gBAAgB,GAAIb,KAAD,IAAW;AAChC,QAAIc,OAAO,CAACX,QAAR,GAAmB,CAAvB,EAA0B;AACtB,UAAIF,OAAO,GAAG,CAAC,GAAGC,QAAJ,CAAd;AACAD,MAAAA,OAAO,CAACD,KAAD,CAAP,CAAeG,QAAf,GAA0BF,OAAO,CAACD,KAAD,CAAP,CAAeG,QAAf,GAAwB,CAAlD;AACAF,MAAAA,OAAO,CAACD,KAAD,CAAP,CAAeI,SAAf,GAA2BC,UAAU,CAACJ,OAAO,CAACD,KAAD,CAAP,CAAeI,SAAhB,CAAV,GAAuCC,UAAU,CAACJ,OAAO,CAACD,KAAD,CAAP,CAAeM,KAAhB,CAA5E;AAEAC,MAAAA,UAAU,CAAC;AACPJ,QAAAA,QAAQ,EAAEF,OAAO,CAACD,KAAD,CAAP,CAAeG;AADlB,OAAD,CAAV;AAGAK,MAAAA,aAAa,CAAC;AACVC,QAAAA,UAAU,EAAER,OAAO,CAACD,KAAD,CAAP,CAAeI;AADjB,OAAD,CAAb;AAGAM,MAAAA,KAAK,CAAC;AACFC,QAAAA,KAAK,EAAEN,UAAU,CAACO,SAAS,CAACD,KAAX,CAAV,GAA8BN,UAAU,CAACJ,OAAO,CAACD,KAAD,CAAP,CAAeM,KAAhB;AAD7C,OAAD,CAAL;AAGH;AACJ,GAhBD;;AAkBAS,EAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAK,CAACwB,QAAN,CAAeC,QAA3B;AACA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAEtB,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAMH,CAnDD;;AAqDA,eAAeJ,UAAf;AAEA","sourcesContent":["import React from 'react';\r\nimport './ArtDetails.scss';\r\n\r\nconst artdetails = (props) => {\r\n\r\n    const Image = require('../../images/images/' + 'CC3' + '.png');       // Ścieżka do zdjęcia\r\n\r\n    let ProdImgStyle;\r\n    ProdImgStyle = {                                                                // Stylizacja zdjęcia - zdjęcie jako tło karty\r\n        backgroundImage: \"url(\" + Image + \")\",\r\n        backgroundColor: 'white',\r\n    }\r\n\r\n    const increaseQuantity = (index) => {\r\n        let newCart = [...initCart];\r\n        newCart[index].quantity = newCart[index].quantity+1;\r\n        newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\r\n        \r\n        setCounter({\r\n            quantity: newCart[index].quantity\r\n        })\r\n        setTotalPrice({\r\n            totalprice: newCart[index].prodtotal\r\n        })\r\n        Total({\r\n            total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\r\n        })\r\n    }\r\n\r\n    const decreaseQuantity = (index) => {\r\n        if (counter.quantity > 1) {\r\n            let newCart = [...initCart];\r\n            newCart[index].quantity = newCart[index].quantity-1;\r\n            newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\r\n\r\n            setCounter({\r\n                quantity: newCart[index].quantity\r\n            })\r\n            setTotalPrice({\r\n                totalprice: newCart[index].prodtotal\r\n            })\r\n            Total({\r\n                total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\r\n            })\r\n        }\r\n    }\r\n\r\n    console.log(props.location.artProps)\r\n    return(\r\n        <div className=\"ArtDetails\">\r\n            <div className=\"ProdImgContainer\" style={ProdImgStyle}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default artdetails;\r\n\r\n/*\r\n            <p>{props.location.artProps.name}</p>\r\n            <p>{props.location.artProps.shortdesc}</p>\r\n            <p>{props.location.artProps.description}</p>\r\n            <p>{props.location.artProps.price}</p>\r\n*/"]},"metadata":{},"sourceType":"module"}