{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\UserBtn\\\\UserBtn.js\";\nimport React, { useContext, useState } from 'react';\nimport './UserBtn.scss';\nimport Login from '../Login/Login';\nimport { UserContext } from '../../containers/App';\n\nconst UserBtn = props => {\n  const [User, setUser] = useContext(UserContext);\n  const [LogShow, setLogShow] = useState(false);\n  const [AccShow, setAccShow] = useState(false); // Login pop-up (if user is not logged in)\n\n  let LoginW;\n\n  const loginWindow = () => {\n    if (!LogShow) {\n      LoginW = React.createElement(\"div\", {\n        className: \"LoginW\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n      setLogShow(true);\n    } else {\n      LoginW = React.createElement(\"div\", {\n        className: \"LoginW hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n      setLogShow(false);\n    }\n  }; // Acount menu (if user is logged in)\n\n\n  let AccountMenu;\n\n  const accountMenu = () => {\n    if (!AccShow) {\n      setAccShow(true);\n    } else {\n      setAccShow(false);\n    }\n  }; // Checking if user is logged in\n\n\n  let UserInfoBtn;\n\n  if (!User.login) {\n    UserInfoBtn = React.createElement(\"button\", {\n      className: \"LogBtn\",\n      onClick: loginWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"ZALOGUJ\");\n  } else {\n    UserInfoBtn = React.createElement(\"button\", {\n      className: \"LogBtn\",\n      onClick: accountMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, User.login);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"UserBtnContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, LoginW, AccountMenu, UserInfoBtn);\n};\n\nexport default UserBtn;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/UserBtn/UserBtn.js"],"names":["React","useContext","useState","Login","UserContext","UserBtn","props","User","setUser","LogShow","setLogShow","AccShow","setAccShow","LoginW","loginWindow","AccountMenu","accountMenu","UserInfoBtn","login"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC,CAJuB,CAMvB;;AAEA,MAAIW,MAAJ;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAI,CAACL,OAAL,EAAc;AACVI,MAAAA,MAAM,GACF;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKAH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAPD,MAOO;AACHG,MAAAA,MAAM,GACF;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAhBD,CAVuB,CA4BvB;;;AAEA,MAAIK,WAAJ;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAI,CAACL,OAAL,EAAc;AACVC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD,MAEO;AACHA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAND,CAhCuB,CA0CvB;;;AAEA,MAAIK,WAAJ;;AAEA,MAAI,CAACV,IAAI,CAACW,KAAV,EAAiB;AACbD,IAAAA,WAAW,GAAG;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEH,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAd;AACH,GAFD,MAEO;AACHG,IAAAA,WAAW,GAAG;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAED,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkDT,IAAI,CAACW,KAAvD,CAAd;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,MADL,EAEKE,WAFL,EAGKE,WAHL,CADJ;AAQH,CA5DD;;AA8DA,eAAeZ,OAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport './UserBtn.scss';\r\nimport Login from '../Login/Login';\r\nimport { UserContext } from '../../containers/App';\r\n\r\nconst UserBtn = (props) => {\r\n\r\n    const [User, setUser] = useContext(UserContext);\r\n    const [LogShow, setLogShow] = useState(false);\r\n    const [AccShow, setAccShow] = useState(false);\r\n\r\n    // Login pop-up (if user is not logged in)\r\n\r\n    let LoginW;\r\n\r\n    const loginWindow = () => {\r\n        if (!LogShow) {\r\n            LoginW = (\r\n                <div className=\"LoginW\">\r\n                    <Login/>\r\n                </div>\r\n            )\r\n            setLogShow(true);\r\n        } else {\r\n            LoginW = (\r\n                <div className=\"LoginW hidden\">\r\n                    <Login/>\r\n                </div>\r\n            )\r\n            setLogShow(false);\r\n        }\r\n    }\r\n\r\n    // Acount menu (if user is logged in)\r\n\r\n    let AccountMenu;\r\n\r\n    const accountMenu = () => {\r\n        if (!AccShow) {\r\n            setAccShow(true);\r\n        } else {\r\n            setAccShow(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Checking if user is logged in\r\n\r\n    let UserInfoBtn;\r\n\r\n    if (!User.login) {\r\n        UserInfoBtn = <button className=\"LogBtn\" onClick={loginWindow}>ZALOGUJ</button>\r\n    } else {\r\n        UserInfoBtn = <button className=\"LogBtn\" onClick={accountMenu}>{User.login}</button>\r\n    }\r\n\r\n    return(\r\n        <div className=\"UserBtnContainer\">\r\n            {LoginW}\r\n            {AccountMenu}\r\n            {UserInfoBtn}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserBtn;"]},"metadata":{},"sourceType":"module"}