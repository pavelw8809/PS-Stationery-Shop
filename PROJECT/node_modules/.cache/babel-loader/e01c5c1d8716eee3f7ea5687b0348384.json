{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\ChangePassword\\\\ChangePassword.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport { ServerPath, UserContext } from '../../containers/App';\n\nconst ChangePassword = props => {\n  const [Pass, setPass] = useState({\n    oldpass: \"\",\n    newpass0: \"\",\n    newpass1: \"\"\n  });\n  const [PassError, setErrorPass] = useState();\n\n  const handlePassword = (option, event) => {\n    switch (option) {\n      case 0:\n        setPass({ ...Pass,\n          oldpass: event.target.value\n        });\n        break;\n\n      case 1:\n        setPass({ ...Pass,\n          newpass0: event.target.value\n        });\n        break;\n\n      case 2:\n        setPass({ ...Pass,\n          newpass1: event.target.value\n        });\n        break;\n    }\n  };\n\n  const changePass = () => {\n    let sendPass = false;\n    let passFormat = new RegExp(\"^(?=.{8,}$)(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?[\\\\W]).*$\");\n    let testPass = passFormat.test(Pass.newpass1);\n\n    if (Pass.oldpass.length === 0 || Pass.newpass0.length === 0 || Pass.newpass1.length === 0) {\n      setErrorPass(\"Pola nie mogą być puste\");\n      sendPass = false;\n    } else if (Pass.newpass0 !== Pass.newpass1) {\n      setErrorPass(\"Nowopodane hasła nie brzmią identycznie\");\n      sendPass = false;\n    } else if (Pass.oldpass === Pass.newpass0) {\n      setErrorPass(\"Nowe i stare hasło jest takie samo\");\n      sendPass = false;\n    } else if (!testPass) {\n      setErrorPass(\"Hasło musi mieć przynajmniej 8 znaków i składać sie z małych i dużych liter oraz cyfr i znaków specjalnych.\");\n      sendPass = false;\n    } else {\n      setErrorPass();\n      sendPass = true;\n    }\n\n    if (sendPass === true) {\n      let passData = { ...Pass,\n        userid: props.uid\n      };\n      console.log(passData);\n      Axios.post(ServerPath + \"ChangePass.php\", passData).then(res => {\n        console.log(res.data);\n\n        if (res.data === \"success\") {\n          const History = new useHistory();\n          History.push('/info');\n        }\n      });\n    }\n\n    console.log(testPass);\n  };\n\n  console.log(Pass);\n  return React.createElement(\"div\", {\n    className: \"AccountInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"PassPanelContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"PassPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"ZMIANA HAS\\u0141A\"), React.createElement(\"label\", {\n    htmlFor: \"oldpass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Stare has\\u0142o\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"oldpass\",\n    onChange: handlePassword.bind(this, 0),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"oldpass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Nowe has\\u0142o\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"oldpass\",\n    onChange: handlePassword.bind(this, 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"oldpass\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Powt\\xF3rz nowe has\\u0142o\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"oldpass\",\n    onChange: handlePassword.bind(this, 2),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"hr\", {\n    className: \"passseparator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"PassError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, PassError), React.createElement(\"div\", {\n    className: \"AccountPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: changePass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"ZMIE\\u0143 HAS\\u0141O\"), React.createElement(\"button\", {\n    onClick: props.changetab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"POWR\\xD3T\")));\n};\n\nexport default ChangePassword;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/ChangePassword/ChangePassword.js"],"names":["React","useState","useHistory","Axios","ServerPath","UserContext","ChangePassword","props","Pass","setPass","oldpass","newpass0","newpass1","PassError","setErrorPass","handlePassword","option","event","target","value","changePass","sendPass","passFormat","RegExp","testPass","test","length","passData","userid","uid","console","log","post","then","res","data","History","push","bind","changetab"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { ServerPath, UserContext } from '../../containers/App';\r\n\r\nconst ChangePassword = (props) => {\r\n\r\n    const [Pass, setPass] = useState({oldpass: \"\", newpass0: \"\", newpass1: \"\"});\r\n    const [PassError, setErrorPass] = useState();\r\n\r\n    const handlePassword = (option, event) => {\r\n        switch(option) {\r\n            case 0: setPass({...Pass, oldpass: event.target.value}); break;\r\n            case 1: setPass({...Pass, newpass0: event.target.value}); break;\r\n            case 2: setPass({...Pass, newpass1: event.target.value}); break;\r\n        }\r\n    }\r\n\r\n    const changePass = () => {\r\n        let sendPass = false;\r\n        let passFormat = new RegExp(\"^(?=.{8,}$)(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?[\\\\W]).*$\");\r\n        let testPass = passFormat.test(Pass.newpass1);\r\n        if (Pass.oldpass.length === 0 || Pass.newpass0.length === 0 || Pass.newpass1.length === 0) {\r\n            setErrorPass(\"Pola nie mogą być puste\");\r\n            sendPass = false;\r\n        } else if (Pass.newpass0 !== Pass.newpass1) {\r\n            setErrorPass(\"Nowopodane hasła nie brzmią identycznie\");\r\n            sendPass = false;\r\n        } else if (Pass.oldpass === Pass.newpass0) {\r\n            setErrorPass(\"Nowe i stare hasło jest takie samo\")\r\n            sendPass = false\r\n        } else if (!testPass) {\r\n            setErrorPass(\"Hasło musi mieć przynajmniej 8 znaków i składać sie z małych i dużych liter oraz cyfr i znaków specjalnych.\");\r\n            sendPass = false;\r\n        } else {\r\n            setErrorPass();\r\n            sendPass = true\r\n        }\r\n\r\n        if (sendPass === true) {\r\n            let passData = {...Pass, userid: props.uid};\r\n            console.log(passData);\r\n            Axios.post(ServerPath + \"ChangePass.php\", passData)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    if (res.data === \"success\") {\r\n                        const History = new useHistory();\r\n                        History.push('/info');\r\n                    }\r\n                })\r\n        }\r\n\r\n        console.log(testPass);\r\n    }\r\n\r\n    console.log(Pass);\r\n\r\n    return(\r\n        <div className=\"AccountInfo\">\r\n            <div className=\"PassPanelContainer\">\r\n                <div className=\"PassPanel\">\r\n                    <h3>ZMIANA HASŁA</h3>\r\n                    <label htmlFor=\"oldpass\">Stare hasło</label>\r\n                    <input type=\"password\" name=\"oldpass\" onChange={handlePassword.bind(this, 0)}/>\r\n                    <label htmlFor=\"oldpass\">Nowe hasło</label>\r\n                    <input type=\"password\" name=\"oldpass\" onChange={handlePassword.bind(this, 1)}/>\r\n                    <label htmlFor=\"oldpass\">Powtórz nowe hasło</label>\r\n                    <input type=\"password\" name=\"oldpass\" onChange={handlePassword.bind(this, 2)}/>\r\n                </div>\r\n                <hr className=\"passseparator\"/>\r\n            </div>\r\n            <div className=\"PassError\">{PassError}</div>\r\n            <div className=\"AccountPanel\">\r\n                <button onClick={changePass}>ZMIEŃ HASŁO</button>\r\n                <button onClick={props.changetab}>POWRÓT</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}