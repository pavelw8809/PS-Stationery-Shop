{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\SearchResult\\\\SearchResult.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport './SearchResult.scss';\nimport ArtCard from '../../components/ArtCard/ArtCard';\nimport Cookies from 'js-cookie';\nimport Axios from 'axios';\nimport { UserContext, ServerPath } from '../App';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport { FaSearch } from 'react-icons/fa';\n\nconst SearchResult = props => {\n  //const [User, setUser] = useContext(UserContext);\n  //const [SearchHook, setSearchHook] = useState({});\n  //const [Products, setProducts] = useState();\n  //const [ReadCookie, setReadCookie] = useState();\n  //let SearchingCookie = Cookies.get('pssearching');\n  //let DecodedCookie = decodeURIComponent(SearchingCookie);\n  //console.log(props.location.searchProps);\n  let showCards, InfoTxt;\n  console.log(props.location.searchProps);\n\n  if (typeof props.location.searchProps !== 'undefined') {\n    InfoTxt = \"Wyniki wyszukiwania dla frazy: \" + props.location.searchProps.searchword;\n\n    if (props.location.searchProps.searchdata.length > 0) {\n      showCards = React.createElement(\"div\", {\n        className: \"ProdFlexbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, props.location.searchProps.searchdata.map((r, index) => {\n        return React.createElement(ArtCard, {\n          imagename: r.p_code,\n          prodid: r.p_id,\n          name: r.p_name,\n          shortdesc: r.p_shortdescription,\n          description: r.p_description,\n          price: r.p_price,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      }));\n    } else {\n      showCards = React.createElement(\"div\", {\n        className: \"SearchNoResults\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(FaSearch, {\n        className: \"SearchIcon\",\n        size: 70,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Nie znaleziono \\u017Cadnych artyku\\u0142\\xF3w.\"));\n    }\n  } else {\n    InfoTxt = \"Wyniki wyszukiwania\";\n    showCards = React.createElement(\"div\", {\n      className: \"SearchNoResults\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(FaSearch, {\n      className: \"SearchIcon\",\n      size: 70,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Nie znaleziono \\u017Cadnych artyku\\u0142\\xF3w.\"));\n  }\n  /*\r\n  User.searchmemo.map((r, index) => {\r\n    })\r\n  */\n\n  /*\r\n      if (props.length === 0) {\r\n          if (DecodedCookie !== 'undefined') {\r\n              Axios.post(ServerPath + 'Search.php',\r\n              DecodedCookie)\r\n              .then(function (res) {\r\n                  setUser({...User, searchmemo: res.data});\r\n              })\r\n              let showCards = (\r\n                  <div className=\"ProdFlexbox\">\r\n                      {User.searchmemo.map((r, index) => {\r\n                          return(\r\n                              <ArtCard \r\n                                  imagename={r.p_code}\r\n                                  prodid = {r.p_id}\r\n                                  name = {r.p_name}\r\n                                  shortdesc = {r.p_shortdescription}\r\n                                  description = {r.p_description}\r\n                                  price={r.p_price}\r\n                                  key={index}\r\n                              />\r\n                          )\r\n                      })}\r\n                  </div>\r\n              )\r\n          } else {\r\n              showCards = <h4>Brak wynik√≥w</h4>\r\n          }\r\n      } else {\r\n          let showCards = (\r\n              <div className=\"ProdFlexbox\">\r\n                  {User.searchmemo.map((r, index) => {\r\n                      return(\r\n                          <ArtCard \r\n                              imagename={r.p_code}\r\n                              prodid = {r.p_id}\r\n                              name = {r.p_name}\r\n                              shortdesc = {r.p_shortdescription}\r\n                              description = {r.p_description}\r\n                              price={r.p_price}\r\n                              key={index}\r\n                          />\r\n                      )\r\n                  })}\r\n              </div>\r\n          )\r\n      }\r\n  */\n\n\n  return React.createElement(\"div\", {\n    className: \"SearchResult\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: InfoTxt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), showCards);\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/SearchResult/SearchResult.js"],"names":["React","useEffect","useContext","useState","ArtCard","Cookies","Axios","UserContext","ServerPath","TitleBar","FaSearch","SearchResult","props","showCards","InfoTxt","console","log","location","searchProps","searchword","searchdata","length","map","r","index","p_code","p_id","p_name","p_shortdescription","p_description","p_price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,qBAAP;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,QAAxC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,MAAIC,SAAJ,EAAeC,OAAf;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,QAAN,CAAeC,WAA3B;;AAEA,MAAI,OAAON,KAAK,CAACK,QAAN,CAAeC,WAAtB,KAAuC,WAA3C,EAAwD;AACpDJ,IAAAA,OAAO,GAAG,oCAAoCF,KAAK,CAACK,QAAN,CAAeC,WAAf,CAA2BC,UAAzE;;AACA,QAAIP,KAAK,CAACK,QAAN,CAAeC,WAAf,CAA2BE,UAA3B,CAAsCC,MAAtC,GAA+C,CAAnD,EAAsD;AAClDR,MAAAA,SAAS,GACL;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KAAK,CAACK,QAAN,CAAeC,WAAf,CAA2BE,UAA3B,CAAsCE,GAAtC,CAA0C,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACrD,eACI,oBAAC,OAAD;AACI,UAAA,SAAS,EAAED,CAAC,CAACE,MADjB;AAEI,UAAA,MAAM,EAAIF,CAAC,CAACG,IAFhB;AAGI,UAAA,IAAI,EAAIH,CAAC,CAACI,MAHd;AAII,UAAA,SAAS,EAAIJ,CAAC,CAACK,kBAJnB;AAKI,UAAA,WAAW,EAAIL,CAAC,CAACM,aALrB;AAMI,UAAA,KAAK,EAAEN,CAAC,CAACO,OANb;AAOI,UAAA,GAAG,EAAEN,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,OAZA,CADL,CADJ;AAiBH,KAlBD,MAkBO;AACHX,MAAAA,SAAS,GACL;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,YAApB;AAAiC,QAAA,IAAI,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAFJ,CADJ;AAMH;AACJ,GA5BD,MA4BO;AACHC,IAAAA,OAAO,GAAG,qBAAV;AACAD,IAAAA,SAAS,GACL;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,YAApB;AAAiC,MAAA,IAAI,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAFJ,CADJ;AAMH;AAID;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKD,SAFL,CADJ;AAMH,CAnHD;;AAqHA,eAAeF,YAAf","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\r\nimport './SearchResult.scss';\r\nimport ArtCard from '../../components/ArtCard/ArtCard';\r\nimport Cookies from 'js-cookie';\r\nimport Axios from 'axios';\r\nimport { UserContext, ServerPath } from '../App';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nconst SearchResult = (props) => {\r\n    //const [User, setUser] = useContext(UserContext);\r\n    //const [SearchHook, setSearchHook] = useState({});\r\n    //const [Products, setProducts] = useState();\r\n    //const [ReadCookie, setReadCookie] = useState();\r\n\r\n    //let SearchingCookie = Cookies.get('pssearching');\r\n    //let DecodedCookie = decodeURIComponent(SearchingCookie);\r\n    //console.log(props.location.searchProps);\r\n\r\n    let showCards, InfoTxt;\r\n\r\n    console.log(props.location.searchProps);\r\n\r\n    if (typeof(props.location.searchProps) !== 'undefined') {\r\n        InfoTxt = \"Wyniki wyszukiwania dla frazy: \" + props.location.searchProps.searchword;\r\n        if (props.location.searchProps.searchdata.length > 0) {\r\n            showCards = (\r\n                <div className=\"ProdFlexbox\">\r\n                    {props.location.searchProps.searchdata.map((r, index) => {\r\n                        return(\r\n                            <ArtCard \r\n                                imagename={r.p_code}\r\n                                prodid = {r.p_id}\r\n                                name = {r.p_name}\r\n                                shortdesc = {r.p_shortdescription}\r\n                                description = {r.p_description}\r\n                                price={r.p_price}\r\n                                key={index}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        } else {\r\n            showCards = (\r\n                <div className=\"SearchNoResults\">\r\n                    <FaSearch className=\"SearchIcon\" size={70}/>\r\n                    <p>Nie znaleziono ≈ºadnych artyku≈Ç√≥w.</p>\r\n                </div>\r\n            )\r\n        }\r\n    } else {\r\n        InfoTxt = \"Wyniki wyszukiwania\"\r\n        showCards = (\r\n            <div className=\"SearchNoResults\">\r\n                <FaSearch className=\"SearchIcon\" size={70}/>\r\n                <p>Nie znaleziono ≈ºadnych artyku≈Ç√≥w.</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    /*\r\n    User.searchmemo.map((r, index) => {\r\n\r\n    })\r\n    */\r\n    /*\r\n        if (props.length === 0) {\r\n            if (DecodedCookie !== 'undefined') {\r\n                Axios.post(ServerPath + 'Search.php',\r\n                DecodedCookie)\r\n                .then(function (res) {\r\n                    setUser({...User, searchmemo: res.data});\r\n                })\r\n                let showCards = (\r\n                    <div className=\"ProdFlexbox\">\r\n                        {User.searchmemo.map((r, index) => {\r\n                            return(\r\n                                <ArtCard \r\n                                    imagename={r.p_code}\r\n                                    prodid = {r.p_id}\r\n                                    name = {r.p_name}\r\n                                    shortdesc = {r.p_shortdescription}\r\n                                    description = {r.p_description}\r\n                                    price={r.p_price}\r\n                                    key={index}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                )\r\n            } else {\r\n                showCards = <h4>Brak wynik√≥w</h4>\r\n            }\r\n        } else {\r\n            let showCards = (\r\n                <div className=\"ProdFlexbox\">\r\n                    {User.searchmemo.map((r, index) => {\r\n                        return(\r\n                            <ArtCard \r\n                                imagename={r.p_code}\r\n                                prodid = {r.p_id}\r\n                                name = {r.p_name}\r\n                                shortdesc = {r.p_shortdescription}\r\n                                description = {r.p_description}\r\n                                price={r.p_price}\r\n                                key={index}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n    */\r\n\r\n\r\n    return(\r\n        <div className=\"SearchResult\">\r\n            <TitleBar title={InfoTxt}/>\r\n            {showCards}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResult;"]},"metadata":{},"sourceType":"module"}