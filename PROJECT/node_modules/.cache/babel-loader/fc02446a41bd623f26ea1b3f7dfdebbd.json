{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\ArtCard\\\\ArtCard.js\";\n\n/*\r\n    Plik:               ArtCard.js\r\n    Funkcja:            KARTA PRODUKTU\r\n    Opis:               Wyświetla bieżący produkt w karcie.\r\n    Elementy:           Zdjęcie {props.imagename}, \r\n                        nazwa produktu {props.name}, \r\n                        opis produktu {props.description}, \r\n                        cena {props.price}, \r\n                        wybór ilości +/-, \r\n                        przycisk koszyka\r\n    Przykład użycia:    <ArtCard imagename={nazwa_zdjecia} name={nazwa_artykulu} description={opis artykulu} price={cena} />\r\n    Dodatkowe info:     {nazwa_zdjecia} ma korespondowac z numerem artykulu w bazie danych\r\n*/\nimport React, { useState, useContext } from 'react';\nimport App, { CartContext, TotalContext } from '../../containers/App';\nimport carticon from '../../images/icons/black_cart.png';\nimport \"./ArtCard.scss\"; // Import arkusza stylu dla dla komponentu\n\nconst Artcard = props => {\n  const [counter, setCounter] = useState({\n    quantity: 0\n  });\n  const [initCart, Cart] = useContext(CartContext);\n  const [initTotal, Total] = useContext(TotalContext);\n\n  const Image = require('../../images/images/' + props.imagename + '.png'); // Ścieżka do zdjęcia\n\n\n  let ProdImgStyle;\n  ProdImgStyle = {\n    // Stylizacja zdjęcia - zdjęcie jako tło karty\n    backgroundImage: \"url(\" + Image + \")\",\n    backgroundColor: 'white'\n  }; //console.log(initCart);\n\n  const increaseQuantity = () => {\n    if (counter.quantity < 100) {\n      setCounter({\n        quantity: counter.quantity + 1\n      });\n    }\n  };\n\n  const decreaseQuantity = () => {\n    if (counter.quantity > 0) {\n      setCounter({\n        quantity: counter.quantity - 1\n      });\n    }\n  };\n\n  const handleQuantity = event => {\n    setCounter({\n      quantity: parseInt(event.target.value)\n    });\n  };\n\n  const addProd = (prodid, name, desc, q, price, imagename) => {\n    let check = 0;\n    let idToChange;\n    let orSum = parseFloat((q * price).toPrecision(2));\n    initCart.map((r, index) => {\n      if (r.prodid === prodid) {\n        check = 1;\n        idToChange = parseInt(index);\n      }\n    });\n\n    if (check === 0) {\n      Cart(prevCart => [...initCart, {\n        id: initCart.length,\n        prodid: prodid,\n        name: name,\n        desc: desc,\n        price: price,\n        quantity: q,\n        prodtotal: q * price,\n        imagename: imagename\n      }]);\n    } else {\n      let newCart = [...initCart];\n      newCart[idToChange].quantity = newCart[idToChange].quantity + q;\n      newCart[idToChange].prodtotal = newCart[idToChange].price * newCart[idToChange].quantity;\n    }\n\n    Total({\n      total: parseFloat(initTotal.total + orSum)\n    });\n    setCounter({\n      quantity: 0\n    });\n  };\n\n  console.log(initCart);\n  return React.createElement(\"div\", {\n    className: \"artCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ProdImgContainer\",\n    style: ProdImgStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"ProdInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, props.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, props.shortdesc)), React.createElement(\"div\", {\n    className: \"ProdState\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, props.price), React.createElement(\"div\", {\n    className: \"OrderBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: increaseQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"input\", {\n    className: \"qInput\",\n    type: \"text\",\n    value: counter.quantity,\n    onChange: handleQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: decreaseQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"-\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"ToCartBtn\",\n    onClick: addProd.bind(this, props.prodid, props.name, props.shortdesc, counter.quantity, props.price, props.imagename),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"carticonBtn\",\n    src: carticon,\n    alt: \"cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), \"DO KOSZYKA\"))));\n};\n\nexport default Artcard;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/ArtCard/ArtCard.js"],"names":["React","useState","useContext","App","CartContext","TotalContext","carticon","Artcard","props","counter","setCounter","quantity","initCart","Cart","initTotal","Total","Image","require","imagename","ProdImgStyle","backgroundImage","backgroundColor","increaseQuantity","decreaseQuantity","handleQuantity","event","parseInt","target","value","addProd","prodid","name","desc","q","price","check","idToChange","orSum","parseFloat","toPrecision","map","r","index","prevCart","id","length","prodtotal","newCart","total","console","log","shortdesc","bind"],"mappings":"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","sourcesContent":["/*\r\n    Plik:               ArtCard.js\r\n    Funkcja:            KARTA PRODUKTU\r\n    Opis:               Wyświetla bieżący produkt w karcie.\r\n    Elementy:           Zdjęcie {props.imagename}, \r\n                        nazwa produktu {props.name}, \r\n                        opis produktu {props.description}, \r\n                        cena {props.price}, \r\n                        wybór ilości +/-, \r\n                        przycisk koszyka\r\n    Przykład użycia:    <ArtCard imagename={nazwa_zdjecia} name={nazwa_artykulu} description={opis artykulu} price={cena} />\r\n    Dodatkowe info:     {nazwa_zdjecia} ma korespondowac z numerem artykulu w bazie danych\r\n*/\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport App, { CartContext, TotalContext } from '../../containers/App';\r\nimport carticon from '../../images/icons/black_cart.png';\r\nimport \"./ArtCard.scss\";                                                            // Import arkusza stylu dla dla komponentu\r\n\r\nconst Artcard = (props) =>{\r\n\r\n    const [counter, setCounter] = useState({\r\n        quantity: 0\r\n    })\r\n    const [initCart, Cart] = useContext(CartContext);\r\n    const [initTotal, Total] = useContext(TotalContext);\r\n\r\n    const Image = require('../../images/images/' + props.imagename + '.png');       // Ścieżka do zdjęcia\r\n\r\n    let ProdImgStyle;\r\n    ProdImgStyle = {                                                                // Stylizacja zdjęcia - zdjęcie jako tło karty\r\n        backgroundImage: \"url(\" + Image + \")\",\r\n        backgroundColor: 'white',\r\n    }\r\n\r\n    //console.log(initCart);\r\n\r\n    const increaseQuantity = () => {\r\n        if (counter.quantity < 100) {\r\n            setCounter({\r\n                quantity: counter.quantity+1\r\n            })\r\n        }\r\n    }\r\n    \r\n    const decreaseQuantity = () => {\r\n        if(counter.quantity > 0) {\r\n            setCounter({\r\n                quantity: counter.quantity-1\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (event) => {\r\n        setCounter({\r\n            quantity: parseInt(event.target.value)\r\n        })\r\n    }\r\n\r\n    const addProd = (prodid, name, desc, q, price, imagename) => {\r\n        let check = 0;\r\n        let idToChange;\r\n        let orSum = parseFloat((q*price).toPrecision(2));\r\n        initCart.map((r, index) => {\r\n            if (r.prodid === prodid) {\r\n                check = 1\r\n                idToChange = parseInt(index);\r\n            }\r\n        })\r\n\r\n        if (check === 0) {\r\n            Cart(prevCart => ([...initCart, {\r\n                id: initCart.length, \r\n                prodid: prodid,\r\n                name: name, \r\n                desc: desc,\r\n                price: price,\r\n                quantity: q, \r\n                prodtotal: q*price,\r\n                imagename: imagename\r\n            }]))\r\n        } else {\r\n            let newCart = [...initCart];\r\n            newCart[idToChange].quantity = newCart[idToChange].quantity+q;\r\n            newCart[idToChange].prodtotal = newCart[idToChange].price*newCart[idToChange].quantity;\r\n        }\r\n        Total({\r\n            total: parseFloat(initTotal.total+orSum)\r\n        })\r\n        setCounter({\r\n            quantity: 0\r\n        })\r\n    }\r\n    console.log(initCart);\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"artCard\">\r\n            <div className=\"ProdImgContainer\" style={ProdImgStyle}>\r\n            </div>\r\n            <div className=\"ProdInfo\">\r\n                <h4>{props.name}</h4>\r\n                <p>{props.shortdesc}</p>\r\n            </div>\r\n            <div className=\"ProdState\">\r\n\r\n                    <p>{props.price}</p>\r\n\r\n                <div className=\"OrderBar\">\r\n                    <button className=\"qBtn\" onClick={increaseQuantity}>+</button>\r\n                    <input className=\"qInput\" type=\"text\" value={counter.quantity} onChange={handleQuantity}/>\r\n                    <button className=\"qBtn\" onClick={decreaseQuantity}>-</button>\r\n                </div>\r\n                <div>\r\n                    <button className=\"ToCartBtn\" onClick={addProd.bind(this, props.prodid, props.name, props.shortdesc, counter.quantity, props.price, props.imagename)}><img className=\"carticonBtn\" src={carticon} alt=\"cart\"/>DO KOSZYKA</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Artcard;\r\n\r\n"]},"metadata":{},"sourceType":"module"}