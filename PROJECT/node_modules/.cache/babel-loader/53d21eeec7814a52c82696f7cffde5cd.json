{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\CartItem\\\\CartItem.js\";\nimport React, { useState, useContext } from 'react';\nimport { CartContext, TotalContext } from '../../containers/App';\nimport './CartItem.scss';\nimport { TiDelete } from \"react-icons/ti\";\nconst [initCart, Cart] = useContext(CartContext); // stan globalny - stan koszyka\n\nconst [initTotal, Total] = useContext(TotalContext); // stan globalny - suma do zapłaty\n\nconst [counter, setCounter] = useState({\n  quantity: props.quantity\n}); // stan lokalny - wyświetla ilość produktu\n\nconst [totalPrice, setTotalPrice] = useState({\n  totalprice: props.prodtotal\n}); // stan lokalny - wyświetla sumę do zapłaty\n\nconst increaseQuantity = index => {\n  let newCart = [...initCart];\n  newCart[index].quantity = newCart[index].quantity + 1;\n  newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\n  setCounter({\n    quantity: newCart[index].quantity\n  });\n  setTotalPrice({\n    totalprice: newCart[index].prodtotal\n  });\n  Total({\n    total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\n  });\n};\n\nconst decreaseQuantity = index => {\n  if (counter.quantity > 1) {\n    let newCart = [...initCart];\n    newCart[index].quantity = newCart[index].quantity - 1;\n    newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\n    setCounter({\n      quantity: newCart[index].quantity\n    });\n    setTotalPrice({\n      totalprice: newCart[index].prodtotal\n    });\n    Total({\n      total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\n    });\n  }\n};\n\nconst CartItem = props => {\n  const Image = require('../../images/images/' + props.imagename + '.png'); // Ścieżka do zdjęcia\n\n\n  let ProdImgStyle;\n  ProdImgStyle = {\n    // Stylizacja zdjęcia - zdjęcie jako tło karty\n    backgroundImage: \"url(\" + Image + \")\"\n  };\n  return React.createElement(\"div\", {\n    className: \"CartItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CartItemImg\",\n    style: ProdImgStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CartItemContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"CartItemName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, props.name, \" - \", props.desc), React.createElement(\"div\", {\n    className: \"CartItemPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CartProdPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, parseFloat(props.price).toFixed(2)), React.createElement(\"div\", {\n    className: \"CartItemPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: increaseQuantity.bind(this, props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"input\", {\n    className: \"CartqInput\",\n    type: \"text\",\n    value: counter.quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: decreaseQuantity.bind(this, props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"-\")), React.createElement(\"div\", {\n    className: \"CartItemTotal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, parseFloat(totalPrice.totalprice).toFixed(2)))), React.createElement(\"button\", {\n    className: \"CartRemBtn\",\n    onClick: props.removeitem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TiDelete, {\n    size: 30,\n    className: \"RemBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n};\n\nexport default CartItem; //<img className=\"CartItemImg\" src={Image} alt=\"prodimg\"/>","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/CartItem/CartItem.js"],"names":["React","useState","useContext","CartContext","TotalContext","TiDelete","initCart","Cart","initTotal","Total","counter","setCounter","quantity","props","totalPrice","setTotalPrice","totalprice","prodtotal","increaseQuantity","index","newCart","parseFloat","price","total","decreaseQuantity","CartItem","Image","require","imagename","ProdImgStyle","backgroundImage","name","desc","toFixed","bind","id","removeitem"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { CartContext, TotalContext } from '../../containers/App';\r\nimport './CartItem.scss';\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\nconst [initCart, Cart] = useContext(CartContext);                               // stan globalny - stan koszyka\r\nconst [initTotal, Total] = useContext(TotalContext);                            // stan globalny - suma do zapłaty\r\nconst [counter, setCounter] = useState({quantity: props.quantity})              // stan lokalny - wyświetla ilość produktu\r\nconst [totalPrice, setTotalPrice] = useState({totalprice: props.prodtotal})     // stan lokalny - wyświetla sumę do zapłaty\r\n\r\nconst increaseQuantity = (index) => {\r\n    let newCart = [...initCart];\r\n    newCart[index].quantity = newCart[index].quantity+1;\r\n    newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\r\n    \r\n    setCounter({\r\n        quantity: newCart[index].quantity\r\n    })\r\n    setTotalPrice({\r\n        totalprice: newCart[index].prodtotal\r\n    })\r\n    Total({\r\n        total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\r\n    })\r\n}\r\n\r\nconst decreaseQuantity = (index) => {\r\n    if (counter.quantity > 1) {\r\n        let newCart = [...initCart];\r\n        newCart[index].quantity = newCart[index].quantity-1;\r\n        newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\r\n\r\n        setCounter({\r\n            quantity: newCart[index].quantity\r\n        })\r\n        setTotalPrice({\r\n            totalprice: newCart[index].prodtotal\r\n        })\r\n        Total({\r\n            total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\r\n        })\r\n    }\r\n}\r\n\r\nconst CartItem = (props) => {\r\n\r\n    const Image = require('../../images/images/' + props.imagename + '.png');       // Ścieżka do zdjęcia\r\n\r\n    let ProdImgStyle;\r\n    ProdImgStyle = {                                                                // Stylizacja zdjęcia - zdjęcie jako tło karty\r\n        backgroundImage: \"url(\" + Image + \")\"\r\n    }\r\n\r\n    return(\r\n        <div className=\"CartItem\">\r\n            <div className=\"CartItemImg\" style={ProdImgStyle}></div>\r\n            <div className=\"CartItemContainer\">\r\n                <h4 className=\"CartItemName\">{props.name} - {props.desc}</h4>\r\n                <div className=\"CartItemPrice\">\r\n                    <div className=\"CartProdPrice\">{parseFloat(props.price).toFixed(2)}</div>\r\n                    <div className=\"CartItemPanel\">\r\n                        <button className=\"qBtn\" onClick={increaseQuantity.bind(this, props.id)}>+</button>\r\n                        <input className=\"CartqInput\" type=\"text\" value={counter.quantity}/>\r\n                        <button className=\"qBtn\" onClick={decreaseQuantity.bind(this, props.id)}>-</button>\r\n                    </div>\r\n                    <div className=\"CartItemTotal\">\r\n                        {parseFloat(totalPrice.totalprice).toFixed(2)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className=\"CartRemBtn\" onClick={props.removeitem}><TiDelete size={30} className=\"RemBtn\"/></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n\r\n//<img className=\"CartItemImg\" src={Image} alt=\"prodimg\"/>\r\n"]},"metadata":{},"sourceType":"module"}