{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\UserBtn\\\\UserBtn.js\";\n// UserBtn -> COMMON APP COMPONENT\nimport React, { useContext, useState } from 'react';\nimport './UserBtn.scss';\nimport Login from '../Login/Login';\nimport AccountMenu from '../AccountMenu/AccountMenu';\nimport Axios from 'axios';\nimport { ServerPath, UserContext } from '../../containers/App';\nimport { FaRegUserCircle } from 'react-icons/fa';\nimport Cookies from 'js-cookie';\n\nconst UserBtn = props => {\n  // STATES\n  const [User, setUser] = useContext(UserContext); // User State\n\n  const [LogShow, setLogShow] = useState(false); // Show loggin button\n\n  const [LoginData, setLoginData] = useState(); // Temporary state for sending login data\n\n  const [ErrorInfo, setErrorInfo] = useState(); // Error container   \n  // FUNCTIONS\n  // check content in username field and update LoginData state\n\n  const handleUsername = event => {\n    if (event.keyCode === 13) {\n      handleLogin();\n    } else {\n      setLoginData({ ...LoginData,\n        user: event.target.value\n      });\n    }\n  }; // check content in password field and update LoginData state\n\n\n  const handlePassword = event => {\n    if (event.keyCode === 13) {\n      handleLogin();\n    } else {\n      setLoginData({ ...LoginData,\n        password: event.target.value\n      });\n    }\n  }; // handle login action after subitting user data\n\n\n  const handleLogin = () => {\n    Axios.post(ServerPath + \"Login.php\", LoginData).then(function (res) {\n      if (res.data.uid) {\n        setUser({ ...User,\n          userinfo: res.data,\n          usercontrol: true\n        });\n        Cookies.set('pssession', res.data.sessionid);\n        setLogShow(false);\n        setErrorInfo();\n      } else {\n        let errordata = React.createElement(\"div\", {\n          className: \"ErrorInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, res.data.map((r, index) => {\n          return React.createElement(\"p\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, r);\n        }));\n        setErrorInfo(errordata);\n      }\n    });\n  }; // hadle logout action\n\n\n  const handleLogout = () => {\n    let sessionid = Cookies.get('pssession');\n    Axios.post(ServerPath + 'Logout.php', sessionid).then(function (res) {\n      if (res.data === \"success\") {\n        Cookies.remove('pssession');\n        Cookies.remove('psacc');\n        setUser({\n          usercontrol: false,\n          userinfo: {},\n          acccontrol: false,\n          accinfo: {}\n        });\n        setLogShow(false);\n      }\n    });\n  }; // hide account menu\n\n\n  const hideMenu = () => {\n    setLogShow(false);\n  }; // SHOW/HIDE USER BUTTON\n\n\n  let windowstyle;\n\n  const loginWindow = () => {\n    setLogShow(!LogShow);\n  };\n\n  if (!LogShow) {\n    windowstyle = {\n      visibility: 'hidden',\n      opacity: 0,\n      transitionDuration: '0.5s'\n    };\n  } // DISPLAY ADEQUATE CONTENT ON THE USER BUTTON (User logged-in/logged-out)\n\n\n  let UserInfoBtn;\n  let UserMenu;\n\n  if (!User.userinfo.login) {\n    UserInfoBtn = React.createElement(\"button\", {\n      className: \"LogBtn\",\n      onClick: loginWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"ZALOGUJ\");\n    UserMenu = React.createElement(Login, {\n      username: handleUsername,\n      password: handlePassword,\n      login: handleLogin,\n      hidemenu: hideMenu,\n      errorinfo: ErrorInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    });\n  } else {\n    UserInfoBtn = React.createElement(\"button\", {\n      className: \"LogBtn AccountBtn\",\n      onClick: loginWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(FaRegUserCircle, {\n      size: 20,\n      className: \"UserIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), User.userinfo.login);\n    UserMenu = React.createElement(AccountMenu, {\n      logout: handleLogout,\n      hidemenu: hideMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"UserBtnContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, UserInfoBtn, React.createElement(\"div\", {\n    className: \"LoginW\",\n    style: windowstyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, UserMenu));\n};\n\nexport default UserBtn;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/UserBtn/UserBtn.js"],"names":["React","useContext","useState","Login","AccountMenu","Axios","ServerPath","UserContext","FaRegUserCircle","Cookies","UserBtn","props","User","setUser","LogShow","setLogShow","LoginData","setLoginData","ErrorInfo","setErrorInfo","handleUsername","event","keyCode","handleLogin","user","target","value","handlePassword","password","post","then","res","data","uid","userinfo","usercontrol","set","sessionid","errordata","map","r","index","handleLogout","get","remove","acccontrol","accinfo","hideMenu","windowstyle","loginWindow","visibility","opacity","transitionDuration","UserInfoBtn","UserMenu","login"],"mappings":"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","sourcesContent":["// UserBtn -> COMMON APP COMPONENT\r\n\r\nimport React, { useContext, useState } from 'react';\r\nimport './UserBtn.scss';\r\nimport Login from '../Login/Login';\r\nimport AccountMenu from '../AccountMenu/AccountMenu';\r\nimport Axios from 'axios';\r\nimport { ServerPath, UserContext } from '../../containers/App';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst UserBtn = (props) => {\r\n\r\n    // STATES\r\n\r\n    const [User, setUser] = useContext(UserContext);    // User State\r\n    const [LogShow, setLogShow] = useState(false);      // Show loggin button\r\n    const [LoginData, setLoginData] = useState();       // Temporary state for sending login data\r\n    const [ErrorInfo, setErrorInfo] = useState();       // Error container   \r\n    \r\n    // FUNCTIONS\r\n\r\n    // check content in username field and update LoginData state\r\n    const handleUsername = (event) => {\r\n        if (event.keyCode === 13) {\r\n            handleLogin();\r\n        } else {\r\n            setLoginData({...LoginData, user: event.target.value});\r\n        }\r\n    }\r\n\r\n    // check content in password field and update LoginData state\r\n    const handlePassword = (event) => {\r\n        if (event.keyCode === 13) {\r\n            handleLogin();\r\n        } else {\r\n            setLoginData({...LoginData, password: event.target.value});\r\n        }\r\n    }\r\n\r\n    // handle login action after subitting user data\r\n    const handleLogin = () => {\r\n        Axios.post(ServerPath + \"Login.php\", LoginData)\r\n        .then(function(res) {\r\n            if (res.data.uid) {\r\n                setUser({...User, userinfo: res.data, usercontrol: true});\r\n                Cookies.set('pssession', res.data.sessionid);\r\n                setLogShow(false);\r\n                setErrorInfo();\r\n            } else {\r\n                let errordata = (\r\n                    <div className=\"ErrorInfo\">\r\n                        {res.data.map((r, index) => {\r\n                            return(\r\n                                <p key={index}>{r}</p>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                )\r\n                setErrorInfo(errordata);\r\n            }\r\n        })\r\n    }\r\n\r\n    // hadle logout action\r\n    const handleLogout = () => {\r\n        let sessionid = Cookies.get('pssession');\r\n        Axios.post(ServerPath + 'Logout.php', sessionid)\r\n        .then(function(res) {\r\n            if (res.data === \"success\") {\r\n                Cookies.remove('pssession');\r\n                Cookies.remove('psacc');\r\n                setUser({usercontrol: false, userinfo: {}, acccontrol: false, accinfo: {}});\r\n                setLogShow(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    // hide account menu\r\n    const hideMenu = () => {\r\n        setLogShow(false);\r\n    }\r\n\r\n    // SHOW/HIDE USER BUTTON\r\n\r\n    let windowstyle;\r\n\r\n    const loginWindow = () => {\r\n        setLogShow(!LogShow);\r\n    }\r\n\r\n    if (!LogShow) {\r\n        windowstyle = {\r\n            visibility: 'hidden',\r\n            opacity: 0,\r\n            transitionDuration: '0.5s'\r\n        }\r\n    }\r\n\r\n    // DISPLAY ADEQUATE CONTENT ON THE USER BUTTON (User logged-in/logged-out)\r\n\r\n    let UserInfoBtn;\r\n    let UserMenu;\r\n\r\n    if (!User.userinfo.login) {\r\n        UserInfoBtn = <button className=\"LogBtn\" onClick={loginWindow}>ZALOGUJ</button>\r\n        UserMenu = <Login \r\n                        username={handleUsername} \r\n                        password={handlePassword} \r\n                        login={handleLogin}\r\n                        hidemenu={hideMenu}\r\n                        errorinfo={ErrorInfo} />\r\n    } else {\r\n        UserInfoBtn = <button className=\"LogBtn AccountBtn\" onClick={loginWindow}><FaRegUserCircle size={20} className=\"UserIcon\"/>{User.userinfo.login}</button>\r\n        UserMenu = <AccountMenu logout={handleLogout} hidemenu={hideMenu}/>\r\n    }\r\n\r\n    return(\r\n        <div className=\"UserBtnContainer\">\r\n            {UserInfoBtn}\r\n            <div className=\"LoginW\" style={windowstyle}>\r\n                {UserMenu}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserBtn;"]},"metadata":{},"sourceType":"module"}