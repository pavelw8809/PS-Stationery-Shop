{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\Account\\\\Account.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Account.scss';\nimport { UserContext, ServerPath } from '../../containers/App';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { FaRegUserCircle } from 'react-icons/fa';\nimport ShowAccountData from '../../components/ShowAccountData/ShowAccountData';\nimport EditAccountData from '../../components/EditAccountData/EditAccountData';\n\nconst Account = () => {\n  const [User, setUser] = useContext(UserContext); //const [AccountInfo, setAccountInfo] = useState([]);\n\n  const [AccountFound, setAccountFound] = useState(false);\n  const [UserLogged, setUserLogged] = useState(false);\n  const [TabDisp, setTabDisp] = useState({\n    accshow: true,\n    accedit: false,\n    accpass: false\n  });\n  const [FormData, setFormData] = useState();\n  const [IsError, setIsError] = useState(false);\n  const [ErrorInfo, setErrorInfo] = useState([]);\n  const [Error, setError] = useState([]); //const [InfoType] = useState([\"mail\", \"cname\", \"ccity\", \"cstreet\"]);\n  //let UserId = Cookies.get('psid');\n  //let DecodedUserId = decodeURIComponent(UserId);\n\n  let SessionId = Cookies.get('pssession');\n  let ExtSession = Cookies.get('psacc'); //let DecodedUserName = decodeURIComponent(UserName);\n  //const [UserData, setUserData] = useState({\n  //    id: DecodedUserId,\n  //    login: DecodedUserName\n  //});\n\n  let History = useHistory();\n  console.log(ExtSession);\n  useEffect(() => {\n    if (!ExtSession) {\n      History.push('/extlogin');\n    } else {\n      if (SessionId !== null) {\n        console.log(User.accinfo);\n\n        if (!User.acccontrol) {\n          console.log(\"loading...\");\n          Axios.post(ServerPath + 'UserAccount.php', ExtSession).then(res => {\n            console.log(res.data);\n\n            if (res.data.length > 0) {\n              res.data.map((r, index) => {\n                let izipA, izipB, czipA, czipB;\n\n                if (r.ci_zip !== null) {\n                  izipA = r.ci_zip.substring(0, 2);\n                  izipB = r.ci_zip.substring(3, 6);\n                  czipA = null;\n                  czipB = null;\n                }\n\n                if (r.cc_zip !== null) {\n                  czipA = r.cc_zip.substring(0, 2);\n                  czipB = r.cc_zip.substring(3, 6);\n                  izipA = null;\n                  izipB = null;\n                }\n\n                setUser(prevState => ({ ...prevState,\n                  accinfo: {\n                    login: r.u_login,\n                    mail: r.u_mail,\n                    cname: r.cc_name,\n                    ccity: r.cc_city,\n                    cstreet: r.cc_street,\n                    chouse: r.cc_number,\n                    cflat: r.cc_number_flat,\n                    czip: r.cc_zip,\n                    cnip: r.cc_NIP,\n                    cregon: r.cc_REGON,\n                    iname: r.ci_name,\n                    isurname: r.ci_surname,\n                    icity: r.ci_city,\n                    istreet: r.ci_street,\n                    ihouse: r.ci_number,\n                    iflat: r.ci_number_flat,\n                    izip: r.ci_zip,\n                    izip1: izipA,\n                    izip2: izipB,\n                    czip1: czipA,\n                    czip2: czipB\n                  },\n                  acccontrol: true\n                }));\n                setFormData(prevState => ({ ...prevState,\n                  login: r.u_login,\n                  mail: r.u_mail,\n                  cname: r.cc_name,\n                  ccity: r.cc_city,\n                  cstreet: r.cc_street,\n                  chouse: r.cc_number,\n                  cflat: r.cc_number_flat,\n                  czip: r.cc_zip,\n                  cnip: r.cc_NIP,\n                  cregon: r.cc_REGON,\n                  iname: r.ci_name,\n                  isurname: r.ci_surname,\n                  icity: r.ci_city,\n                  istreet: r.ci_street,\n                  ihouse: r.ci_number,\n                  iflat: r.ci_number_flat,\n                  izip: r.ci_zip,\n                  izip1: izipA,\n                  izip2: izipB,\n                  czip1: czipA,\n                  czip2: czipB //zip2: r.ci_zip.substring(3,6)\n\n                }));\n              }); //console.log(res.data);\n\n              setAccountFound(true);\n            }\n          });\n        } else {\n          console.log(\"We still have it\");\n          setAccountFound(true);\n          setFormData(prevState => ({ ...prevState,\n            login: User.userinfo.login,\n            mail: User.accinfo.mail,\n            cname: User.accinfo.cname,\n            ccity: User.accinfo.ccity,\n            cstreet: User.accinfo.cstreet,\n            chouse: User.accinfo.chouse,\n            cflat: User.accinfo.cflat,\n            czip: User.accinfo.czip,\n            cnip: User.accinfo.cnip,\n            cregon: User.accinfo.cregon,\n            iname: User.accinfo.iname,\n            isurname: User.accinfo.isurname,\n            icity: User.accinfo.icity,\n            istreet: User.accinfo.istreet,\n            ihouse: User.accinfo.ihouse,\n            iflat: User.accinfo.iflat,\n            izip: User.accinfo.izip,\n            izip1: User.accinfo.izip1,\n            izip2: User.accinfo.izip2,\n            czip1: User.accinfo.czip1,\n            czip2: User.accinfo.czip2\n          }));\n        }\n      }\n    }\n  }, []);\n  let AccountData, AccFormData, AccountType, address, fullname; //zip1, zip2;\n\n  let ACStyle, EAStyle, CPStyle; //ACStyle = {display: 'block'};\n\n  EAStyle = {\n    display: 'none'\n  };\n  CPStyle = {\n    display: 'none'\n  };\n\n  if (TabDisp.accshow) {\n    ACStyle = {\n      display: 'block'\n    };\n    EAStyle = {\n      display: 'none'\n    };\n    CPStyle = {\n      display: 'none'\n    };\n  }\n\n  if (TabDisp.accedit) {\n    ACStyle = {\n      display: 'none'\n    };\n    EAStyle = {\n      display: 'block'\n    };\n    CPStyle = {\n      display: 'none'\n    };\n  }\n\n  const changeTab = option => {\n    if (option === 0) {\n      setTabDisp({ ...TabDisp,\n        accshow: false,\n        accedit: true,\n        accpass: false\n      });\n    }\n\n    if (option === 1) {\n      setTabDisp({ ...TabDisp,\n        accshow: false,\n        accedit: false,\n        accpass: true\n      });\n    }\n\n    if (option === 2) {\n      setTabDisp({ ...TabDisp,\n        accshow: true,\n        accedit: false,\n        accpass: false\n      });\n    }\n  };\n\n  const handleFormData = (data, event) => {\n    switch (data) {\n      case \"LOG\":\n        setFormData({ ...FormData,\n          login: event.target.value\n        });\n        break;\n\n      case \"CNM\":\n        setFormData({ ...FormData,\n          cname: event.target.value\n        });\n        break;\n\n      case \"CST\":\n        setFormData({ ...FormData,\n          cstreet: event.target.value\n        });\n        break;\n\n      case \"CCT\":\n        setFormData({ ...FormData,\n          ccity: event.target.value\n        });\n        break;\n\n      case \"CHO\":\n        setFormData({ ...FormData,\n          chouse: event.target.value\n        });\n        break;\n\n      case \"CFL\":\n        setFormData({ ...FormData,\n          cflat: event.target.value\n        });\n        break;\n\n      case \"CNP\":\n        setFormData({ ...FormData,\n          cnip: event.target.value\n        });\n        break;\n\n      case \"CRG\":\n        setFormData({ ...FormData,\n          cregon: event.target.value\n        });\n        break;\n\n      case \"INM\":\n        setFormData({ ...FormData,\n          iname: event.target.value\n        });\n        break;\n\n      case \"ISN\":\n        setFormData({ ...FormData,\n          isurname: event.target.value\n        });\n        break;\n\n      case \"ICT\":\n        setFormData({ ...FormData,\n          icity: event.target.value\n        });\n        break;\n\n      case \"IST\":\n        setFormData({ ...FormData,\n          istreet: event.target.value\n        });\n        break;\n\n      case \"IHO\":\n        setFormData({ ...FormData,\n          ihouse: event.target.value\n        });\n        break;\n\n      case \"IFL\":\n        setFormData({ ...FormData,\n          iflat: event.target.value\n        });\n        break;\n\n      case \"IZ1\":\n        setFormData({ ...FormData,\n          izip1: event.target.value\n        });\n        break;\n\n      case \"IZ2\":\n        setFormData({ ...FormData,\n          izip2: event.target.value\n        });\n        break;\n\n      case \"CZ1\":\n        setFormData({ ...FormData,\n          czip1: event.target.value\n        });\n        break;\n\n      case \"CZ2\":\n        setFormData({ ...FormData,\n          czip2: event.target.value\n        });\n        break;\n    }\n  };\n\n  console.log(FormData);\n\n  const changeAccountData = () => {\n    //let errorlist = new Array;\n    let valid = 0;\n    let info1 = 'BŁĄD: Kod pocztowy powinien zawierać tylko cyfry';\n    let info2 = 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry';\n    let info8 = 'BŁĄD: Pola nie mogą być puste';\n\n    if (AccountType === \"indywidualne\") {\n      let propArray = [FormData.iname, FormData.isurname, FormData.istreet, FormData.icity, FormData.ihouse, FormData.iflat, FormData.izip1, FormData.izip2];\n      propArray.map((r, index) => {\n        console.log(r);\n\n        if (r.length === 0) {\n          setIsError(true);\n          setErrorInfo(prevState => ({ ...prevState,\n            info8\n          }));\n          valid = 1;\n        }\n      });\n    }\n\n    if (isNaN(FormData.czip1) || isNaN(FormData.czip2) || isNaN(FormData.izip1) || isNaN(FormData.izip2)) {\n      setIsError(true);\n      setErrorInfo(prevState => ({ ...prevState,\n        info1: info1\n      }));\n      valid = 1;\n    } else {\n      setErrorInfo(prevState => ({ ...prevState,\n        info1: \"\"\n      }));\n    }\n\n    if (isNaN(FormData.cregon) && FormData.cregon !== null) {\n      setIsError(true);\n      setErrorInfo(prevState => ({ ...prevState,\n        info2: info2\n      }));\n      valid = 1;\n    } else {\n      setErrorInfo(prevState => ({ ...prevState,\n        info2: \"\"\n      }));\n    }\n\n    if (valid === 0) {\n      let check = 0;\n      let mainquery = false;\n      let compquery = false;\n      let privquery = false;\n      setIsError(false);\n      let izipcode, czipcode;\n\n      if (FormData.izip1 === null) {\n        izipcode = null;\n      } else {\n        izipcode = FormData.izip1 + \"-\" + FormData.izip2;\n      }\n\n      if (FormData.czip1 === null) {\n        czipcode = null;\n      } else {\n        czipcode = FormData.czip1 + \"-\" + FormData.czip2;\n      } //console.log(\"Userdata: \" + User.accinfo.czip + \" / FormData: \" + czipcode);\n\n\n      if (User.accinfo.login !== FormData.login) {\n        //setFormData((prevState) => ({...prevState, mainquery: true}));\n        mainquery = true;\n        check = 1;\n      } else {\n        //setFormData((prevState) => ({...prevState, mainquery: false}));\n        mainquery = false;\n      }\n\n      if (User.accinfo.cname !== FormData.cname || User.accinfo.cstreet !== FormData.cstreet || User.accinfo.ccity !== FormData.ccity || User.accinfo.chouse !== FormData.chouse || User.accinfo.cflat !== FormData.cflat || User.accinfo.cnip !== FormData.cnip || User.accinfo.cregon !== FormData.cregon || User.accinfo.czip !== czipcode) {\n        compquery = true; //setFormData((prevState) => ({...prevState, compquery: true}));\n\n        check = 1;\n      } else {\n        compquery = false; //setFormData((prevState) => ({...prevState, compquery: false}));\n      }\n\n      if (User.accinfo.iname !== FormData.iname || User.accinfo.isurname !== FormData.isurname || User.accinfo.istreet !== FormData.istreet || User.accinfo.icity !== FormData.icity || User.accinfo.ihouse !== FormData.ihouse || User.accinfo.iflat !== FormData.iflat || User.accinfo.izip !== izipcode) {\n        privquery = true;\n        check = 1; //setFormData((prevState) => ({...prevState, privquery: true}));\n      } else {\n        privquery = false; //setFormData((prevState) => ({...prevState, privquery: false}));\n      }\n\n      let fullFormData = {\n        FormData,\n        mainquery,\n        compquery,\n        privquery\n      };\n\n      if (check > 0) {\n        console.log(\"SENDING DATA\");\n        Axios.post(ServerPath + \"EditAccount.php\", fullFormData).then(res => {\n          console.log(res.data);\n\n          if (res.data !== \"success\") {\n            let errordata = React.createElement(\"div\", {\n              className: \"LoginErrInfo\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 307\n              },\n              __self: this\n            }, res.data.map((r, index) => {\n              return React.createElement(\"p\", {\n                key: index,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 310\n                },\n                __self: this\n              }, r);\n            }));\n          }\n        });\n      } else {\n        console.log(\"NOTHING CHANGED\");\n      }\n    }\n  };\n\n  if (AccountFound) {\n    if (User.accinfo.cname === null) {\n      AccountType = \"indywidualne\";\n      fullname = User.accinfo.iname + \" \" + User.accinfo.isurname;\n      address = User.accinfo.istreet + \" \" + User.accinfo.ihouse + \"/\" + User.accinfo.iflat;\n    } else {\n      AccountType = \"firmowe\";\n      fullname = User.accinfo.cname;\n      address = User.accinfo.cstreet + \" \" + User.accinfo.chouse + \"/\" + User.accinfo.cflat;\n    }\n\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountData\",\n      style: ACStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountNameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(FaRegUserCircle, {\n      size: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, fullname)), React.createElement(\"div\", {\n      className: \"AccountType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Konto \", AccountType)), React.createElement(ShowAccountData, {\n      login: User.userinfo.login,\n      mail: User.accinfo.mail,\n      iname: User.accinfo.iname,\n      isurname: User.accinfo.isurname,\n      address: address,\n      izip: User.accinfo.izip,\n      icity: User.accinfo.icity,\n      cname: User.accinfo.cname,\n      cnip: User.accinfo.cnip,\n      cregon: User.accinfo.cregon,\n      czip: User.accinfo.czip,\n      ccity: User.accinfo.ccity,\n      changetab: changeTab.bind(this, 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"AccountData\",\n      style: EAStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountNameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(FaRegUserCircle, {\n      size: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, fullname)), React.createElement(\"div\", {\n      className: \"AccountType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"Konto \", AccountType)), React.createElement(EditAccountData, {\n      login: User.userinfo.login,\n      mail: User.accinfo.mail,\n      iname: User.accinfo.iname,\n      isurname: User.accinfo.isurname,\n      istreet: User.accinfo.istreet,\n      ihouse: User.accinfo.ihouse,\n      iflat: User.accinfo.iflat,\n      izip1: User.accinfo.izip1,\n      izip2: User.accinfo.izip2,\n      icity: User.accinfo.icity,\n      cname: User.accinfo.cname,\n      cnip: User.accinfo.cnip,\n      cregon: User.accinfo.cregon,\n      ccity: User.accinfo.ccity,\n      cstreet: User.accinfo.cstreet,\n      chouse: User.accinfo.chouse,\n      cflat: User.accinfo.cflat,\n      czip1: User.accinfo.czip1,\n      czip2: User.accinfo.czip2,\n      changetab: changeTab.bind(this, 2),\n      submitdatachange: changeAccountData,\n      iserror: IsError,\n      errorinfo: ErrorInfo,\n      log: handleFormData.bind(this, \"LOG\"),\n      cnm: handleFormData.bind(this, \"CNM\"),\n      cst: handleFormData.bind(this, \"CST\"),\n      cct: handleFormData.bind(this, \"CCT\"),\n      cho: handleFormData.bind(this, \"CHO\"),\n      cfl: handleFormData.bind(this, \"CFL\"),\n      czp: handleFormData.bind(this, \"CZP\"),\n      cnp: handleFormData.bind(this, \"CNP\"),\n      crg: handleFormData.bind(this, \"CRG\"),\n      inm: handleFormData.bind(this, \"INM\"),\n      isn: handleFormData.bind(this, \"ISN\"),\n      ict: handleFormData.bind(this, \"ICT\"),\n      ist: handleFormData.bind(this, \"IST\"),\n      iho: handleFormData.bind(this, \"IHO\"),\n      ifl: handleFormData.bind(this, \"IFL\"),\n      iz1: handleFormData.bind(this, \"IZ1\"),\n      iz2: handleFormData.bind(this, \"IZ2\"),\n      cz1: handleFormData.bind(this, \"CZ1\"),\n      cz2: handleFormData.bind(this, \"CZ2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    })));\n  } else if (!UserLogged) {\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \"Nie wykryto zalogowanego usera.\");\n  } else {\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, \"Brak danych\");\n  }\n\n  console.log(User);\n  return React.createElement(\"div\", {\n    className: \"SiteContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: \"Konto u\\u017Cytkownika\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }), AccountData);\n};\n\nexport default Account; //<NavLink to=\"/accountedit\"><button>EDYCJA KONTA</button></NavLink>\n//<NavLink to=\"/myorders\"><button>MOJE ZAMÓWIENIA</button></NavLink>\n//<NavLink to=\"/myorders\"><button>ZMIEŃ HASŁO</button></NavLink>","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/Account/Account.js"],"names":["React","useContext","useEffect","useState","UserContext","ServerPath","useHistory","NavLink","TitleBar","Axios","Cookies","FaRegUserCircle","ShowAccountData","EditAccountData","Account","User","setUser","AccountFound","setAccountFound","UserLogged","setUserLogged","TabDisp","setTabDisp","accshow","accedit","accpass","FormData","setFormData","IsError","setIsError","ErrorInfo","setErrorInfo","Error","setError","SessionId","get","ExtSession","History","console","log","push","accinfo","acccontrol","post","then","res","data","length","map","r","index","izipA","izipB","czipA","czipB","ci_zip","substring","cc_zip","prevState","login","u_login","mail","u_mail","cname","cc_name","ccity","cc_city","cstreet","cc_street","chouse","cc_number","cflat","cc_number_flat","czip","cnip","cc_NIP","cregon","cc_REGON","iname","ci_name","isurname","ci_surname","icity","ci_city","istreet","ci_street","ihouse","ci_number","iflat","ci_number_flat","izip","izip1","izip2","czip1","czip2","userinfo","AccountData","AccFormData","AccountType","address","fullname","ACStyle","EAStyle","CPStyle","display","changeTab","option","handleFormData","event","target","value","changeAccountData","valid","info1","info2","info8","propArray","isNaN","check","mainquery","compquery","privquery","izipcode","czipcode","fullFormData","errordata","bind"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './Account.scss';\r\nimport { UserContext, ServerPath } from '../../containers/App';\r\nimport { useHistory, NavLink } from 'react-router-dom';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\nimport ShowAccountData from '../../components/ShowAccountData/ShowAccountData';\r\nimport EditAccountData from '../../components/EditAccountData/EditAccountData';\r\n\r\nconst Account = () => {\r\n    const [User, setUser] = useContext(UserContext);\r\n    //const [AccountInfo, setAccountInfo] = useState([]);\r\n    const [AccountFound, setAccountFound] = useState(false);\r\n    const [UserLogged, setUserLogged] = useState(false);\r\n    const [TabDisp, setTabDisp] = useState({accshow: true, accedit: false, accpass: false})\r\n    const [FormData, setFormData] = useState();\r\n    const [IsError, setIsError] = useState(false);\r\n    const [ErrorInfo, setErrorInfo] = useState([]);\r\n    const [Error, setError] = useState([]);\r\n    //const [InfoType] = useState([\"mail\", \"cname\", \"ccity\", \"cstreet\"]);\r\n    //let UserId = Cookies.get('psid');\r\n    //let DecodedUserId = decodeURIComponent(UserId);\r\n    let SessionId = Cookies.get('pssession');\r\n    let ExtSession = Cookies.get('psacc');\r\n    //let DecodedUserName = decodeURIComponent(UserName);\r\n    //const [UserData, setUserData] = useState({\r\n    //    id: DecodedUserId,\r\n    //    login: DecodedUserName\r\n    //});\r\n    let History = useHistory();\r\n\r\n    console.log(ExtSession);\r\n\r\n    useEffect(() => {\r\n        if (!ExtSession) {\r\n            History.push('/extlogin');\r\n        } else {\r\n            if (SessionId !== null) {\r\n                console.log(User.accinfo);\r\n                if (!User.acccontrol) {\r\n                    \r\n                    console.log(\"loading...\");\r\n                    Axios.post(ServerPath   + 'UserAccount.php', ExtSession)\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                        if(res.data.length > 0) {\r\n                            res.data.map((r, index) => {\r\n                                let izipA, izipB, czipA, czipB;\r\n                                if (r.ci_zip !== null) {\r\n                                    izipA = r.ci_zip.substring(0,2);\r\n                                    izipB = r.ci_zip.substring(3,6);\r\n                                    czipA = null;\r\n                                    czipB = null;\r\n                                }\r\n                                if (r.cc_zip !== null) {\r\n                                    czipA = r.cc_zip.substring(0,2)\r\n                                    czipB = r.cc_zip.substring(3,6);\r\n                                    izipA = null;\r\n                                    izipB = null;\r\n                                }\r\n                                setUser((prevState) => ({...prevState, accinfo: {\r\n                                    login: r.u_login,\r\n                                    mail: r.u_mail,\r\n                                    cname: r.cc_name,\r\n                                    ccity: r.cc_city,\r\n                                    cstreet: r.cc_street,\r\n                                    chouse: r.cc_number,\r\n                                    cflat: r.cc_number_flat,\r\n                                    czip: r.cc_zip,\r\n                                    cnip: r.cc_NIP,\r\n                                    cregon: r.cc_REGON,\r\n                                    iname: r.ci_name,\r\n                                    isurname: r.ci_surname,\r\n                                    icity: r.ci_city,\r\n                                    istreet: r.ci_street,\r\n                                    ihouse: r.ci_number,\r\n                                    iflat: r.ci_number_flat,\r\n                                    izip: r.ci_zip,\r\n                                    izip1: izipA,\r\n                                    izip2: izipB,\r\n                                    czip1: czipA,\r\n                                    czip2: czipB\r\n                                },\r\n                                    acccontrol: true\r\n                                }));\r\n                                setFormData((prevState) => ({...prevState,\r\n                                    login: r.u_login, \r\n                                    mail: r.u_mail,\r\n                                    cname: r.cc_name,\r\n                                    ccity: r.cc_city,\r\n                                    cstreet: r.cc_street,\r\n                                    chouse: r.cc_number,\r\n                                    cflat: r.cc_number_flat,\r\n                                    czip: r.cc_zip,\r\n                                    cnip: r.cc_NIP,\r\n                                    cregon: r.cc_REGON,\r\n                                    iname: r.ci_name,\r\n                                    isurname: r.ci_surname,\r\n                                    icity: r.ci_city,\r\n                                    istreet: r.ci_street,\r\n                                    ihouse: r.ci_number,\r\n                                    iflat: r.ci_number_flat,\r\n                                    izip: r.ci_zip,\r\n                                    izip1: izipA,\r\n                                    izip2: izipB,\r\n                                    czip1: czipA,\r\n                                    czip2: czipB\r\n                                    //zip2: r.ci_zip.substring(3,6)\r\n                                \r\n                                }));\r\n                            })\r\n                            //console.log(res.data);\r\n                            setAccountFound(true);\r\n                        }\r\n                        \r\n                    })\r\n                } else {\r\n                    console.log(\"We still have it\");\r\n                    setAccountFound(true);\r\n                    setFormData((prevState) => ({...prevState, \r\n                        login: User.userinfo.login,\r\n                        mail: User.accinfo.mail,\r\n                        cname: User.accinfo.cname,\r\n                        ccity: User.accinfo.ccity,\r\n                        cstreet: User.accinfo.cstreet,\r\n                        chouse: User.accinfo.chouse,\r\n                        cflat: User.accinfo.cflat,\r\n                        czip: User.accinfo.czip,\r\n                        cnip: User.accinfo.cnip,\r\n                        cregon: User.accinfo.cregon,\r\n                        iname: User.accinfo.iname,\r\n                        isurname: User.accinfo.isurname,\r\n                        icity: User.accinfo.icity,\r\n                        istreet: User.accinfo.istreet,\r\n                        ihouse: User.accinfo.ihouse,\r\n                        iflat: User.accinfo.iflat,\r\n                        izip: User.accinfo.izip,\r\n                        izip1: User.accinfo.izip1,\r\n                        izip2: User.accinfo.izip2,\r\n                        czip1: User.accinfo.czip1,\r\n                        czip2: User.accinfo.czip2\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    let AccountData, AccFormData, AccountType, address, fullname //zip1, zip2;\r\n\r\n    let ACStyle, EAStyle, CPStyle;\r\n    //ACStyle = {display: 'block'};\r\n    EAStyle = {display: 'none'};\r\n    CPStyle = {display: 'none'};\r\n\r\n    if (TabDisp.accshow) {\r\n        ACStyle = {display: 'block'};\r\n        EAStyle = {display: 'none'};\r\n        CPStyle = {display: 'none'};\r\n    }\r\n    if (TabDisp.accedit) {\r\n        ACStyle = {display: 'none'};\r\n        EAStyle = {display: 'block'};\r\n        CPStyle = {display: 'none'};\r\n    }\r\n\r\n    const changeTab = (option) => {\r\n        if (option === 0) {\r\n            setTabDisp({...TabDisp, accshow: false, accedit: true, accpass: false});\r\n        }\r\n        if (option === 1) {\r\n            setTabDisp({...TabDisp, accshow: false, accedit: false, accpass: true});\r\n        }\r\n        if (option === 2) {\r\n            setTabDisp({...TabDisp, accshow: true, accedit: false, accpass: false});\r\n        }\r\n    }\r\n\r\n    const handleFormData = (data, event) => {\r\n\r\n        switch(data) {\r\n            case \"LOG\": setFormData({...FormData, login: event.target.value}); break;\r\n            case \"CNM\": setFormData({...FormData, cname: event.target.value}); break;\r\n            case \"CST\": setFormData({...FormData, cstreet: event.target.value}); break;\r\n            case \"CCT\": setFormData({...FormData, ccity: event.target.value}); break;\r\n            case \"CHO\": setFormData({...FormData, chouse: event.target.value}); break;\r\n            case \"CFL\": setFormData({...FormData, cflat: event.target.value}); break;\r\n            case \"CNP\": setFormData({...FormData, cnip: event.target.value}); break;\r\n            case \"CRG\": setFormData({...FormData, cregon: event.target.value}); break;\r\n            case \"INM\": setFormData({...FormData, iname: event.target.value}); break;\r\n            case \"ISN\": setFormData({...FormData, isurname: event.target.value}); break;\r\n            case \"ICT\": setFormData({...FormData, icity: event.target.value}); break;\r\n            case \"IST\": setFormData({...FormData, istreet: event.target.value}); break;\r\n            case \"IHO\": setFormData({...FormData, ihouse: event.target.value}); break;\r\n            case \"IFL\": setFormData({...FormData, iflat: event.target.value}); break;\r\n            case \"IZ1\": setFormData({...FormData, izip1: event.target.value}); break;\r\n            case \"IZ2\": setFormData({...FormData, izip2: event.target.value}); break;\r\n            case \"CZ1\": setFormData({...FormData, czip1: event.target.value}); break;\r\n            case \"CZ2\": setFormData({...FormData, czip2: event.target.value}); break;\r\n        }\r\n    }\r\n\r\n    console.log(FormData);\r\n\r\n    const changeAccountData = () => {\r\n        //let errorlist = new Array;\r\n        let valid = 0;\r\n        let info1 = 'BŁĄD: Kod pocztowy powinien zawierać tylko cyfry';\r\n        let info2 = 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry';\r\n        let info8 = 'BŁĄD: Pola nie mogą być puste';\r\n\r\n        if (AccountType === \"indywidualne\") {\r\n            let propArray = [FormData.iname, FormData.isurname, FormData.istreet, FormData.icity, \r\n                            FormData.ihouse, FormData.iflat, FormData.izip1, FormData.izip2];\r\n\r\n            propArray.map((r, index) => {\r\n                console.log(r);\r\n                if (r.length === 0) {\r\n                    setIsError(true);\r\n                    setErrorInfo((prevState) => ({...prevState, info8}))\r\n                    valid = 1;\r\n                }\r\n            })\r\n        }\r\n\r\n        if (isNaN(FormData.czip1) || isNaN(FormData.czip2) || isNaN(FormData.izip1) || isNaN(FormData.izip2)) {\r\n\r\n                setIsError(true);\r\n                setErrorInfo((prevState) => ({...prevState, info1: info1}))\r\n                valid = 1 \r\n        } else {\r\n            setErrorInfo((prevState) => ({...prevState, info1: \"\"}))\r\n        }\r\n\r\n        if (isNaN(FormData.cregon) && FormData.cregon !== null) {\r\n                setIsError(true);\r\n                setErrorInfo((prevState) => ({...prevState, info2: info2}))\r\n                valid = 1;\r\n        } else {\r\n            setErrorInfo((prevState) => ({...prevState, info2: \"\"}))\r\n        }\r\n\r\n        if (valid === 0) {\r\n            let check = 0;\r\n            let mainquery = false; \r\n            let compquery = false; \r\n            let privquery = false;\r\n            setIsError(false);\r\n            let izipcode, czipcode;\r\n            if (FormData.izip1 === null) {\r\n                izipcode = null\r\n            } else {\r\n                izipcode = FormData.izip1 + \"-\" + FormData.izip2;\r\n            }\r\n            if (FormData.czip1 === null) {\r\n                czipcode = null;\r\n            } else {\r\n                czipcode = FormData.czip1 + \"-\" + FormData.czip2;\r\n            }\r\n            \r\n            //console.log(\"Userdata: \" + User.accinfo.czip + \" / FormData: \" + czipcode);\r\n            if (User.accinfo.login !== FormData.login) {\r\n                //setFormData((prevState) => ({...prevState, mainquery: true}));\r\n                mainquery = true;\r\n                check = 1\r\n            } else {\r\n                //setFormData((prevState) => ({...prevState, mainquery: false}));\r\n                mainquery = false;\r\n            }\r\n\r\n\r\n            if (User.accinfo.cname !== FormData.cname || User.accinfo.cstreet !== FormData.cstreet || \r\n                User.accinfo.ccity !== FormData.ccity || User.accinfo.chouse !== FormData.chouse ||\r\n                User.accinfo.cflat !== FormData.cflat || User.accinfo.cnip !== FormData.cnip || \r\n                User.accinfo.cregon !== FormData.cregon || User.accinfo.czip !== czipcode) {\r\n                    compquery = true;\r\n                    //setFormData((prevState) => ({...prevState, compquery: true}));\r\n                    check = 1\r\n            } else {\r\n                compquery = false;\r\n                //setFormData((prevState) => ({...prevState, compquery: false}));\r\n            }\r\n\r\n            if (User.accinfo.iname !== FormData.iname || User.accinfo.isurname !== FormData.isurname ||\r\n                User.accinfo.istreet !== FormData.istreet || User.accinfo.icity !== FormData.icity || \r\n                User.accinfo.ihouse !== FormData.ihouse || User.accinfo.iflat !== FormData.iflat || \r\n                User.accinfo.izip !== izipcode) {\r\n                    privquery = true;\r\n                    check = 1\r\n                    //setFormData((prevState) => ({...prevState, privquery: true}));\r\n            } else {\r\n                privquery = false;\r\n                //setFormData((prevState) => ({...prevState, privquery: false}));\r\n            }\r\n\r\n            let fullFormData = {FormData, mainquery, compquery, privquery};\r\n\r\n\r\n            if (check > 0) {\r\n                console.log(\"SENDING DATA\");\r\n                Axios.post(ServerPath + \"EditAccount.php\", fullFormData)\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                        if (res.data !== \"success\") {\r\n                            let errordata = (\r\n                                <div className=\"LoginErrInfo\">\r\n                                    {res.data.map((r, index) => {\r\n                                        return(\r\n                                            <p key={index}>{r}</p>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            \r\n                            )\r\n                        }\r\n                    });\r\n            } else {\r\n                console.log(\"NOTHING CHANGED\");\r\n            }\r\n        }\r\n    }\r\n\r\n    if (AccountFound) {\r\n        if (User.accinfo.cname === null) {\r\n            AccountType = \"indywidualne\";\r\n            fullname = User.accinfo.iname + \" \" + User.accinfo.isurname;\r\n            address = User.accinfo.istreet + \" \" + User.accinfo.ihouse + \"/\" + User.accinfo.iflat;\r\n        } else {\r\n            AccountType = \"firmowe\";\r\n            fullname = User.accinfo.cname;\r\n            address = User.accinfo.cstreet + \" \" + User.accinfo.chouse + \"/\" + User.accinfo.cflat;\r\n        }\r\n        AccountData = (\r\n            <div>\r\n            <div className=\"AccountData\" style={ACStyle}>\r\n                <div className=\"AccountNameContainer\">\r\n                    <div className=\"AccountName\">\r\n                        <FaRegUserCircle size={50}/>\r\n                        <h1>{fullname}</h1>\r\n                    </div>\r\n                    <div className=\"AccountType\">Konto {AccountType}</div>\r\n                </div>\r\n                <ShowAccountData\r\n                    login={User.userinfo.login}\r\n                    mail={User.accinfo.mail}\r\n                    iname={User.accinfo.iname}\r\n                    isurname={User.accinfo.isurname}\r\n                    address={address}\r\n                    izip={User.accinfo.izip}\r\n                    icity={User.accinfo.icity}\r\n                    cname={User.accinfo.cname}\r\n                    cnip={User.accinfo.cnip}\r\n                    cregon={User.accinfo.cregon}\r\n                    czip={User.accinfo.czip}\r\n                    ccity={User.accinfo.ccity}\r\n                    changetab={changeTab.bind(this, 0)}\r\n                />\r\n            </div>\r\n            <div className=\"AccountData\" style={EAStyle}>\r\n                <div className=\"AccountNameContainer\">\r\n                    <div className=\"AccountName\">\r\n                        <FaRegUserCircle size={50}/>\r\n                        <h1>{fullname}</h1>\r\n                    </div>\r\n                    <div className=\"AccountType\">Konto {AccountType}</div>\r\n                </div>\r\n                <EditAccountData\r\n                    login={User.userinfo.login}\r\n                    mail={User.accinfo.mail}\r\n                    iname={User.accinfo.iname}\r\n                    isurname={User.accinfo.isurname}\r\n                    istreet={User.accinfo.istreet}\r\n                    ihouse={User.accinfo.ihouse}\r\n                    iflat={User.accinfo.iflat}\r\n                    izip1={User.accinfo.izip1}\r\n                    izip2={User.accinfo.izip2}\r\n                    icity={User.accinfo.icity}\r\n                    cname={User.accinfo.cname}\r\n                    cnip={User.accinfo.cnip}\r\n                    cregon={User.accinfo.cregon}\r\n                    ccity={User.accinfo.ccity}\r\n                    cstreet={User.accinfo.cstreet}\r\n                    chouse={User.accinfo.chouse}\r\n                    cflat={User.accinfo.cflat}\r\n                    czip1={User.accinfo.czip1}\r\n                    czip2={User.accinfo.czip2}\r\n                    changetab={changeTab.bind(this, 2)}\r\n                    submitdatachange={changeAccountData}\r\n                    iserror={IsError}\r\n                    errorinfo={ErrorInfo}\r\n                    log={handleFormData.bind(this, \"LOG\")}\r\n                    cnm={handleFormData.bind(this, \"CNM\")}                  \r\n                    cst={handleFormData.bind(this, \"CST\")}\r\n                    cct={handleFormData.bind(this, \"CCT\")}\r\n                    cho={handleFormData.bind(this, \"CHO\")}\r\n                    cfl={handleFormData.bind(this, \"CFL\")}\r\n                    czp={handleFormData.bind(this, \"CZP\")}\r\n                    cnp={handleFormData.bind(this, \"CNP\")}\r\n                    crg={handleFormData.bind(this, \"CRG\")}\r\n                    inm={handleFormData.bind(this, \"INM\")}\r\n                    isn={handleFormData.bind(this, \"ISN\")}\r\n                    ict={handleFormData.bind(this, \"ICT\")}\r\n                    ist={handleFormData.bind(this, \"IST\")}\r\n                    iho={handleFormData.bind(this, \"IHO\")}\r\n                    ifl={handleFormData.bind(this, \"IFL\")}\r\n                    iz1={handleFormData.bind(this, \"IZ1\")}\r\n                    iz2={handleFormData.bind(this, \"IZ2\")}\r\n                    cz1={handleFormData.bind(this, \"CZ1\")}\r\n                    cz2={handleFormData.bind(this, \"CZ2\")}\r\n                />\r\n            </div></div>\r\n        )\r\n    } else if (!UserLogged) {\r\n        AccountData = (\r\n            <div>\r\n                Nie wykryto zalogowanego usera.\r\n            </div>\r\n        )\r\n    } else {\r\n        AccountData = (\r\n            <div>\r\n                Brak danych\r\n            </div>\r\n        )\r\n    }\r\n\r\n    console.log(User);\r\n\r\n    return(\r\n        <div className=\"SiteContainer\">\r\n            <TitleBar title=\"Konto użytkownika\"/>\r\n            {AccountData}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account;\r\n\r\n//<NavLink to=\"/accountedit\"><button>EDYCJA KONTA</button></NavLink>\r\n//<NavLink to=\"/myorders\"><button>MOJE ZAMÓWIENIA</button></NavLink>\r\n//<NavLink to=\"/myorders\"><button>ZMIEŃ HASŁO</button></NavLink>"]},"metadata":{},"sourceType":"module"}