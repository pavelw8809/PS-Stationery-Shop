{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\CartItem\\\\CartItem.js\";\nimport React, { useState, useContext } from 'react';\nimport { CartContext, TotalContext } from '../../containers/App';\nimport './CartItem.scss';\nimport { TiDelete } from \"react-icons/ti\";\nimport { NavLink } from 'react-router-dom';\n\nconst CartItem = props => {\n  const [initCart, Cart] = useContext(CartContext); // stan globalny - stan koszyka\n\n  const [initTotal, Total] = useContext(TotalContext); // stan globalny - suma do zapłaty\n\n  const [counter, setCounter] = useState({\n    quantity: props.quantity\n  }); // stan lokalny - wyświetla ilość produktu\n\n  const [totalPrice, setTotalPrice] = useState({\n    totalprice: props.prodtotal\n  }); // stan lokalny - wyświetla sumę do zapłaty\n\n  const Image = require('../../images/images/' + props.imagename + '.png'); // Ścieżka do zdjęcia\n\n\n  let ProdImgStyle;\n  ProdImgStyle = {\n    // Stylizacja zdjęcia - zdjęcie jako tło karty\n    backgroundImage: \"url(\" + Image + \")\"\n  };\n  let CartStorage = JSON.parse(localStorage.getItem('pscart'));\n\n  const increaseQuantity = index => {\n    let newCart = [...initCart];\n    newCart[index].quantity = newCart[index].quantity + 1;\n    newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\n    console.log(index);\n    let CartStorageN = [...CartStorage];\n    CartStorageN[index].quantity = CartStorageN[index].quantity + 1;\n    CartStorageN[index].prodtotal = CartStorageN[index].price * CartStorageN[index].quantity;\n    setCounter({\n      quantity: newCart[index].quantity\n    });\n    setTotalPrice({\n      totalprice: newCart[index].prodtotal\n    });\n    Total({\n      total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\n    });\n  };\n\n  const decreaseQuantity = index => {\n    if (counter.quantity > 1) {\n      //let newCart = [...initCart];\n      //newCart[index].quantity = newCart[index].quantity-1;\n      //newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\n      let CartStorageN = [...CartStorage];\n      CartStorageN[index].quantity = CartStorageN[index].quantity - 1;\n      CartStorageN[index].prodtotal = CartStorageN[index].price * CartStorageN[index].quantity;\n      localStorage.setItem('pscart', JSON.stringify(CartStorageN)); //setCounter({\n      //    quantity: newCart[index].quantity\n      //})\n      //setTotalPrice({\n      //    totalprice: newCart[index].prodtotal\n      //})\n      //Total({\n      //    total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\n      //})\n    }\n  }; //localStorage.setItem('pscart', JSON.stringify(Cart));\n  //localStorage.setItem('pstotal', Total.total);\n\n\n  return React.createElement(\"div\", {\n    className: \"CartItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    className: \"CartItemImg\",\n    style: ProdImgStyle,\n    to: {\n      pathname: \"/artdetails\",\n      artProps: {\n        name: props.name,\n        shortdesc: props.shortdesc,\n        description: props.description,\n        price: props.price,\n        imagename: props.imagename,\n        prodid: props.prodid\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CartItemContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"CartItemName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, props.name, \" - \", props.desc), React.createElement(\"div\", {\n    className: \"CartItemPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CartProdPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, parseFloat(props.price).toFixed(2)), React.createElement(\"div\", {\n    className: \"CartItemPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: increaseQuantity.bind(this, props.keyid),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"input\", {\n    className: \"CartqInput\",\n    type: \"text\",\n    value: counter.quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: decreaseQuantity.bind(this, props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"-\")), React.createElement(\"div\", {\n    className: \"CartItemTotal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, parseFloat(totalPrice.totalprice).toFixed(2)))), React.createElement(\"button\", {\n    className: \"CartRemBtn\",\n    onClick: props.removeitem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(TiDelete, {\n    size: 30,\n    className: \"RemBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })));\n};\n\nexport default CartItem;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/CartItem/CartItem.js"],"names":["React","useState","useContext","CartContext","TotalContext","TiDelete","NavLink","CartItem","props","initCart","Cart","initTotal","Total","counter","setCounter","quantity","totalPrice","setTotalPrice","totalprice","prodtotal","Image","require","imagename","ProdImgStyle","backgroundImage","CartStorage","JSON","parse","localStorage","getItem","increaseQuantity","index","newCart","parseFloat","price","console","log","CartStorageN","total","decreaseQuantity","setItem","stringify","pathname","artProps","name","shortdesc","description","prodid","desc","toFixed","bind","keyid","id","removeitem"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { CartContext, TotalContext } from '../../containers/App';\r\nimport './CartItem.scss';\r\nimport { TiDelete } from \"react-icons/ti\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst CartItem = (props) => {\r\n\r\n    const [initCart, Cart] = useContext(CartContext);                               // stan globalny - stan koszyka\r\n    const [initTotal, Total] = useContext(TotalContext);                            // stan globalny - suma do zapłaty\r\n    const [counter, setCounter] = useState({quantity: props.quantity})              // stan lokalny - wyświetla ilość produktu\r\n    const [totalPrice, setTotalPrice] = useState({totalprice: props.prodtotal})     // stan lokalny - wyświetla sumę do zapłaty\r\n\r\n    const Image = require('../../images/images/' + props.imagename + '.png');       // Ścieżka do zdjęcia\r\n\r\n    let ProdImgStyle;\r\n    ProdImgStyle = {                                                                // Stylizacja zdjęcia - zdjęcie jako tło karty\r\n        backgroundImage: \"url(\" + Image + \")\"\r\n    }\r\n\r\n    let CartStorage = JSON.parse(localStorage.getItem('pscart'));\r\n\r\n    const increaseQuantity = (index) => {\r\n        let newCart = [...initCart];\r\n        newCart[index].quantity = newCart[index].quantity+1;\r\n        newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\r\n        \r\n        console.log(index);\r\n        let CartStorageN = [...CartStorage];\r\n        CartStorageN[index].quantity = CartStorageN[index].quantity+1;\r\n        CartStorageN[index].prodtotal = CartStorageN[index].price*CartStorageN[index].quantity;\r\n\r\n        setCounter({\r\n            quantity: newCart[index].quantity\r\n        })\r\n        setTotalPrice({\r\n            totalprice: newCart[index].prodtotal\r\n        })\r\n        Total({\r\n            total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\r\n        })\r\n    }\r\n\r\n    const decreaseQuantity = (index) => {\r\n        if (counter.quantity > 1) {\r\n            //let newCart = [...initCart];\r\n            //newCart[index].quantity = newCart[index].quantity-1;\r\n            //newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\r\n\r\n            let CartStorageN = [...CartStorage];\r\n            CartStorageN[index].quantity = CartStorageN[index].quantity-1;\r\n            CartStorageN[index].prodtotal = CartStorageN[index].price*CartStorageN[index].quantity;\r\n            localStorage.setItem('pscart', JSON.stringify(CartStorageN));\r\n\r\n            //setCounter({\r\n            //    quantity: newCart[index].quantity\r\n            //})\r\n            //setTotalPrice({\r\n            //    totalprice: newCart[index].prodtotal\r\n            //})\r\n            //Total({\r\n            //    total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\r\n            //})\r\n        }\r\n    }\r\n\r\n    //localStorage.setItem('pscart', JSON.stringify(Cart));\r\n    //localStorage.setItem('pstotal', Total.total);\r\n\r\n    return(\r\n        <div className=\"CartItem\">\r\n        <NavLink className=\"CartItemImg\" style={ProdImgStyle} to={{\r\n            pathname: \"/artdetails\",\r\n            artProps: {\r\n                name: props.name,\r\n                shortdesc: props.shortdesc,\r\n                description: props.description,\r\n                price: props.price,\r\n                imagename: props.imagename,\r\n                prodid: props.prodid\r\n            }\r\n            }}>\r\n        </NavLink>\r\n            <div className=\"CartItemContainer\">\r\n                <h4 className=\"CartItemName\">{props.name} - {props.desc}</h4>\r\n                <div className=\"CartItemPrice\">\r\n                    <div className=\"CartProdPrice\">{parseFloat(props.price).toFixed(2)}</div>\r\n                    <div className=\"CartItemPanel\">\r\n                        <button className=\"qBtn\" onClick={increaseQuantity.bind(this, props.keyid)}>+</button>\r\n                        <input className=\"CartqInput\" type=\"text\" value={counter.quantity}/>\r\n                        <button className=\"qBtn\" onClick={decreaseQuantity.bind(this, props.id)}>-</button>\r\n                    </div>\r\n                    <div className=\"CartItemTotal\">\r\n                        {parseFloat(totalPrice.totalprice).toFixed(2)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className=\"CartRemBtn\" onClick={props.removeitem}><TiDelete size={30} className=\"RemBtn\"/></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n"]},"metadata":{},"sourceType":"module"}