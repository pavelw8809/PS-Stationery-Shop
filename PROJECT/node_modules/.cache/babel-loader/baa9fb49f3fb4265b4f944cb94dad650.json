{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\Account\\\\Account.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Account.scss';\nimport { UserContext, ServerPath } from '../../containers/App';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { FaRegUserCircle } from 'react-icons/fa';\nimport ShowAccountData from '../../components/ShowAccountData/ShowAccountData';\nimport EditAccountData from '../../components/EditAccountData/EditAccountData';\n\nconst Account = () => {\n  const [User, setUser] = useContext(UserContext); //const [AccountInfo, setAccountInfo] = useState([]);\n\n  const [AccountFound, setAccountFound] = useState(false);\n  const [UserLogged, setUserLogged] = useState(false);\n  const [TabDisp, setTabDisp] = useState({\n    accshow: true,\n    accedit: false,\n    accpass: false\n  });\n  const [FormData, setFormData] = useState();\n  const [IsError, setIsError] = useState(false);\n  const [ErrorInfo, setErrorInfo] = useState([]);\n  const [InfoType] = useState([\"mail\", \"cname\", \"ccity\", \"cstreet\"]); //let UserId = Cookies.get('psid');\n  //let DecodedUserId = decodeURIComponent(UserId);\n\n  let SessionId = Cookies.get('pssession');\n  let ExtSession = Cookies.get('psacc'); //let DecodedUserName = decodeURIComponent(UserName);\n  //const [UserData, setUserData] = useState({\n  //    id: DecodedUserId,\n  //    login: DecodedUserName\n  //});\n\n  let History = useHistory();\n  console.log(User);\n  useEffect(() => {\n    if (!ExtSession) {\n      History.push('/extlogin');\n    } else {\n      if (SessionId !== null) {\n        //console.log(User.accinfo);\n        if (!User.acccontrol) {\n          console.log(\"loading...\");\n          Axios.post(ServerPath + 'UserAccount.php', ExtSession).then(res => {\n            console.log(res.data);\n\n            if (res.data.length > 0) {\n              //setAccountInfo(res.data);\n              res.data.map((r, index) => {\n                let zipA, zipB;\n\n                if (r.ci_zip !== null) {\n                  zipA = r.ci_zip.substring(0, 2);\n                  zipB = r.ci_zip.substring(3, 6);\n                }\n\n                if (r.cc_zip !== null) {\n                  zipA = r.cc_zip.substring(0, 2);\n                  zipB = r.cc_zip.substring(3, 6);\n                }\n\n                setUser(prevState => ({ ...prevState,\n                  accinfo: {\n                    main: {\n                      login: r.u_login,\n                      mail: r.u_mail\n                    },\n                    comp: {\n                      cname: r.cc_name,\n                      ccity: r.cc_city,\n                      cstreet: r.cc_street,\n                      chouse: r.cc_number,\n                      cflat: r.cc_number_flat,\n                      czip: r.cc_zip,\n                      cnip: r.cc_NIP,\n                      cregon: r.cc_REGON,\n                      czip1: zipA,\n                      czip2: zipB\n                    },\n                    priv: {\n                      iname: r.ci_name,\n                      isurname: r.ci_surname,\n                      icity: r.ci_city,\n                      istreet: r.ci_street,\n                      ihouse: r.ci_number,\n                      iflat: r.ci_number_flat,\n                      izip: r.ci_zip,\n                      izip1: zipA,\n                      izip2: zipB\n                    }\n                  },\n                  acccontrol: true\n                }));\n                setFormData(prevState => ({ ...prevState,\n                  main: {\n                    login: r.u_login,\n                    mail: r.u_mail\n                  },\n                  comp: {\n                    cname: r.cc_name,\n                    ccity: r.cc_city,\n                    cstreet: r.cc_street,\n                    chouse: r.cc_number,\n                    cflat: r.cc_number_flat,\n                    czip: r.cc_zip,\n                    cnip: r.cc_NIP,\n                    cregon: r.cc_REGON,\n                    czip1: zipA,\n                    czip2: zipB\n                  },\n                  priv: {\n                    iname: r.ci_name,\n                    isurname: r.ci_surname,\n                    icity: r.ci_city,\n                    istreet: r.ci_street,\n                    ihouse: r.ci_number,\n                    iflat: r.ci_number_flat,\n                    izip: r.ci_zip,\n                    izip1: zipA,\n                    izip2: zipB\n                  }\n                }));\n              }); //console.log(res.data);\n\n              setAccountFound(true);\n            }\n          });\n        } else {\n          console.log(\"We still have it\");\n          setAccountFound(true);\n          setFormData(prevState => ({ ...prevState,\n            main: {\n              login: User.userinfo.login,\n              mail: User.accinfo.main.mail\n            },\n            comp: {\n              cname: User.accinfo.comp.cname,\n              ccity: User.accinfo.comp.ccity,\n              cstreet: User.accinfo.comp.cstreet,\n              chouse: User.accinfo.comp.chouse,\n              cflat: User.accinfo.comp.cflat,\n              czip: User.accinfo.comp.czip,\n              cnip: User.accinfo.comp.cnip,\n              cregon: User.accinfo.comp.cregon,\n              czip1: User.accinfo.comp.czip1,\n              czip2: User.accinfo.comp.czip2\n            },\n            priv: {\n              iname: User.accinfo.priv.iname,\n              isurname: User.accinfo.priv.isurname,\n              icity: User.accinfo.priv.icity,\n              istreet: User.accinfo.priv.istreet,\n              ihouse: User.accinfo.priv.ihouse,\n              iflat: User.accinfo.priv.iflat,\n              izip: User.accinfo.priv.izip,\n              izip1: User.accinfo.priv.izip1,\n              izip2: User.accinfo.priv.izip2\n            }\n          }));\n        }\n      }\n    }\n  }, []);\n  let AccountData, AccFormData, AccountType, address, fullname; //zip1, zip2;\n\n  let ACStyle, EAStyle, CPStyle; //ACStyle = {display: 'block'};\n\n  EAStyle = {\n    display: 'none'\n  };\n  CPStyle = {\n    display: 'none'\n  };\n\n  if (TabDisp.accshow) {\n    ACStyle = {\n      display: 'block'\n    };\n    EAStyle = {\n      display: 'none'\n    };\n    CPStyle = {\n      display: 'none'\n    };\n  }\n\n  if (TabDisp.accedit) {\n    ACStyle = {\n      display: 'none'\n    };\n    EAStyle = {\n      display: 'block'\n    };\n    CPStyle = {\n      display: 'none'\n    };\n  }\n\n  const changeTab = option => {\n    if (option === 0) {\n      setTabDisp({ ...TabDisp,\n        accshow: false,\n        accedit: true,\n        accpass: false\n      });\n    }\n\n    if (option === 1) {\n      setTabDisp({ ...TabDisp,\n        accshow: false,\n        accedit: false,\n        accpass: true\n      });\n    }\n\n    if (option === 2) {\n      setTabDisp({ ...TabDisp,\n        accshow: true,\n        accedit: false,\n        accpass: false\n      });\n    }\n  };\n\n  const handleFormData = (data, event) => {\n    switch (data) {\n      case \"LOG\":\n        setFormData({ ...FormData,\n          main: {\n            login: event.target.value\n          }\n        });\n        break;\n\n      case \"CNM\":\n        setFormData({ ...FormData,\n          comp: {\n            cname: event.target.value\n          }\n        });\n        break;\n\n      case \"CST\":\n        setFormData({ ...FormData,\n          comp: {\n            cstreet: event.target.value\n          }\n        });\n        break;\n\n      case \"CCT\":\n        setFormData({ ...FormData,\n          comp: {\n            ccity: event.target.value\n          }\n        });\n        break;\n\n      case \"CHO\":\n        setFormData({ ...FormData,\n          comp: {\n            chouse: event.target.value\n          }\n        });\n        break;\n\n      case \"CFL\":\n        setFormData({ ...FormData,\n          comp: {\n            cflat: event.target.value\n          }\n        });\n        break;\n\n      case \"CNP\":\n        setFormData({ ...FormData,\n          comp: {\n            cnip: event.target.value\n          }\n        });\n        break;\n\n      case \"CRG\":\n        setFormData({ ...FormData,\n          comp: {\n            cregon: event.target.value\n          }\n        });\n        break;\n\n      case \"CZ1\":\n        setFormData({ ...FormData,\n          comp: {\n            czip1: event.target.value\n          }\n        });\n        break;\n\n      case \"CZ2\":\n        setFormData({ ...FormData,\n          comp: {\n            czip2: event.target.value\n          }\n        });\n        break;\n\n      case \"INM\":\n        setFormData({ ...FormData,\n          priv: {\n            iname: event.target.value\n          }\n        });\n        break;\n\n      case \"ISN\":\n        setFormData({ ...FormData,\n          priv: {\n            isurname: event.target.value\n          }\n        });\n        break;\n\n      case \"ICT\":\n        setFormData({ ...FormData,\n          priv: {\n            icity: event.target.value\n          }\n        });\n        break;\n\n      case \"IST\":\n        setFormData({ ...FormData,\n          priv: {\n            istreet: event.target.value\n          }\n        });\n        break;\n\n      case \"IHO\":\n        setFormData({ ...FormData,\n          priv: {\n            ihouse: event.target.value\n          }\n        });\n        break;\n\n      case \"IFL\":\n        setFormData({ ...FormData,\n          priv: {\n            iflat: event.target.value\n          }\n        });\n        break;\n\n      case \"IZ1\":\n        setFormData({ ...FormData,\n          priv: {\n            izip1: event.target.value\n          }\n        });\n        break;\n\n      case \"IZ2\":\n        setFormData({ ...FormData,\n          priv: {\n            izip2: event.target.value\n          }\n        });\n        break;\n    }\n\n    console.log(FormData);\n  };\n\n  const changeAccountData = () => {\n    let valid = 0;\n    let check = 0;\n    let info1 = 'BŁĄD: Kod pocztowy powinien zawierać tylko cyfry';\n    let info2 = 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry';\n\n    if (isNaN(FormData.priv.izip1) || isNaN(FormData.priv.izip2) || isNaN(FormData.comp.czip1) || isNaN(FormData.comp.czip2)) {\n      if (!ErrorInfo.includes(info1)) {\n        setErrorInfo([...ErrorInfo, info1]);\n        valid++;\n      }\n    }\n\n    if (isNaN(FormData.comp.cregon) && FormData.comp.cregon !== null) {\n      if (!ErrorInfo.includes(info2)) {\n        setErrorInfo([...ErrorInfo, info2]);\n        valid++;\n      }\n    }\n\n    if (valid > 0) {\n      setIsError(true);\n    } else {\n      setIsError(false);\n      setErrorInfo(\"\");\n      let izipcode = FormData.priv.izip1 + \"-\" + FormData.priv.izip2;\n      let czipcode = FormData.comp.czip1 + \"-\" + FormData.comp.czip2; //console.log(\"Userdata: \" + User.accinfo.izip + \" / FormData: \" + izipcode);\n\n      if (User.userinfo.login !== FormData.main.login) {\n        setFormData({ ...FormData,\n          mainquery: true\n        });\n        check++;\n      } else {\n        setFormData({ ...FormData,\n          mainquery: false\n        });\n        check--;\n      }\n\n      if (User.accinfo.comp !== FormData.comp) {\n        setFormData({ ...FormData,\n          compquery: true\n        });\n        check++;\n      } else {\n        setFormData({ ...FormData,\n          compquery: false\n        });\n        check--;\n      }\n\n      if (User.accinfo.priv !== FormData.priv) {\n        setFormData({ ...FormData,\n          privquery: true\n        });\n        check++;\n      } else {\n        setFormData({ ...FormData,\n          privquery: false\n        });\n        check--;\n      }\n\n      console.log(\"check: \" + check);\n      /*\r\n      if (User.accinfo.cname !== FormData.cname || User.accinfo.cstreet !== FormData.cstreet || \r\n          User.accinfo.ccity !== FormData.ccity || User.accinfo.chouse !== FormData.chouse ||\r\n          User.accinfo.cflat !== FormData.cflat || User.accinfo.cnip !== FormData.cnip || \r\n          User.accinfo.cregon !== FormData.cregon || User.accinfo.czip !== czipcode) {\r\n              setFormData({...FormData, compquery: true});\r\n              check++;\r\n      } else {\r\n          setFormData({...FormData, compquery: false});\r\n          check--;\r\n      }\r\n        if (User.accinfo.iname !== FormData.iname || User.accinfo.isurname !== FormData.isurname ||\r\n          User.accinfo.istreet !== FormData.istreet || User.accinfo.icity !== FormData.icity || \r\n          User.accinfo.ihouse !== FormData.ihouse || User.accinfo.iflat !== FormData.iflat || \r\n          User.accinfo.izip !== izipcode) {\r\n              setFormData({...FormData, privquery: true});\r\n              check++;\r\n      } else {\r\n          setFormData({...FormData, privquery: false})\r\n          check--\r\n      }\r\n      */\n\n      if (check > 0) {\n        console.log(\"SENDING DATA\");\n        console.log(FormData);\n        /*\r\n        Axios.post(ServerPath + \"editaccount.php\", FormData)\r\n        .then(res => {\r\n            console.log(res.data);\r\n        })\r\n        */\n      } else {\n        console.log(\"NOTHING CHANGED\");\n      }\n    }\n  };\n\n  if (AccountFound) {\n    if (User.accinfo.comp.cname === null) {\n      AccountType = \"indywidualne\";\n      fullname = User.accinfo.priv.iname + \" \" + User.accinfo.priv.isurname;\n      address = User.accinfo.priv.istreet + \" \" + User.accinfo.priv.ihouse + \"/\" + User.accinfo.priv.iflat;\n    } else {\n      AccountType = \"firmowe\";\n      fullname = User.accinfo.comp.cname;\n      address = User.accinfo.comp.cstreet + \" \" + User.accinfo.comp.chouse + \"/\" + User.accinfo.comp.cflat;\n    }\n\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountData\",\n      style: ACStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountNameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(FaRegUserCircle, {\n      size: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, fullname)), React.createElement(\"div\", {\n      className: \"AccountType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Konto \", AccountType)), React.createElement(ShowAccountData, {\n      login: User.userinfo.login,\n      mail: User.accinfo.main.mail,\n      iname: User.accinfo.priv.iname,\n      isurname: User.accinfo.priv.isurname,\n      address: address,\n      izip: User.accinfo.priv.izip,\n      icity: User.accinfo.priv.icity,\n      cname: User.accinfo.comp.cname,\n      cnip: User.accinfo.comp.cnip,\n      cregon: User.accinfo.comp.cregon,\n      czip: User.accinfo.comp.czip,\n      ccity: User.accinfo.comp.ccity,\n      changetab: changeTab.bind(this, 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"AccountData\",\n      style: EAStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountNameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(FaRegUserCircle, {\n      size: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, fullname)), React.createElement(\"div\", {\n      className: \"AccountType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Konto \", AccountType)), React.createElement(EditAccountData, {\n      login: User.userinfo.login,\n      mail: User.accinfo.main.mail,\n      iname: User.accinfo.priv.iname,\n      isurname: User.accinfo.priv.isurname,\n      istreet: User.accinfo.priv.istreet,\n      ihouse: User.accinfo.priv.ihouse,\n      iflat: User.accinfo.priv.iflat,\n      izip1: User.accinfo.priv.izip1,\n      izip2: User.accinfo.priv.izip2,\n      icity: User.accinfo.priv.icity,\n      cname: User.accinfo.comp.cname,\n      cnip: User.accinfo.comp.cnip,\n      cregon: User.accinfo.comp.cregon,\n      ccity: User.accinfo.comp.ccity,\n      cstreet: User.accinfo.comp.cstreet,\n      chouse: User.accinfo.comp.chouse,\n      cflat: User.accinfo.comp.cflat,\n      czip1: User.accinfo.comp.czip1,\n      czip2: User.accinfo.comp.czip2,\n      changetab: changeTab,\n      submitdatachange: changeAccountData,\n      iserror: IsError,\n      errorinfo: ErrorInfo,\n      log: handleFormData.bind(this, \"LOG\"),\n      cnm: handleFormData.bind(this, \"CNM\"),\n      cst: handleFormData.bind(this, \"CST\"),\n      cct: handleFormData.bind(this, \"CCT\"),\n      cho: handleFormData.bind(this, \"CHO\"),\n      cfl: handleFormData.bind(this, \"CFL\"),\n      czp: handleFormData.bind(this, \"CZP\"),\n      cnp: handleFormData.bind(this, \"CNP\"),\n      crg: handleFormData.bind(this, \"CRG\"),\n      inm: handleFormData.bind(this, \"INM\"),\n      isn: handleFormData.bind(this, \"ISN\"),\n      ict: handleFormData.bind(this, \"ICT\"),\n      ist: handleFormData.bind(this, \"IST\"),\n      iho: handleFormData.bind(this, \"IHO\"),\n      ifl: handleFormData.bind(this, \"IFL\"),\n      iz1: handleFormData.bind(this, \"IZ1\"),\n      iz2: handleFormData.bind(this, \"IZ2\"),\n      cz1: handleFormData.bind(this, \"CZ1\"),\n      cz2: handleFormData.bind(this, \"CZ2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    })));\n  } else if (!UserLogged) {\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"Nie wykryto zalogowanego usera.\");\n  } else {\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"Brak danych\");\n  }\n\n  console.log(FormData);\n  return React.createElement(\"div\", {\n    className: \"SiteContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: \"Konto u\\u017Cytkownika\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }), AccountData);\n};\n\nexport default Account; //<NavLink to=\"/accountedit\"><button>EDYCJA KONTA</button></NavLink>\n//<NavLink to=\"/myorders\"><button>MOJE ZAMÓWIENIA</button></NavLink>\n//<NavLink to=\"/myorders\"><button>ZMIEŃ HASŁO</button></NavLink>","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/Account/Account.js"],"names":["React","useContext","useEffect","useState","UserContext","ServerPath","useHistory","NavLink","TitleBar","Axios","Cookies","FaRegUserCircle","ShowAccountData","EditAccountData","Account","User","setUser","AccountFound","setAccountFound","UserLogged","setUserLogged","TabDisp","setTabDisp","accshow","accedit","accpass","FormData","setFormData","IsError","setIsError","ErrorInfo","setErrorInfo","InfoType","SessionId","get","ExtSession","History","console","log","push","acccontrol","post","then","res","data","length","map","r","index","zipA","zipB","ci_zip","substring","cc_zip","prevState","accinfo","main","login","u_login","mail","u_mail","comp","cname","cc_name","ccity","cc_city","cstreet","cc_street","chouse","cc_number","cflat","cc_number_flat","czip","cnip","cc_NIP","cregon","cc_REGON","czip1","czip2","priv","iname","ci_name","isurname","ci_surname","icity","ci_city","istreet","ci_street","ihouse","ci_number","iflat","ci_number_flat","izip","izip1","izip2","userinfo","AccountData","AccFormData","AccountType","address","fullname","ACStyle","EAStyle","CPStyle","display","changeTab","option","handleFormData","event","target","value","changeAccountData","valid","check","info1","info2","isNaN","includes","izipcode","czipcode","mainquery","compquery","privquery","bind"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './Account.scss';\r\nimport { UserContext, ServerPath } from '../../containers/App';\r\nimport { useHistory, NavLink } from 'react-router-dom';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\nimport ShowAccountData from '../../components/ShowAccountData/ShowAccountData';\r\nimport EditAccountData from '../../components/EditAccountData/EditAccountData';\r\n\r\nconst Account = () => {\r\n    const [User, setUser] = useContext(UserContext);\r\n    //const [AccountInfo, setAccountInfo] = useState([]);\r\n    const [AccountFound, setAccountFound] = useState(false);\r\n    const [UserLogged, setUserLogged] = useState(false);\r\n    const [TabDisp, setTabDisp] = useState({accshow: true, accedit: false, accpass: false})\r\n    const [FormData, setFormData] = useState();\r\n    const [IsError, setIsError] = useState(false);\r\n    const [ErrorInfo, setErrorInfo] = useState([]);\r\n    const [InfoType] = useState([\"mail\", \"cname\", \"ccity\", \"cstreet\"]);\r\n    //let UserId = Cookies.get('psid');\r\n    //let DecodedUserId = decodeURIComponent(UserId);\r\n    let SessionId = Cookies.get('pssession');\r\n    let ExtSession = Cookies.get('psacc');\r\n    //let DecodedUserName = decodeURIComponent(UserName);\r\n    //const [UserData, setUserData] = useState({\r\n    //    id: DecodedUserId,\r\n    //    login: DecodedUserName\r\n    //});\r\n    let History = useHistory();\r\n\r\n    console.log(User);\r\n\r\n    useEffect(() => {\r\n        if (!ExtSession) {\r\n            History.push('/extlogin');\r\n        } else {\r\n            if (SessionId !== null) {\r\n                //console.log(User.accinfo);\r\n                if (!User.acccontrol) {\r\n                    \r\n                    console.log(\"loading...\");\r\n                    Axios.post(ServerPath   + 'UserAccount.php', ExtSession)\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                        if(res.data.length > 0) {\r\n                            //setAccountInfo(res.data);\r\n                            \r\n                            res.data.map((r, index) => {\r\n                                let zipA, zipB;\r\n                                if (r.ci_zip !== null) {\r\n                                    zipA = r.ci_zip.substring(0,2);\r\n                                    zipB = r.ci_zip.substring(3,6);\r\n                                }\r\n                                if (r.cc_zip !== null) {\r\n                                    zipA = r.cc_zip.substring(0,2)\r\n                                    zipB = r.cc_zip.substring(3,6);\r\n                                }\r\n                                setUser((prevState) => ({...prevState, accinfo: {\r\n                                    main: {\r\n                                        login: r.u_login,\r\n                                        mail: r.u_mail\r\n                                    },\r\n                                    comp: {\r\n                                        cname: r.cc_name,\r\n                                        ccity: r.cc_city,\r\n                                        cstreet: r.cc_street,\r\n                                        chouse: r.cc_number,\r\n                                        cflat: r.cc_number_flat,\r\n                                        czip: r.cc_zip,\r\n                                        cnip: r.cc_NIP,\r\n                                        cregon: r.cc_REGON,\r\n                                        czip1: zipA,\r\n                                        czip2: zipB\r\n                                    },\r\n                                    priv: {\r\n                                        iname: r.ci_name,\r\n                                        isurname: r.ci_surname,\r\n                                        icity: r.ci_city,\r\n                                        istreet: r.ci_street,\r\n                                        ihouse: r.ci_number,\r\n                                        iflat: r.ci_number_flat,\r\n                                        izip: r.ci_zip,\r\n                                        izip1: zipA,\r\n                                        izip2: zipB,\r\n                                    }\r\n                                },\r\n                                    acccontrol: true\r\n                                }));\r\n                                setFormData((prevState) => ({...prevState, \r\n                                    main: {\r\n                                        login: r.u_login,\r\n                                        mail: r.u_mail\r\n                                    },\r\n                                    comp: {\r\n                                        cname: r.cc_name,\r\n                                        ccity: r.cc_city,\r\n                                        cstreet: r.cc_street,\r\n                                        chouse: r.cc_number,\r\n                                        cflat: r.cc_number_flat,\r\n                                        czip: r.cc_zip,\r\n                                        cnip: r.cc_NIP,\r\n                                        cregon: r.cc_REGON,\r\n                                        czip1: zipA,\r\n                                        czip2: zipB\r\n                                    },\r\n                                    priv: {\r\n                                        iname: r.ci_name,\r\n                                        isurname: r.ci_surname,\r\n                                        icity: r.ci_city,\r\n                                        istreet: r.ci_street,\r\n                                        ihouse: r.ci_number,\r\n                                        iflat: r.ci_number_flat,\r\n                                        izip: r.ci_zip,\r\n                                        izip1: zipA,\r\n                                        izip2: zipB,\r\n                                    }\r\n                                }));\r\n                            })\r\n                            //console.log(res.data);\r\n                            setAccountFound(true);\r\n                        }\r\n                        \r\n                    })\r\n                } else {\r\n                    console.log(\"We still have it\");\r\n                    setAccountFound(true);\r\n                    setFormData((prevState) => ({...prevState, \r\n                        main: {\r\n                            login: User.userinfo.login,\r\n                            mail: User.accinfo.main.mail\r\n                        },\r\n                        comp: {\r\n                            cname: User.accinfo.comp.cname,\r\n                            ccity: User.accinfo.comp.ccity,\r\n                            cstreet: User.accinfo.comp.cstreet,\r\n                            chouse: User.accinfo.comp.chouse,\r\n                            cflat: User.accinfo.comp.cflat,\r\n                            czip: User.accinfo.comp.czip,\r\n                            cnip: User.accinfo.comp.cnip,\r\n                            cregon: User.accinfo.comp.cregon,\r\n                            czip1: User.accinfo.comp.czip1,\r\n                            czip2: User.accinfo.comp.czip2\r\n                        },\r\n                        priv: {\r\n                            iname: User.accinfo.priv.iname,\r\n                            isurname: User.accinfo.priv.isurname,\r\n                            icity: User.accinfo.priv.icity,\r\n                            istreet: User.accinfo.priv.istreet,\r\n                            ihouse: User.accinfo.priv.ihouse,\r\n                            iflat: User.accinfo.priv.iflat,\r\n                            izip: User.accinfo.priv.izip,\r\n                            izip1: User.accinfo.priv.izip1,\r\n                            izip2: User.accinfo.priv.izip2,\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    let AccountData, AccFormData, AccountType, address, fullname //zip1, zip2;\r\n\r\n    let ACStyle, EAStyle, CPStyle;\r\n    //ACStyle = {display: 'block'};\r\n    EAStyle = {display: 'none'};\r\n    CPStyle = {display: 'none'};\r\n\r\n    if (TabDisp.accshow) {\r\n        ACStyle = {display: 'block'};\r\n        EAStyle = {display: 'none'};\r\n        CPStyle = {display: 'none'};\r\n    }\r\n    if (TabDisp.accedit) {\r\n        ACStyle = {display: 'none'};\r\n        EAStyle = {display: 'block'};\r\n        CPStyle = {display: 'none'};\r\n    }\r\n\r\n    const changeTab = (option) => {\r\n        if (option === 0) {\r\n            setTabDisp({...TabDisp, accshow: false, accedit: true, accpass: false});\r\n        }\r\n        if (option === 1) {\r\n            setTabDisp({...TabDisp, accshow: false, accedit: false, accpass: true});\r\n        }\r\n        if (option === 2) {\r\n            setTabDisp({...TabDisp, accshow: true, accedit: false, accpass: false});\r\n        }\r\n    }\r\n\r\n    const handleFormData = (data, event) => {\r\n\r\n        switch(data) {\r\n            case \"LOG\": setFormData({...FormData, main: {login: event.target.value}}); break;\r\n            case \"CNM\": setFormData({...FormData, comp: {cname: event.target.value}}); break;\r\n            case \"CST\": setFormData({...FormData, comp: {cstreet: event.target.value}}); break;\r\n            case \"CCT\": setFormData({...FormData, comp: {ccity: event.target.value}}); break;\r\n            case \"CHO\": setFormData({...FormData, comp: {chouse: event.target.value}}); break;\r\n            case \"CFL\": setFormData({...FormData, comp: {cflat: event.target.value}}); break;\r\n            case \"CNP\": setFormData({...FormData, comp: {cnip: event.target.value}}); break;\r\n            case \"CRG\": setFormData({...FormData, comp: {cregon: event.target.value}}); break;\r\n            case \"CZ1\": setFormData({...FormData, comp: {czip1: event.target.value}}); break;\r\n            case \"CZ2\": setFormData({...FormData, comp: {czip2: event.target.value}}); break;\r\n            case \"INM\": setFormData({...FormData, priv: {iname: event.target.value}}); break;\r\n            case \"ISN\": setFormData({...FormData, priv: {isurname: event.target.value}}); break;\r\n            case \"ICT\": setFormData({...FormData, priv: {icity: event.target.value}}); break;\r\n            case \"IST\": setFormData({...FormData, priv: {istreet: event.target.value}}); break;\r\n            case \"IHO\": setFormData({...FormData, priv: {ihouse: event.target.value}}); break;\r\n            case \"IFL\": setFormData({...FormData, priv: {iflat: event.target.value}}); break;\r\n            case \"IZ1\": setFormData({...FormData, priv: {izip1: event.target.value}}); break;\r\n            case \"IZ2\": setFormData({...FormData, priv: {izip2: event.target.value}}); break;\r\n        }\r\n\r\n        console.log(FormData);\r\n    }\r\n\r\n    const changeAccountData = () => {\r\n        let valid = 0;\r\n        let check = 0;\r\n        let info1 = 'BŁĄD: Kod pocztowy powinien zawierać tylko cyfry';\r\n        let info2 = 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry';\r\n        if (isNaN(FormData.priv.izip1) || isNaN(FormData.priv.izip2) || isNaN(FormData.comp.czip1) || isNaN(FormData.comp.czip2)) {\r\n            if (!ErrorInfo.includes(info1)) {\r\n            setErrorInfo([...ErrorInfo, info1]);\r\n            valid++;\r\n            }\r\n        }\r\n        if (isNaN(FormData.comp.cregon) && FormData.comp.cregon !== null) {\r\n            if (!ErrorInfo.includes(info2)) {\r\n            setErrorInfo([...ErrorInfo, info2]);\r\n            valid++;\r\n            }\r\n        }\r\n\r\n        if (valid > 0) {\r\n            setIsError(true);\r\n        } else {\r\n            setIsError(false);\r\n            setErrorInfo(\"\");\r\n            let izipcode = FormData.priv.izip1 + \"-\" + FormData.priv.izip2;\r\n            let czipcode = FormData.comp.czip1 + \"-\" + FormData.comp.czip2;\r\n            //console.log(\"Userdata: \" + User.accinfo.izip + \" / FormData: \" + izipcode);\r\n            if (User.userinfo.login !== FormData.main.login) {\r\n                setFormData({...FormData, mainquery: true});\r\n                check++;\r\n            } else {\r\n                setFormData({...FormData, mainquery: false});\r\n                check--;\r\n            }\r\n\r\n            if (User.accinfo.comp !== FormData.comp) {\r\n                setFormData({...FormData, compquery: true});\r\n                check++;\r\n            } else {\r\n                setFormData({...FormData, compquery: false});\r\n                check--;\r\n            }\r\n\r\n            if (User.accinfo.priv !== FormData.priv) {\r\n                setFormData({...FormData, privquery: true});\r\n                check++;                \r\n            } else {\r\n                setFormData({...FormData, privquery: false})\r\n                check--\r\n            }\r\n\r\n            console.log(\"check: \" + check)\r\n\r\n            /*\r\n            if (User.accinfo.cname !== FormData.cname || User.accinfo.cstreet !== FormData.cstreet || \r\n                User.accinfo.ccity !== FormData.ccity || User.accinfo.chouse !== FormData.chouse ||\r\n                User.accinfo.cflat !== FormData.cflat || User.accinfo.cnip !== FormData.cnip || \r\n                User.accinfo.cregon !== FormData.cregon || User.accinfo.czip !== czipcode) {\r\n                    setFormData({...FormData, compquery: true});\r\n                    check++;\r\n            } else {\r\n                setFormData({...FormData, compquery: false});\r\n                check--;\r\n            }\r\n\r\n            if (User.accinfo.iname !== FormData.iname || User.accinfo.isurname !== FormData.isurname ||\r\n                User.accinfo.istreet !== FormData.istreet || User.accinfo.icity !== FormData.icity || \r\n                User.accinfo.ihouse !== FormData.ihouse || User.accinfo.iflat !== FormData.iflat || \r\n                User.accinfo.izip !== izipcode) {\r\n                    setFormData({...FormData, privquery: true});\r\n                    check++;\r\n            } else {\r\n                setFormData({...FormData, privquery: false})\r\n                check--\r\n            }\r\n            */\r\n            if (check > 0) {\r\n                console.log(\"SENDING DATA\");\r\n                console.log(FormData);\r\n                /*\r\n                Axios.post(ServerPath + \"editaccount.php\", FormData)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                })\r\n                */\r\n            } else {\r\n                console.log(\"NOTHING CHANGED\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    if (AccountFound) {\r\n        if (User.accinfo.comp.cname === null) {\r\n            AccountType = \"indywidualne\";\r\n            fullname = User.accinfo.priv.iname + \" \" + User.accinfo.priv.isurname;\r\n            address = User.accinfo.priv.istreet + \" \" + User.accinfo.priv.ihouse + \"/\" + User.accinfo.priv.iflat;\r\n        } else {\r\n            AccountType = \"firmowe\";\r\n            fullname = User.accinfo.comp.cname;\r\n            address = User.accinfo.comp.cstreet + \" \" + User.accinfo.comp.chouse + \"/\" + User.accinfo.comp.cflat;\r\n        }\r\n        AccountData = (\r\n            <div>\r\n            <div className=\"AccountData\" style={ACStyle}>\r\n                <div className=\"AccountNameContainer\">\r\n                    <div className=\"AccountName\">\r\n                        <FaRegUserCircle size={50}/>\r\n                        <h1>{fullname}</h1>\r\n                    </div>\r\n                    <div className=\"AccountType\">Konto {AccountType}</div>\r\n                </div>\r\n                <ShowAccountData\r\n                    login={User.userinfo.login}\r\n                    mail={User.accinfo.main.mail}\r\n                    iname={User.accinfo.priv.iname}\r\n                    isurname={User.accinfo.priv.isurname}\r\n                    address={address}\r\n                    izip={User.accinfo.priv.izip}\r\n                    icity={User.accinfo.priv.icity}\r\n                    cname={User.accinfo.comp.cname}\r\n                    cnip={User.accinfo.comp.cnip}\r\n                    cregon={User.accinfo.comp.cregon}\r\n                    czip={User.accinfo.comp.czip}\r\n                    ccity={User.accinfo.comp.ccity}\r\n                    changetab={changeTab.bind(this, 0)}\r\n                />\r\n            </div>\r\n            <div className=\"AccountData\" style={EAStyle}>\r\n                <div className=\"AccountNameContainer\">\r\n                    <div className=\"AccountName\">\r\n                        <FaRegUserCircle size={50}/>\r\n                        <h1>{fullname}</h1>\r\n                    </div>\r\n                    <div className=\"AccountType\">Konto {AccountType}</div>\r\n                </div>\r\n                <EditAccountData\r\n                    login={User.userinfo.login}\r\n                    mail={User.accinfo.main.mail}\r\n                    iname={User.accinfo.priv.iname}\r\n                    isurname={User.accinfo.priv.isurname}\r\n                    istreet={User.accinfo.priv.istreet}\r\n                    ihouse={User.accinfo.priv.ihouse}\r\n                    iflat={User.accinfo.priv.iflat}\r\n                    izip1={User.accinfo.priv.izip1}\r\n                    izip2={User.accinfo.priv.izip2}\r\n                    icity={User.accinfo.priv.icity}\r\n                    cname={User.accinfo.comp.cname}\r\n                    cnip={User.accinfo.comp.cnip}\r\n                    cregon={User.accinfo.comp.cregon}\r\n                    ccity={User.accinfo.comp.ccity}\r\n                    cstreet={User.accinfo.comp.cstreet}\r\n                    chouse={User.accinfo.comp.chouse}\r\n                    cflat={User.accinfo.comp.cflat}\r\n                    czip1={User.accinfo.comp.czip1}\r\n                    czip2={User.accinfo.comp.czip2}\r\n                    changetab={changeTab}\r\n                    submitdatachange={changeAccountData}\r\n                    iserror={IsError}\r\n                    errorinfo={ErrorInfo}\r\n                    log={handleFormData.bind(this, \"LOG\")}\r\n                    cnm={handleFormData.bind(this, \"CNM\")}                  \r\n                    cst={handleFormData.bind(this, \"CST\")}\r\n                    cct={handleFormData.bind(this, \"CCT\")}\r\n                    cho={handleFormData.bind(this, \"CHO\")}\r\n                    cfl={handleFormData.bind(this, \"CFL\")}\r\n                    czp={handleFormData.bind(this, \"CZP\")}\r\n                    cnp={handleFormData.bind(this, \"CNP\")}\r\n                    crg={handleFormData.bind(this, \"CRG\")}\r\n                    inm={handleFormData.bind(this, \"INM\")}\r\n                    isn={handleFormData.bind(this, \"ISN\")}\r\n                    ict={handleFormData.bind(this, \"ICT\")}\r\n                    ist={handleFormData.bind(this, \"IST\")}\r\n                    iho={handleFormData.bind(this, \"IHO\")}\r\n                    ifl={handleFormData.bind(this, \"IFL\")}\r\n                    iz1={handleFormData.bind(this, \"IZ1\")}\r\n                    iz2={handleFormData.bind(this, \"IZ2\")}\r\n                    cz1={handleFormData.bind(this, \"CZ1\")}\r\n                    cz2={handleFormData.bind(this, \"CZ2\")}\r\n                />\r\n            </div></div>\r\n        )\r\n    } else if (!UserLogged) {\r\n        AccountData = (\r\n            <div>\r\n                Nie wykryto zalogowanego usera.\r\n            </div>\r\n        )\r\n    } else {\r\n        AccountData = (\r\n            <div>\r\n                Brak danych\r\n            </div>\r\n        )\r\n    }\r\n\r\n    console.log(FormData);\r\n\r\n    return(\r\n        <div className=\"SiteContainer\">\r\n            <TitleBar title=\"Konto użytkownika\"/>\r\n            {AccountData}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account;\r\n\r\n//<NavLink to=\"/accountedit\"><button>EDYCJA KONTA</button></NavLink>\r\n//<NavLink to=\"/myorders\"><button>MOJE ZAMÓWIENIA</button></NavLink>\r\n//<NavLink to=\"/myorders\"><button>ZMIEŃ HASŁO</button></NavLink>"]},"metadata":{},"sourceType":"module"}