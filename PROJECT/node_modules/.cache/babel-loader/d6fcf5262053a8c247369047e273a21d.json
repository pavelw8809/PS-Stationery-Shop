{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\SearchResult\\\\SearchResult.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport './SearchResult.scss';\nimport ArtCard from '../../components/ArtCard/ArtCard';\nimport Cookies from 'js-cookie';\nimport Axios from 'axios';\nimport { UserContext, ServerPath } from '../App';\nimport TitleBar from '../../components/TitleBar/TitleBar';\n\nconst SearchResult = props => {\n  //const [User, setUser] = useContext(UserContext);\n  //const [ReadCookie, setReadCookie] = useState();\n  const [SearchHook, setSearchHook] = useState([]);\n  let SearchingCookie = Cookies.get('pssearching');\n  let DecodedCookie = decodeURIComponent(SearchingCookie);\n  let InfoTxt = \"Wyniki wyszukiwania dla frazy: \" + DecodedCookie;\n  let DataQuery;\n  let showCards;\n  console.log(props.location.searchProps);\n  useEffect(() => {\n    if (typeof props.location.searchProps !== 'undefined') {\n      DataQuery = props.location.searchProps;\n      console.log(\"props: \" + props.location.searchProps);\n    } else {\n      DataQuery = DecodedCookie;\n    } //if (typeof(DecodedCookie) !== null) {\n\n\n    Axios.post(ServerPath + 'Search.php', DataQuery).then(function (res) {\n      console.log(res.data);\n      setSearchHook([...SearchHook, res.data]);\n    });\n    /*\r\n    showCards = (\r\n        <div className=\"ProdFlexbox\">\r\n            {SearchHook.map((r, index) => {\r\n                return(\r\n                    <ArtCard \r\n                        imagename={r.p_code}\r\n                        prodid = {r.p_id}\r\n                        name = {r.p_name}\r\n                        shortdesc = {r.p_shortdescription}\r\n                        description = {r.p_description}\r\n                        price={r.p_price}\r\n                        key={index}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n    */\n    //} else {\n    //    showCards = <h4>Brak wyników</h4>\n    // }\n  }, []); //if(Object.values(SearchHook[0]).length === 0) \n\n  if (typeof SearchHook[0] === 'undefined') {\n    console.log(\"it's empty\");\n  } else {\n    console.log(SearchHook);\n  }\n  /*\r\n      if (typeof(SearchHook) === null) {\r\n          if (DecodedCookie !== 'undefined') {\r\n              Axios.post(ServerPath + 'Search.php',\r\n              DecodedCookie)\r\n              .then(function (res) {\r\n                  setSearchHook([...SearchHook, res.data]);\r\n              })\r\n              showCards = (\r\n                  <div className=\"ProdFlexbox\">\r\n                      {SearchHook.map((r, index) => {\r\n                          return(\r\n                              <ArtCard \r\n                                  imagename={r.p_code}\r\n                                  prodid = {r.p_id}\r\n                                  name = {r.p_name}\r\n                                  shortdesc = {r.p_shortdescription}\r\n                                  description = {r.p_description}\r\n                                  price={r.p_price}\r\n                                  key={index}\r\n                              />\r\n                          )\r\n                      })}\r\n                  </div>\r\n              )\r\n          } else {\r\n              showCards = <h4>Brak wyników</h4>\r\n          }\r\n      } else {\r\n          showCards = (\r\n              <div className=\"ProdFlexbox\">\r\n                  {SearchHook.map((r, index) => {\r\n                      return(\r\n                          <ArtCard \r\n                              imagename={r.p_code}\r\n                              prodid = {r.p_id}\r\n                              name = {r.p_name}\r\n                              shortdesc = {r.p_shortdescription}\r\n                              description = {r.p_description}\r\n                              price={r.p_price}\r\n                              key={index}\r\n                          />\r\n                      )\r\n                  })}\r\n              </div>\r\n          )\r\n      }\r\n  */\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: InfoTxt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), showCards);\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/SearchResult/SearchResult.js"],"names":["React","useEffect","useContext","useState","ArtCard","Cookies","Axios","UserContext","ServerPath","TitleBar","SearchResult","props","SearchHook","setSearchHook","SearchingCookie","get","DecodedCookie","decodeURIComponent","InfoTxt","DataQuery","showCards","console","log","location","searchProps","post","then","res","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,qBAAP;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,QAAxC;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEA,MAAIW,eAAe,GAAGT,OAAO,CAACU,GAAR,CAAY,aAAZ,CAAtB;AACA,MAAIC,aAAa,GAAGC,kBAAkB,CAACH,eAAD,CAAtC;AACA,MAAII,OAAO,GAAG,oCAAoCF,aAAlD;AAEA,MAAIG,SAAJ;AACA,MAAIC,SAAJ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,QAAN,CAAeC,WAA3B;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,OAAOU,KAAK,CAACY,QAAN,CAAeC,WAAtB,KAAuC,WAA3C,EAAwD;AACpDL,MAAAA,SAAS,GAAGR,KAAK,CAACY,QAAN,CAAeC,WAA3B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYX,KAAK,CAACY,QAAN,CAAeC,WAAvC;AACH,KAHD,MAGO;AACHL,MAAAA,SAAS,GAAGH,aAAZ;AACH,KANW,CAQZ;;;AACIV,IAAAA,KAAK,CAACmB,IAAN,CAAWjB,UAAU,GAAG,YAAxB,EAAsCW,SAAtC,EACCO,IADD,CACM,UAAUC,GAAV,EAAe;AACjBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAhB;AACAf,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBe,GAAG,CAACC,IAApB,CAAD,CAAb;AACH,KAJD;AAMA;;;;;;;;;;;;;;;;;;;AAmBJ;AACA;AACD;AACF,GArCQ,EAqCN,EArCM,CAAT,CAd4B,CAqD5B;;AAEA,MAAG,OAAOhB,UAAU,CAAC,CAAD,CAAjB,KAA0B,WAA7B,EAA0C;AACtCS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GAFD,MAEO;AACHD,IAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACH;AAGL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKE,SAFL,CADJ;AAMH,CApHD;;AAsHA,eAAeV,YAAf","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\r\nimport './SearchResult.scss';\r\nimport ArtCard from '../../components/ArtCard/ArtCard';\r\nimport Cookies from 'js-cookie';\r\nimport Axios from 'axios';\r\nimport { UserContext, ServerPath } from '../App';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\n\r\nconst SearchResult = (props) => {\r\n    //const [User, setUser] = useContext(UserContext);\r\n    //const [ReadCookie, setReadCookie] = useState();\r\n    const [SearchHook, setSearchHook] = useState([]);\r\n\r\n    let SearchingCookie = Cookies.get('pssearching');\r\n    let DecodedCookie = decodeURIComponent(SearchingCookie);\r\n    let InfoTxt = \"Wyniki wyszukiwania dla frazy: \" + DecodedCookie;\r\n\r\n    let DataQuery;\r\n    let showCards;\r\n\r\n    console.log(props.location.searchProps);\r\n\r\n    useEffect(() => {\r\n        if (typeof(props.location.searchProps) !== 'undefined') {\r\n            DataQuery = props.location.searchProps;\r\n            console.log(\"props: \" + props.location.searchProps)\r\n        } else {\r\n            DataQuery = DecodedCookie;\r\n        }\r\n\r\n        //if (typeof(DecodedCookie) !== null) {\r\n            Axios.post(ServerPath + 'Search.php', DataQuery)\r\n            .then(function (res) {\r\n                console.log(res.data);\r\n                setSearchHook([...SearchHook, res.data]);\r\n            })\r\n            \r\n            /*\r\n            showCards = (\r\n                <div className=\"ProdFlexbox\">\r\n                    {SearchHook.map((r, index) => {\r\n                        return(\r\n                            <ArtCard \r\n                                imagename={r.p_code}\r\n                                prodid = {r.p_id}\r\n                                name = {r.p_name}\r\n                                shortdesc = {r.p_shortdescription}\r\n                                description = {r.p_description}\r\n                                price={r.p_price}\r\n                                key={index}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n            */\r\n        //} else {\r\n        //    showCards = <h4>Brak wyników</h4>\r\n       // }\r\n    }, [])\r\n\r\n    //if(Object.values(SearchHook[0]).length === 0) \r\n\r\n    if(typeof(SearchHook[0]) === 'undefined') {\r\n        console.log(\"it's empty\");\r\n    } else {\r\n        console.log(SearchHook);\r\n    }\r\n\r\n\r\n/*\r\n    if (typeof(SearchHook) === null) {\r\n        if (DecodedCookie !== 'undefined') {\r\n            Axios.post(ServerPath + 'Search.php',\r\n            DecodedCookie)\r\n            .then(function (res) {\r\n                setSearchHook([...SearchHook, res.data]);\r\n            })\r\n            showCards = (\r\n                <div className=\"ProdFlexbox\">\r\n                    {SearchHook.map((r, index) => {\r\n                        return(\r\n                            <ArtCard \r\n                                imagename={r.p_code}\r\n                                prodid = {r.p_id}\r\n                                name = {r.p_name}\r\n                                shortdesc = {r.p_shortdescription}\r\n                                description = {r.p_description}\r\n                                price={r.p_price}\r\n                                key={index}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        } else {\r\n            showCards = <h4>Brak wyników</h4>\r\n        }\r\n    } else {\r\n        showCards = (\r\n            <div className=\"ProdFlexbox\">\r\n                {SearchHook.map((r, index) => {\r\n                    return(\r\n                        <ArtCard \r\n                            imagename={r.p_code}\r\n                            prodid = {r.p_id}\r\n                            name = {r.p_name}\r\n                            shortdesc = {r.p_shortdescription}\r\n                            description = {r.p_description}\r\n                            price={r.p_price}\r\n                            key={index}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n*/\r\n    return(\r\n        <div>\r\n            <TitleBar title={InfoTxt}/>\r\n            {showCards}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResult;"]},"metadata":{},"sourceType":"module"}