{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\CartItem\\\\CartItem.js\";\n// CartItem -> Cart\nimport React, { useState, useContext } from 'react';\nimport { TotalContext } from '../../containers/App';\nimport './CartItem.scss';\nimport { TiDelete } from \"react-icons/ti\";\nimport { NavLink } from 'react-router-dom';\n\nconst CartItem = props => {\n  // STATES\n  const [initTotal, Total] = useContext(TotalContext); // stan globalny - suma do zapłaty\n\n  const [counter, setCounter] = useState({\n    quantity: props.quantity\n  }); // stan lokalny - wyświetla ilość produktu\n\n  const [totalPrice, setTotalPrice] = useState({\n    totalprice: props.prodtotal\n  }); // stan lokalny - wyświetla sumę do zapłaty\n  // IMAGE BACKGROUND STYLE\n\n  const Image = require('../../images/images/' + props.imagename + '.png'); // Ścieżka do zdjęcia\n\n\n  let ProdImgStyle;\n  ProdImgStyle = {\n    // Stylizacja zdjęcia - zdjęcie jako tło karty\n    backgroundImage: \"url(\" + Image + \")\"\n  };\n  let CartStorage = JSON.parse(localStorage.getItem('pscart'));\n\n  const increaseQuantity = index => {\n    //let newCart = [...initCart];\n    //newCart[index].quantity = newCart[index].quantity+1;\n    //newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\n    console.log(index);\n    let CartStorageN = [...CartStorage];\n    CartStorageN[index].quantity = CartStorageN[index].quantity + 1;\n    CartStorageN[index].prodtotal = CartStorageN[index].price * CartStorageN[index].quantity;\n    localStorage.setItem('pscart', JSON.stringify(CartStorageN)); //Cart({...initCart, CartStorageN});\n    //const cartarray = [];\n    //const sum = Object.values(CartStorageN)\n    //  .map(obj => { cartarray.push(obj.prodtotal); return obj.prodtotal\n    //})\n    //  .reduce((sum, el) => {console.log(sum+el); return sum+el; }, 0);\n    //Total({total: sum});\n\n    setCounter({\n      quantity: CartStorageN[index].quantity\n    }); //setTotalPrice({\n    //    totalprice: newCart[index].prodtotal\n    //})\n\n    const cartarray = [];\n    const sum = Object.values(CartStorageN).map(obj => {\n      cartarray.push(obj.prodtotal);\n      return obj.prodtotal;\n    }).reduce((sum, el) => {\n      console.log(sum + el);\n      return sum + el;\n    }, 0);\n    Total({\n      total: sum\n    });\n  };\n\n  const decreaseQuantity = index => {\n    if (counter.quantity > 1) {\n      //let newCart = [...initCart];\n      //newCart[index].quantity = newCart[index].quantity-1;\n      //newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\n      let CartStorageN = [...CartStorage]; //console.log(CartStorageN);\n\n      CartStorageN[index].quantity = CartStorageN[index].quantity - 1;\n      CartStorageN[index].prodtotal = CartStorageN[index].price * CartStorageN[index].quantity;\n      localStorage.setItem('pscart', JSON.stringify(CartStorageN)); //Cart({...initCart, CartStorageN});\n\n      const cartarray = [];\n      const sum = Object.values(CartStorageN).map(obj => {\n        cartarray.push(obj.prodtotal);\n        return obj.prodtotal;\n      }).reduce((sum, el) => {\n        console.log(sum + el);\n        return sum + el;\n      }, 0);\n      Total({\n        total: sum\n      });\n      setCounter({\n        quantity: CartStorageN[index].quantity\n      }); //setTotalPrice({\n      //    totalprice: newCart[index].prodtotal\n      //})\n      //Total({\n      //    total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\n      //})\n    }\n  }; //localStorage.setItem('pscart', JSON.stringify(Cart));\n  //localStorage.setItem('pstotal', Total.total);\n\n\n  console.log(props.prodid);\n  return React.createElement(\"div\", {\n    className: \"CartItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    className: \"CartItemImg\",\n    style: ProdImgStyle,\n    to: {\n      pathname: \"/artdetails\",\n      artProps: {\n        name: props.name,\n        shortdesc: props.shortdesc,\n        description: props.desc,\n        price: props.price,\n        imagename: props.imagename,\n        prodid: props.id\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CartItemContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"CartItemName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, props.name, \" - \", props.desc), React.createElement(\"div\", {\n    className: \"CartItemPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CartProdPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, parseFloat(props.price).toFixed(2)), React.createElement(\"div\", {\n    className: \"CartItemPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: increaseQuantity.bind(this, props.keyid),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"input\", {\n    className: \"CartqInput\",\n    type: \"text\",\n    value: counter.quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: decreaseQuantity.bind(this, props.keyid),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"-\")), React.createElement(\"div\", {\n    className: \"CartItemTotal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, parseFloat(props.prodtotal).toFixed(2)))), React.createElement(\"button\", {\n    className: \"CartRemBtn\",\n    onClick: props.removeitem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(TiDelete, {\n    size: 30,\n    className: \"RemBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })));\n};\n\nexport default CartItem;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/CartItem/CartItem.js"],"names":["React","useState","useContext","TotalContext","TiDelete","NavLink","CartItem","props","initTotal","Total","counter","setCounter","quantity","totalPrice","setTotalPrice","totalprice","prodtotal","Image","require","imagename","ProdImgStyle","backgroundImage","CartStorage","JSON","parse","localStorage","getItem","increaseQuantity","index","console","log","CartStorageN","price","setItem","stringify","cartarray","sum","Object","values","map","obj","push","reduce","el","total","decreaseQuantity","prodid","pathname","artProps","name","shortdesc","description","desc","id","parseFloat","toFixed","bind","keyid","removeitem"],"mappings":"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","sourcesContent":["// CartItem -> Cart\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport { TotalContext } from '../../containers/App';\r\nimport './CartItem.scss';\r\nimport { TiDelete } from \"react-icons/ti\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst CartItem = (props) => {\r\n\r\n    // STATES\r\n\r\n    const [initTotal, Total] = useContext(TotalContext);                            // stan globalny - suma do zapłaty\r\n    const [counter, setCounter] = useState({quantity: props.quantity})              // stan lokalny - wyświetla ilość produktu\r\n    const [totalPrice, setTotalPrice] = useState({totalprice: props.prodtotal})     // stan lokalny - wyświetla sumę do zapłaty\r\n\r\n    // IMAGE BACKGROUND STYLE\r\n\r\n    const Image = require('../../images/images/' + props.imagename + '.png');       // Ścieżka do zdjęcia\r\n\r\n    let ProdImgStyle;\r\n    ProdImgStyle = {                                                                // Stylizacja zdjęcia - zdjęcie jako tło karty\r\n        backgroundImage: \"url(\" + Image + \")\"\r\n    }\r\n\r\n    let CartStorage = JSON.parse(localStorage.getItem('pscart'));\r\n\r\n    const increaseQuantity = (index) => {\r\n        //let newCart = [...initCart];\r\n        //newCart[index].quantity = newCart[index].quantity+1;\r\n        //newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\r\n        \r\n        console.log(index);\r\n        let CartStorageN = [...CartStorage];\r\n        CartStorageN[index].quantity = CartStorageN[index].quantity+1;\r\n        CartStorageN[index].prodtotal = CartStorageN[index].price*CartStorageN[index].quantity;\r\n        localStorage.setItem('pscart', JSON.stringify(CartStorageN));\r\n        //Cart({...initCart, CartStorageN});\r\n        \r\n        //const cartarray = [];\r\n    \r\n        //const sum = Object.values(CartStorageN)\r\n        //  .map(obj => { cartarray.push(obj.prodtotal); return obj.prodtotal\r\n        //})\r\n        //  .reduce((sum, el) => {console.log(sum+el); return sum+el; }, 0);\r\n    \r\n        //Total({total: sum});\r\n\r\n        setCounter({\r\n            quantity: CartStorageN[index].quantity\r\n        })\r\n        //setTotalPrice({\r\n        //    totalprice: newCart[index].prodtotal\r\n        //})\r\n        const cartarray = [];\r\n    \r\n        const sum = Object.values(CartStorageN)\r\n          .map(obj => { cartarray.push(obj.prodtotal); return obj.prodtotal\r\n        })\r\n          .reduce((sum, el) => {console.log(sum+el); return sum+el; }, 0);\r\n    \r\n        Total({total: sum});\r\n    }\r\n\r\n    const decreaseQuantity = (index) => {\r\n        if (counter.quantity > 1) {\r\n            //let newCart = [...initCart];\r\n            //newCart[index].quantity = newCart[index].quantity-1;\r\n            //newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\r\n\r\n            let CartStorageN = [...CartStorage];\r\n            //console.log(CartStorageN);\r\n            CartStorageN[index].quantity = CartStorageN[index].quantity-1;\r\n            CartStorageN[index].prodtotal = CartStorageN[index].price*CartStorageN[index].quantity;\r\n            localStorage.setItem('pscart', JSON.stringify(CartStorageN));\r\n            //Cart({...initCart, CartStorageN});\r\n\r\n            const cartarray = [];\r\n    \r\n            const sum = Object.values(CartStorageN)\r\n              .map(obj => { cartarray.push(obj.prodtotal); return obj.prodtotal\r\n            })\r\n              .reduce((sum, el) => {console.log(sum+el); return sum+el; }, 0);\r\n        \r\n            Total({total: sum});\r\n\r\n            setCounter({\r\n                quantity: CartStorageN[index].quantity\r\n            })\r\n            //setTotalPrice({\r\n            //    totalprice: newCart[index].prodtotal\r\n            //})\r\n            //Total({\r\n            //    total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\r\n            //})\r\n        }\r\n    }\r\n\r\n    //localStorage.setItem('pscart', JSON.stringify(Cart));\r\n    //localStorage.setItem('pstotal', Total.total);\r\n\r\n    console.log(props.prodid);\r\n\r\n    return(\r\n        <div className=\"CartItem\">\r\n            <NavLink className=\"CartItemImg\" style={ProdImgStyle} to={{\r\n                pathname: \"/artdetails\",\r\n                artProps: {\r\n                    name: props.name,\r\n                    shortdesc: props.shortdesc,\r\n                    description: props.desc,\r\n                    price: props.price,\r\n                    imagename: props.imagename,\r\n                    prodid: props.id\r\n                }\r\n                }}>\r\n            </NavLink>\r\n            <div className=\"CartItemContainer\">\r\n                <h4 className=\"CartItemName\">{props.name} - {props.desc}</h4>\r\n                <div className=\"CartItemPrice\">\r\n                    <div className=\"CartProdPrice\">{parseFloat(props.price).toFixed(2)}</div>\r\n                    <div className=\"CartItemPanel\">\r\n                        <button className=\"qBtn\" onClick={increaseQuantity.bind(this, props.keyid)}>+</button>\r\n                        <input className=\"CartqInput\" type=\"text\" value={counter.quantity}/>\r\n                        <button className=\"qBtn\" onClick={decreaseQuantity.bind(this, props.keyid)}>-</button>\r\n                    </div>\r\n                    <div className=\"CartItemTotal\">\r\n                        {parseFloat(props.prodtotal).toFixed(2)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className=\"CartRemBtn\" onClick={props.removeitem}><TiDelete size={30} className=\"RemBtn\"/></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n"]},"metadata":{},"sourceType":"module"}