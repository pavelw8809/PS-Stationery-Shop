{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\LoginSite\\\\LoginSite.js\";\n\n/*\r\n    Plik:               Login.js\r\n    Funkcja:            STRONA Z FORMULARZEM REJESTRACYJNYM\r\n    Opis:               Formularz rejestracyjny dla osób chcących założyć konto\r\n    Elementy:           Formularz rejestracyjny\r\n    Przykład użycia:    N/A\r\n    Dodatkowe info:     Walidacja danych, dodawanie nowego usera\r\n*/\nimport React from 'react';\nimport './LoginSite.scss';\nimport Axios from 'axios';\nimport { UserContext, ServerPath } from '../App';\nimport { useHistory } from 'react-router-dom';\n\nconst LoginSIte = props => {\n  const [ErrorContent, setErrorContent] = useState();\n  const [Login, setLogin] = useState();\n  const [User, setUser] = useCOntext(UserContext);\n\n  handleLogin = event => {\n    if (event.keyCode === 13) {\n      submitCredentials();\n    } else {\n      setLogin({ ...Login,\n        user: event.target.value\n      });\n    }\n  };\n\n  handlePassword = event => {\n    if (event.keyCode === 13) {\n      submitCredentials();\n    } else {\n      setLogin({ ...Login,\n        password: event.target.value\n      });\n    }\n  };\n\n  submitCreadentials = () => {\n    Axios.post(ServerPath + 'extLogin.php', Login).then(res => {\n      if (res.data.length > 0) {\n        //setAccountInfo(res.data);\n        console.log(res.data);\n        res.data.map((r, index) => {\n          setUser(prevState => ({ ...prevState,\n            accinfo: {\n              mail: r.u_mail,\n              cname: r.cc_name,\n              ccity: r.cc_city,\n              cstreet: r.cc_street,\n              chouse: r.cc_number,\n              cflat: r.cc_number_flat,\n              czip: r.cc_zip,\n              cnip: r.cc_NIP,\n              cregon: r.cc_REGON,\n              iname: r.ci_name,\n              isurname: r.ci_surname,\n              icity: r.ci_city,\n              istreet: r.ci_street,\n              ihouse: r.ci_number,\n              iflat: r.ci_number_flat,\n              izip: r.ci_zip\n            }\n          }));\n        });\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Dost\\u0119p do informacji: \", props.feature, \" wymaga dodatkowego uwierzytelnienia.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Prosz\\u0119 zaloguj si\\u0119 ponownie\"), React.createElement(\"label\", {\n    for: \"mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"ZALOGUJ\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, ErrorCOntent));\n};\n\nexport default LoginSite;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/LoginSite/LoginSite.js"],"names":["React","Axios","UserContext","ServerPath","useHistory","LoginSIte","props","ErrorContent","setErrorContent","useState","Login","setLogin","User","setUser","useCOntext","handleLogin","event","keyCode","submitCredentials","user","target","value","handlePassword","password","submitCreadentials","post","then","res","data","length","console","log","map","r","index","prevState","accinfo","mail","u_mail","cname","cc_name","ccity","cc_city","cstreet","cc_street","chouse","cc_number","cflat","cc_number_flat","czip","cc_zip","cnip","cc_NIP","cregon","cc_REGON","iname","ci_name","isurname","ci_surname","icity","ci_city","istreet","ci_street","ihouse","ci_number","iflat","ci_number_flat","izip","ci_zip","feature","ErrorCOntent","LoginSite"],"mappings":"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","sourcesContent":["/*\r\n    Plik:               Login.js\r\n    Funkcja:            STRONA Z FORMULARZEM REJESTRACYJNYM\r\n    Opis:               Formularz rejestracyjny dla osób chcących założyć konto\r\n    Elementy:           Formularz rejestracyjny\r\n    Przykład użycia:    N/A\r\n    Dodatkowe info:     Walidacja danych, dodawanie nowego usera\r\n*/\r\n\r\nimport React from 'react';\r\nimport './LoginSite.scss'\r\nimport Axios from 'axios';\r\nimport { UserContext, ServerPath } from '../App';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LoginSIte = (props) => {\r\n\r\n    const [ErrorContent, setErrorContent] = useState();\r\n    const [Login, setLogin] = useState();\r\n    const [User, setUser] = useCOntext(UserContext);\r\n\r\n    handleLogin = (event) => {\r\n        if (event.keyCode === 13) {\r\n            submitCredentials();\r\n        } else {\r\n            setLogin({...Login, user: event.target.value});\r\n        }\r\n    }\r\n\r\n    handlePassword = (event) => {\r\n        if (event.keyCode === 13) {\r\n            submitCredentials();\r\n        } else {\r\n            setLogin({...Login, password: event.target.value});\r\n        }\r\n    }\r\n\r\n    submitCreadentials = () => {\r\n        Axios.post(ServerPath + 'extLogin.php', Login)\r\n        .then(res => {\r\n            if(res.data.length > 0) {\r\n                //setAccountInfo(res.data);\r\n                console.log(res.data);\r\n                res.data.map((r, index) => {\r\n                    setUser((prevState) => ({...prevState, accinfo: {\r\n                        mail: r.u_mail,\r\n                        cname: r.cc_name,\r\n                        ccity: r.cc_city,\r\n                        cstreet: r.cc_street,\r\n                        chouse: r.cc_number,\r\n                        cflat: r.cc_number_flat,\r\n                        czip: r.cc_zip,\r\n                        cnip: r.cc_NIP,\r\n                        cregon: r.cc_REGON,\r\n                        iname: r.ci_name,\r\n                        isurname: r.ci_surname,\r\n                        icity: r.ci_city,\r\n                        istreet: r.ci_street,\r\n                        ihouse: r.ci_number,\r\n                        iflat: r.ci_number_flat,\r\n                        izip: r.ci_zip\r\n                    }}));\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3>Dostęp do informacji: {props.feature} wymaga dodatkowego uwierzytelnienia.</h3>\r\n            <p>Proszę zaloguj się ponownie</p>\r\n            <label for=\"mail\"/>\r\n            <input type=\"text\" name=\"mail\"></input><br/>\r\n            <label for=\"password\"/>\r\n            <input type=\"text\" name=\"password\"></input><br/>\r\n            <button type=\"submit\">ZALOGUJ</button>\r\n            <div>{ErrorCOntent}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginSite;"]},"metadata":{},"sourceType":"module"}