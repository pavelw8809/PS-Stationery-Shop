{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\Account\\\\Account.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Account.scss';\nimport { UserContext, ServerPath } from '../../containers/App';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { FaRegUserCircle } from 'react-icons/fa';\nimport ShowAccountData from '../../components/ShowAccountData/ShowAccountData';\nimport EditAccountData from '../../components/EditAccountData/EditAccountData';\n\nconst Account = () => {\n  const [User, setUser] = useContext(UserContext);\n  const [AccountInfo, setAccountInfo] = useState([]);\n  const [AccountFound, setAccountFound] = useState(false);\n  const [UserLogged, setUserLogged] = useState(false);\n  const [TabDisp, setTabDisp] = useState({\n    accshow: true,\n    accedit: false,\n    accpass: false\n  });\n  const [FormData, setFormData] = useState();\n  const [IsError, setIsError] = useState(false);\n  const [ErrorInfo, setErrorInfo] = useState([]); //let UserId = Cookies.get('psid');\n  //let DecodedUserId = decodeURIComponent(UserId);\n\n  let SessionId = Cookies.get('pssession');\n  let ExtSession = Cookies.get('psacc'); //let DecodedUserName = decodeURIComponent(UserName);\n  //const [UserData, setUserData] = useState({\n  //    id: DecodedUserId,\n  //    login: DecodedUserName\n  //});\n\n  let History = useHistory();\n  console.log(User.usercontrol);\n  useEffect(() => {\n    if (!ExtSession) {\n      History.push('/extlogin');\n    } else {\n      if (SessionId !== null) {\n        console.log(User.accinfo);\n\n        if (!User.acccontrol) {\n          /*\r\n          console.log(\"loading...\");\r\n          Axios.post(ServerPath   + 'UserAccount.php', ExtSession)\r\n          .then(res => {\r\n              \r\n              if(res.data.length > 0) {\r\n                  //setAccountInfo(res.data);\r\n                  \r\n                  res.data.map((r, index) => {\r\n                      let zipA, zipB;\r\n                      if (r.ci_zip !== null) {\r\n                          zipA = r.ci_zip.substring(0,2);\r\n                          zipB = r.ci_zip.substring(3,6);\r\n                      }\r\n                      if (r.cc_zip !== null) {\r\n                          zipA = r.cc_zip.substring(0,2)\r\n                          zipB = r.cc_zip.substring(3,6);\r\n                      }\r\n                      setUser((prevState) => ({...prevState, accinfo: {\r\n                          mail: r.u_mail,\r\n                          cname: r.cc_name,\r\n                          ccity: r.cc_city,\r\n                          cstreet: r.cc_street,\r\n                          chouse: r.cc_number,\r\n                          cflat: r.cc_number_flat,\r\n                          czip: r.cc_zip,\r\n                          cnip: r.cc_NIP,\r\n                          cregon: r.cc_REGON,\r\n                          iname: r.ci_name,\r\n                          isurname: r.ci_surname,\r\n                          icity: r.ci_city,\r\n                          istreet: r.ci_street,\r\n                          ihouse: r.ci_number,\r\n                          iflat: r.ci_number_flat,\r\n                          izip: r.ci_zip\r\n                      },\r\n                          acccontrol: true\r\n                      }));\r\n                      setFormData((prevState) => ({...prevState, \r\n                          mail: r.u_mail,\r\n                          cname: r.cc_name,\r\n                          ccity: r.cc_city,\r\n                          cstreet: r.cc_street,\r\n                          chouse: r.cc_number,\r\n                          cflat: r.cc_number_flat,\r\n                          czip: r.cc_zip,\r\n                          cnip: r.cc_NIP,\r\n                          cregon: r.cc_REGON,\r\n                          iname: r.ci_name,\r\n                          isurname: r.ci_surname,\r\n                          icity: r.ci_city,\r\n                          istreet: r.ci_street,\r\n                          ihouse: r.ci_number,\r\n                          iflat: r.ci_number_flat,\r\n                          izip: r.ci_zip,\r\n                          zip1: zipA,\r\n                          zip2: zipB\r\n                          //zip2: r.ci_zip.substring(3,6)\r\n                      ,\r\n                      }));\r\n                  })\r\n                  //console.log(res.data);\r\n                  setAccountFound(true);\r\n              }\r\n          })*/\n        } else {\n          console.log(\"We still have it\");\n          setAccountFound(true);\n        }\n      }\n    }\n  }, []);\n  let AccountData, AccFormData, AccountType, address, fullname, zip1, zip2;\n\n  if (AccountFound) {\n    if (User.accinfo.cname === null) {\n      AccountType = \"indywidualne\";\n      fullname = User.accinfo.iname + \" \" + User.accinfo.isurname;\n      address = User.accinfo.istreet + \" \" + User.accinfo.ihouse + \"/\" + User.accinfo.iflat;\n      zip1 = User.accinfo.izip.substring(0, 2);\n      zip2 = User.accinfo.izip.substring(3, 6);\n    } else {\n      AccountType = \"firmowe\";\n      fullname = User.accinfo.cname;\n      address = User.accinfo.cstreet + \" \" + User.accinfo.chouse + \"/\" + User.accinfo.cflat;\n      zip1 = User.accinfo.czip.substring(0, 2);\n      zip2 = User.accinfo.czip.substring(3, 6);\n    }\n  } else if (!UserLogged) {\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Nie wykryto zalogowanego usera.\");\n  } else {\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Brak danych\");\n  }\n\n  let ACStyle, EAStyle, CPStyle; //ACStyle = {display: 'block'};\n\n  EAStyle = {\n    display: 'none'\n  };\n  CPStyle = {\n    display: 'none'\n  };\n\n  if (TabDisp.accshow) {\n    ACStyle = {\n      display: 'block'\n    };\n    EAStyle = {\n      display: 'none'\n    };\n    CPStyle = {\n      display: 'none'\n    };\n  }\n\n  if (TabDisp.accedit) {\n    ACStyle = {\n      display: 'none'\n    };\n    EAStyle = {\n      display: 'block'\n    };\n    CPStyle = {\n      display: 'none'\n    };\n  }\n\n  const changeTab = option => {\n    if (option === 0) {\n      setTabDisp({ ...TabDisp,\n        accshow: false,\n        accedit: true,\n        accpass: false\n      });\n    }\n\n    if (option === 1) {\n      setTabDisp({ ...TabDisp,\n        accshow: false,\n        accedit: false,\n        accpass: true\n      });\n    }\n\n    if (option === 2) {\n      setTabDisp({ ...TabDisp,\n        accshow: true,\n        accedit: false,\n        accpass: false\n      });\n    }\n  };\n\n  const handleFormData = (data, event) => {\n    switch (data) {\n      case \"LOG\":\n        setFormData({ ...FormData,\n          login: event.target.value\n        });\n        break;\n\n      case \"CNM\":\n        setFormData({ ...FormData,\n          cname: event.target.value\n        });\n        break;\n\n      case \"CST\":\n        setFormData({ ...FormData,\n          cstreet: event.target.value\n        });\n        break;\n\n      case \"CCT\":\n        setFormData({ ...FormData,\n          ccity: event.target.value\n        });\n        break;\n\n      case \"CHO\":\n        setFormData({ ...FormData,\n          chouse: event.target.value\n        });\n        break;\n\n      case \"CFL\":\n        setFormData({ ...FormData,\n          cflat: event.target.value\n        });\n        break;\n      //case \"CZP\": setFormData({...FormData, czip: event.target.value}); break;\n\n      case \"CNP\":\n        setFormData({ ...FormData,\n          cnip: event.target.value\n        });\n        break;\n\n      case \"CRG\":\n        setFormData({ ...FormData,\n          cregon: event.target.value\n        });\n        break;\n\n      case \"INM\":\n        setFormData({ ...FormData,\n          iname: event.target.value\n        });\n        break;\n\n      case \"ISN\":\n        setFormData({ ...FormData,\n          isurname: event.target.value\n        });\n        break;\n\n      case \"ICT\":\n        setFormData({ ...FormData,\n          icity: event.target.value\n        });\n        break;\n\n      case \"IST\":\n        setFormData({ ...FormData,\n          istreet: event.target.value\n        });\n        break;\n\n      case \"IHO\":\n        setFormData({ ...FormData,\n          ihouuse: event.target.value\n        });\n        break;\n\n      case \"IFL\":\n        setFormData({ ...FormData,\n          iflat: event.target.value\n        });\n        break;\n\n      case \"ZP1\":\n        setFormData({ ...FormData,\n          zip1: event.target.value\n        });\n        break;\n\n      case \"ZP2\":\n        setFormData({ ...FormData,\n          zip2: event.target.value\n        });\n        break;\n    }\n\n    console.log(FormData);\n  };\n\n  const changeAccountData = () => {\n    let valid = 0;\n    let info1 = 'BŁĄD: Kod pocztowy powinien zawierać tylko cyfry';\n    let info2 = 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry';\n\n    if (isNaN(FormData.zip1)) {\n      if (!ErrorInfo.includes(info1)) {\n        setErrorInfo([...ErrorInfo, \"BŁĄD: Kod pocztowy powinien zawierać tylko cyfry\"]); //console.log(FormData.zip1);\n\n        valid++;\n      }\n    }\n\n    if (isNaN(FormData.cregon) && FormData.cregon !== null) {\n      if (!ErrorInfo.includes(info2)) {\n        setErrorInfo([...ErrorInfo, 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry']);\n        valid++;\n      }\n    }\n\n    if (valid > 0) {\n      setIsError(true);\n    } else {\n      Axios.post(ServerPath + \"editaccount.php\", FormData).then(res => {\n        console.log(res.data);\n      });\n    }\n  };\n\n  console.log(FormData);\n  return React.createElement(\"div\", {\n    className: \"SiteContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: \"Konto u\\u017Cytkownika\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"AccountData\",\n    style: ACStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"AccountNameContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"AccountName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(FaRegUserCircle, {\n    size: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, fullname)), React.createElement(\"div\", {\n    className: \"AccountType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Konto \", AccountType)), React.createElement(ShowAccountData, {\n    login: User.userinfo.login,\n    mail: User.accinfo.mail,\n    iname: User.accinfo.iname,\n    isurname: User.accinfo.isurname,\n    address: address,\n    izip: User.accinfo.izip,\n    icity: User.accinfo.icity,\n    cname: User.accinfo.cname,\n    cnip: User.accinfo.cnip,\n    cregon: User.accinfo.cregon,\n    czip: User.accinfo.czip,\n    ccity: User.accinfo.ccity,\n    changetab: changeTab.bind(this, 0),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"AccountData\",\n    style: EAStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"AccountNameContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"AccountName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(FaRegUserCircle, {\n    size: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, fullname)), React.createElement(\"div\", {\n    className: \"AccountType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \"Konto \", AccountType)), React.createElement(EditAccountData, {\n    login: User.userinfo.login,\n    mail: User.accinfo.mail,\n    iname: User.accinfo.iname,\n    isurname: User.accinfo.isurname,\n    address: address,\n    izip1: zip1,\n    izip2: zip2,\n    icity: User.accinfo.icity,\n    cname: User.accinfo.cname,\n    cnip: User.accinfo.cnip,\n    cregon: User.accinfo.cregon,\n    czip1: zip1,\n    czip2: zip2,\n    ccity: User.accinfo.ccity,\n    cstreet: User.accinfo.cstreet,\n    chouse: User.accinfo.chouse,\n    cflat: User.accinfo.cflat,\n    changetab: changeTab,\n    submitdatachange: changeAccountData,\n    iserror: IsError,\n    errorinfo: ErrorInfo,\n    log: handleFormData.bind(this, \"LOG\"),\n    cnm: handleFormData.bind(this, \"CNM\"),\n    cst: handleFormData.bind(this, \"CST\"),\n    cct: handleFormData.bind(this, \"CCT\"),\n    cho: handleFormData.bind(this, \"CHO\"),\n    cfl: handleFormData.bind(this, \"CFL\"),\n    czp: handleFormData.bind(this, \"CZP\"),\n    cnp: handleFormData.bind(this, \"CNP\"),\n    crg: handleFormData.bind(this, \"CRG\"),\n    inm: handleFormData.bind(this, \"INM\"),\n    isn: handleFormData.bind(this, \"ISN\"),\n    ict: handleFormData.bind(this, \"ICT\"),\n    ist: handleFormData.bind(this, \"IST\"),\n    iho: handleFormData.bind(this, \"IHO\"),\n    ifl: handleFormData.bind(this, \"IFL\"),\n    zp1: handleFormData.bind(this, \"ZP1\"),\n    zp2: handleFormData.bind(this, \"ZP2\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  })));\n};\n\nexport default Account; //<NavLink to=\"/accountedit\"><button>EDYCJA KONTA</button></NavLink>\n//<NavLink to=\"/myorders\"><button>MOJE ZAMÓWIENIA</button></NavLink>\n//<NavLink to=\"/myorders\"><button>ZMIEŃ HASŁO</button></NavLink>","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/Account/Account.js"],"names":["React","useContext","useEffect","useState","UserContext","ServerPath","useHistory","NavLink","TitleBar","Axios","Cookies","FaRegUserCircle","ShowAccountData","EditAccountData","Account","User","setUser","AccountInfo","setAccountInfo","AccountFound","setAccountFound","UserLogged","setUserLogged","TabDisp","setTabDisp","accshow","accedit","accpass","FormData","setFormData","IsError","setIsError","ErrorInfo","setErrorInfo","SessionId","get","ExtSession","History","console","log","usercontrol","push","accinfo","acccontrol","AccountData","AccFormData","AccountType","address","fullname","zip1","zip2","cname","iname","isurname","istreet","ihouse","iflat","izip","substring","cstreet","chouse","cflat","czip","ACStyle","EAStyle","CPStyle","display","changeTab","option","handleFormData","data","event","login","target","value","ccity","cnip","cregon","icity","ihouuse","changeAccountData","valid","info1","info2","isNaN","includes","post","then","res","userinfo","mail","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,gBAAP;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,sBAAxC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,kBAApC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,eAAP,MAA4B,kDAA5B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC;AAACsB,IAAAA,OAAO,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE,KAAzB;AAAgCC,IAAAA,OAAO,EAAE;AAAzC,GAAD,CAAtC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,EAAxC;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC6B,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,EAAD,CAA1C,CARkB,CASlB;AACA;;AACA,MAAI+B,SAAS,GAAGxB,OAAO,CAACyB,GAAR,CAAY,WAAZ,CAAhB;AACA,MAAIC,UAAU,GAAG1B,OAAO,CAACyB,GAAR,CAAY,OAAZ,CAAjB,CAZkB,CAalB;AACA;AACA;AACA;AACA;;AACA,MAAIE,OAAO,GAAG/B,UAAU,EAAxB;AAEAgC,EAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAI,CAACyB,WAAjB;AAEAtC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACkC,UAAL,EAAiB;AACbC,MAAAA,OAAO,CAACI,IAAR,CAAa,WAAb;AACH,KAFD,MAEO;AACH,UAAIP,SAAS,KAAK,IAAlB,EAAwB;AACpBI,QAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAI,CAAC2B,OAAjB;;AACA,YAAI,CAAC3B,IAAI,CAAC4B,UAAV,EAAsB;AAClB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEH,SAlED,MAkEO;AACHL,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAnB,UAAAA,eAAe,CAAC,IAAD,CAAf;AACH;AACJ;AACJ;AACJ,GA9EQ,EA8EN,EA9EM,CAAT;AAgFA,MAAIwB,WAAJ,EAAiBC,WAAjB,EAA8BC,WAA9B,EAA2CC,OAA3C,EAAoDC,QAApD,EAA8DC,IAA9D,EAAoEC,IAApE;;AAEA,MAAI/B,YAAJ,EAAkB;AACd,QAAIJ,IAAI,CAAC2B,OAAL,CAAaS,KAAb,KAAuB,IAA3B,EAAiC;AAC7BL,MAAAA,WAAW,GAAG,cAAd;AACAE,MAAAA,QAAQ,GAAGjC,IAAI,CAAC2B,OAAL,CAAaU,KAAb,GAAqB,GAArB,GAA2BrC,IAAI,CAAC2B,OAAL,CAAaW,QAAnD;AACAN,MAAAA,OAAO,GAAGhC,IAAI,CAAC2B,OAAL,CAAaY,OAAb,GAAuB,GAAvB,GAA6BvC,IAAI,CAAC2B,OAAL,CAAaa,MAA1C,GAAmD,GAAnD,GAAyDxC,IAAI,CAAC2B,OAAL,CAAac,KAAhF;AACAP,MAAAA,IAAI,GAAGlC,IAAI,CAAC2B,OAAL,CAAae,IAAb,CAAkBC,SAAlB,CAA4B,CAA5B,EAA8B,CAA9B,CAAP;AACAR,MAAAA,IAAI,GAAGnC,IAAI,CAAC2B,OAAL,CAAae,IAAb,CAAkBC,SAAlB,CAA4B,CAA5B,EAA8B,CAA9B,CAAP;AACH,KAND,MAMO;AACHZ,MAAAA,WAAW,GAAG,SAAd;AACAE,MAAAA,QAAQ,GAAGjC,IAAI,CAAC2B,OAAL,CAAaS,KAAxB;AACAJ,MAAAA,OAAO,GAAGhC,IAAI,CAAC2B,OAAL,CAAaiB,OAAb,GAAuB,GAAvB,GAA6B5C,IAAI,CAAC2B,OAAL,CAAakB,MAA1C,GAAmD,GAAnD,GAAyD7C,IAAI,CAAC2B,OAAL,CAAamB,KAAhF;AACAZ,MAAAA,IAAI,GAAGlC,IAAI,CAAC2B,OAAL,CAAaoB,IAAb,CAAkBJ,SAAlB,CAA4B,CAA5B,EAA8B,CAA9B,CAAP;AACAR,MAAAA,IAAI,GAAGnC,IAAI,CAAC2B,OAAL,CAAaoB,IAAb,CAAkBJ,SAAlB,CAA4B,CAA5B,EAA8B,CAA9B,CAAP;AACH;AACJ,GAdD,MAcO,IAAI,CAACrC,UAAL,EAAiB;AACpBuB,IAAAA,WAAW,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ;AAKH,GANM,MAMA;AACHA,IAAAA,WAAW,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ;AAKH;;AAED,MAAImB,OAAJ,EAAaC,OAAb,EAAsBC,OAAtB,CApIkB,CAqIlB;;AACAD,EAAAA,OAAO,GAAG;AAACE,IAAAA,OAAO,EAAE;AAAV,GAAV;AACAD,EAAAA,OAAO,GAAG;AAACC,IAAAA,OAAO,EAAE;AAAV,GAAV;;AAEA,MAAI3C,OAAO,CAACE,OAAZ,EAAqB;AACjBsC,IAAAA,OAAO,GAAG;AAACG,MAAAA,OAAO,EAAE;AAAV,KAAV;AACAF,IAAAA,OAAO,GAAG;AAACE,MAAAA,OAAO,EAAE;AAAV,KAAV;AACAD,IAAAA,OAAO,GAAG;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAV;AACH;;AACD,MAAI3C,OAAO,CAACG,OAAZ,EAAqB;AACjBqC,IAAAA,OAAO,GAAG;AAACG,MAAAA,OAAO,EAAE;AAAV,KAAV;AACAF,IAAAA,OAAO,GAAG;AAACE,MAAAA,OAAO,EAAE;AAAV,KAAV;AACAD,IAAAA,OAAO,GAAG;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAV;AACH;;AAED,QAAMC,SAAS,GAAIC,MAAD,IAAY;AAC1B,QAAIA,MAAM,KAAK,CAAf,EAAkB;AACd5C,MAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaE,QAAAA,OAAO,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,OAAO,EAAE;AAArD,OAAD,CAAV;AACH;;AACD,QAAIyC,MAAM,KAAK,CAAf,EAAkB;AACd5C,MAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaE,QAAAA,OAAO,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,KAAtC;AAA6CC,QAAAA,OAAO,EAAE;AAAtD,OAAD,CAAV;AACH;;AACD,QAAIyC,MAAM,KAAK,CAAf,EAAkB;AACd5C,MAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaE,QAAAA,OAAO,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,KAArC;AAA4CC,QAAAA,OAAO,EAAE;AAArD,OAAD,CAAV;AACH;AACJ,GAVD;;AAYA,QAAM0C,cAAc,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAEpC,YAAOD,IAAP;AACI,WAAK,KAAL;AAAYzC,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc4C,UAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AAAlC,SAAD,CAAX;AAAuD;;AACnE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcuB,UAAAA,KAAK,EAAEoB,KAAK,CAACE,MAAN,CAAaC;AAAlC,SAAD,CAAX;AAAuD;;AACnE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc+B,UAAAA,OAAO,EAAEY,KAAK,CAACE,MAAN,CAAaC;AAApC,SAAD,CAAX;AAAyD;;AACrE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc+C,UAAAA,KAAK,EAAEJ,KAAK,CAACE,MAAN,CAAaC;AAAlC,SAAD,CAAX;AAAuD;;AACnE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcgC,UAAAA,MAAM,EAAEW,KAAK,CAACE,MAAN,CAAaC;AAAnC,SAAD,CAAX;AAAwD;;AACpE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAciC,UAAAA,KAAK,EAAEU,KAAK,CAACE,MAAN,CAAaC;AAAlC,SAAD,CAAX;AAAuD;AACnE;;AACA,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcgD,UAAAA,IAAI,EAAEL,KAAK,CAACE,MAAN,CAAaC;AAAjC,SAAD,CAAX;AAAsD;;AAClE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAciD,UAAAA,MAAM,EAAEN,KAAK,CAACE,MAAN,CAAaC;AAAnC,SAAD,CAAX;AAAwD;;AACpE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcwB,UAAAA,KAAK,EAAEmB,KAAK,CAACE,MAAN,CAAaC;AAAlC,SAAD,CAAX;AAAuD;;AACnE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcyB,UAAAA,QAAQ,EAAEkB,KAAK,CAACE,MAAN,CAAaC;AAArC,SAAD,CAAX;AAA0D;;AACtE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAckD,UAAAA,KAAK,EAAEP,KAAK,CAACE,MAAN,CAAaC;AAAlC,SAAD,CAAX;AAAuD;;AACnE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc0B,UAAAA,OAAO,EAAEiB,KAAK,CAACE,MAAN,CAAaC;AAApC,SAAD,CAAX;AAAyD;;AACrE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcmD,UAAAA,OAAO,EAAER,KAAK,CAACE,MAAN,CAAaC;AAApC,SAAD,CAAX;AAAyD;;AACrE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc4B,UAAAA,KAAK,EAAEe,KAAK,CAACE,MAAN,CAAaC;AAAlC,SAAD,CAAX;AAAuD;;AACnE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcqB,UAAAA,IAAI,EAAEsB,KAAK,CAACE,MAAN,CAAaC;AAAjC,SAAD,CAAX;AAAsD;;AAClE,WAAK,KAAL;AAAY7C,QAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcsB,UAAAA,IAAI,EAAEqB,KAAK,CAACE,MAAN,CAAaC;AAAjC,SAAD,CAAX;AAAsD;AAjBtE;;AAmBApC,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACH,GAtBD;;AAwBA,QAAMoD,iBAAiB,GAAG,MAAM;AAC5B,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,KAAK,GAAG,kDAAZ;AACA,QAAIC,KAAK,GAAG,qDAAZ;;AACA,QAAIC,KAAK,CAACxD,QAAQ,CAACqB,IAAV,CAAT,EAA0B;AACtB,UAAI,CAACjB,SAAS,CAACqD,QAAV,CAAmBH,KAAnB,CAAL,EAAgC;AAChCjD,QAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAe,kDAAf,CAAD,CAAZ,CADgC,CAEhC;;AACAiD,QAAAA,KAAK;AACJ;AACJ;;AACD,QAAIG,KAAK,CAACxD,QAAQ,CAACiD,MAAV,CAAL,IAA0BjD,QAAQ,CAACiD,MAAT,KAAoB,IAAlD,EAAwD;AACpD,UAAI,CAAC7C,SAAS,CAACqD,QAAV,CAAmBF,KAAnB,CAAL,EAAgC;AAChClD,QAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAe,qDAAf,CAAD,CAAZ;AACAiD,QAAAA,KAAK;AACJ;AACJ;;AAED,QAAIA,KAAK,GAAG,CAAZ,EAAe;AACXlD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD,MAEO;AACHtB,MAAAA,KAAK,CAAC6E,IAAN,CAAWjF,UAAU,GAAG,iBAAxB,EAA2CuB,QAA3C,EACC2D,IADD,CACMC,GAAG,IAAI;AACTlD,QAAAA,OAAO,CAACC,GAAR,CAAYiD,GAAG,CAAClB,IAAhB;AACH,OAHD;AAIH;AAGJ,GA5BD;;AA8BAhC,EAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAEmC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,QAAL,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAoCF,WAApC,CALJ,CADJ,EAQI,oBAAC,eAAD;AACI,IAAA,KAAK,EAAE/B,IAAI,CAAC0E,QAAL,CAAcjB,KADzB;AAEI,IAAA,IAAI,EAAEzD,IAAI,CAAC2B,OAAL,CAAagD,IAFvB;AAGI,IAAA,KAAK,EAAE3E,IAAI,CAAC2B,OAAL,CAAaU,KAHxB;AAII,IAAA,QAAQ,EAAErC,IAAI,CAAC2B,OAAL,CAAaW,QAJ3B;AAKI,IAAA,OAAO,EAAEN,OALb;AAMI,IAAA,IAAI,EAAEhC,IAAI,CAAC2B,OAAL,CAAae,IANvB;AAOI,IAAA,KAAK,EAAE1C,IAAI,CAAC2B,OAAL,CAAaoC,KAPxB;AAQI,IAAA,KAAK,EAAE/D,IAAI,CAAC2B,OAAL,CAAaS,KARxB;AASI,IAAA,IAAI,EAAEpC,IAAI,CAAC2B,OAAL,CAAakC,IATvB;AAUI,IAAA,MAAM,EAAE7D,IAAI,CAAC2B,OAAL,CAAamC,MAVzB;AAWI,IAAA,IAAI,EAAE9D,IAAI,CAAC2B,OAAL,CAAaoB,IAXvB;AAYI,IAAA,KAAK,EAAE/C,IAAI,CAAC2B,OAAL,CAAaiC,KAZxB;AAaI,IAAA,SAAS,EAAER,SAAS,CAACwB,IAAV,CAAe,IAAf,EAAqB,CAArB,CAbf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAFJ,EA0BI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE3B,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,QAAL,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAoCF,WAApC,CALJ,CADJ,EAQI,oBAAC,eAAD;AACI,IAAA,KAAK,EAAE/B,IAAI,CAAC0E,QAAL,CAAcjB,KADzB;AAEI,IAAA,IAAI,EAAEzD,IAAI,CAAC2B,OAAL,CAAagD,IAFvB;AAGI,IAAA,KAAK,EAAE3E,IAAI,CAAC2B,OAAL,CAAaU,KAHxB;AAII,IAAA,QAAQ,EAAErC,IAAI,CAAC2B,OAAL,CAAaW,QAJ3B;AAKI,IAAA,OAAO,EAAEN,OALb;AAMI,IAAA,KAAK,EAAEE,IANX;AAOI,IAAA,KAAK,EAAEC,IAPX;AAQI,IAAA,KAAK,EAAEnC,IAAI,CAAC2B,OAAL,CAAaoC,KARxB;AASI,IAAA,KAAK,EAAE/D,IAAI,CAAC2B,OAAL,CAAaS,KATxB;AAUI,IAAA,IAAI,EAAEpC,IAAI,CAAC2B,OAAL,CAAakC,IAVvB;AAWI,IAAA,MAAM,EAAE7D,IAAI,CAAC2B,OAAL,CAAamC,MAXzB;AAYI,IAAA,KAAK,EAAE5B,IAZX;AAaI,IAAA,KAAK,EAAEC,IAbX;AAcI,IAAA,KAAK,EAAEnC,IAAI,CAAC2B,OAAL,CAAaiC,KAdxB;AAeI,IAAA,OAAO,EAAE5D,IAAI,CAAC2B,OAAL,CAAaiB,OAf1B;AAgBI,IAAA,MAAM,EAAE5C,IAAI,CAAC2B,OAAL,CAAakB,MAhBzB;AAiBI,IAAA,KAAK,EAAE7C,IAAI,CAAC2B,OAAL,CAAamB,KAjBxB;AAkBI,IAAA,SAAS,EAAEM,SAlBf;AAmBI,IAAA,gBAAgB,EAAEa,iBAnBtB;AAoBI,IAAA,OAAO,EAAElD,OApBb;AAqBI,IAAA,SAAS,EAAEE,SArBf;AAsBI,IAAA,GAAG,EAAEqC,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CAtBT;AAuBI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CAvBT;AAwBI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CAxBT;AAyBI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CAzBT;AA0BI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CA1BT;AA2BI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CA3BT;AA4BI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CA5BT;AA6BI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CA7BT;AA8BI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CA9BT;AA+BI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CA/BT;AAgCI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CAhCT;AAiCI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CAjCT;AAkCI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CAlCT;AAmCI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CAnCT;AAoCI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CApCT;AAqCI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CArCT;AAsCI,IAAA,GAAG,EAAEtB,cAAc,CAACsB,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CAtCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CA1BJ,CADJ;AA8EH,CAtSD;;AAwSA,eAAe7E,OAAf,C,CAEA;AACA;AACA","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './Account.scss';\r\nimport { UserContext, ServerPath } from '../../containers/App';\r\nimport { useHistory, NavLink } from 'react-router-dom';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\nimport ShowAccountData from '../../components/ShowAccountData/ShowAccountData';\r\nimport EditAccountData from '../../components/EditAccountData/EditAccountData';\r\n\r\nconst Account = () => {\r\n    const [User, setUser] = useContext(UserContext);\r\n    const [AccountInfo, setAccountInfo] = useState([]);\r\n    const [AccountFound, setAccountFound] = useState(false);\r\n    const [UserLogged, setUserLogged] = useState(false);\r\n    const [TabDisp, setTabDisp] = useState({accshow: true, accedit: false, accpass: false})\r\n    const [FormData, setFormData] = useState();\r\n    const [IsError, setIsError] = useState(false);\r\n    const [ErrorInfo, setErrorInfo] = useState([]);\r\n    //let UserId = Cookies.get('psid');\r\n    //let DecodedUserId = decodeURIComponent(UserId);\r\n    let SessionId = Cookies.get('pssession');\r\n    let ExtSession = Cookies.get('psacc');\r\n    //let DecodedUserName = decodeURIComponent(UserName);\r\n    //const [UserData, setUserData] = useState({\r\n    //    id: DecodedUserId,\r\n    //    login: DecodedUserName\r\n    //});\r\n    let History = useHistory();\r\n\r\n    console.log(User.usercontrol);\r\n\r\n    useEffect(() => {\r\n        if (!ExtSession) {\r\n            History.push('/extlogin');\r\n        } else {\r\n            if (SessionId !== null) {\r\n                console.log(User.accinfo);\r\n                if (!User.acccontrol) {\r\n                    /*\r\n                    console.log(\"loading...\");\r\n                    Axios.post(ServerPath   + 'UserAccount.php', ExtSession)\r\n                    .then(res => {\r\n                        \r\n                        if(res.data.length > 0) {\r\n                            //setAccountInfo(res.data);\r\n                            \r\n                            res.data.map((r, index) => {\r\n                                let zipA, zipB;\r\n                                if (r.ci_zip !== null) {\r\n                                    zipA = r.ci_zip.substring(0,2);\r\n                                    zipB = r.ci_zip.substring(3,6);\r\n                                }\r\n                                if (r.cc_zip !== null) {\r\n                                    zipA = r.cc_zip.substring(0,2)\r\n                                    zipB = r.cc_zip.substring(3,6);\r\n                                }\r\n                                setUser((prevState) => ({...prevState, accinfo: {\r\n                                    mail: r.u_mail,\r\n                                    cname: r.cc_name,\r\n                                    ccity: r.cc_city,\r\n                                    cstreet: r.cc_street,\r\n                                    chouse: r.cc_number,\r\n                                    cflat: r.cc_number_flat,\r\n                                    czip: r.cc_zip,\r\n                                    cnip: r.cc_NIP,\r\n                                    cregon: r.cc_REGON,\r\n                                    iname: r.ci_name,\r\n                                    isurname: r.ci_surname,\r\n                                    icity: r.ci_city,\r\n                                    istreet: r.ci_street,\r\n                                    ihouse: r.ci_number,\r\n                                    iflat: r.ci_number_flat,\r\n                                    izip: r.ci_zip\r\n                                },\r\n                                    acccontrol: true\r\n                                }));\r\n                                setFormData((prevState) => ({...prevState, \r\n                                    mail: r.u_mail,\r\n                                    cname: r.cc_name,\r\n                                    ccity: r.cc_city,\r\n                                    cstreet: r.cc_street,\r\n                                    chouse: r.cc_number,\r\n                                    cflat: r.cc_number_flat,\r\n                                    czip: r.cc_zip,\r\n                                    cnip: r.cc_NIP,\r\n                                    cregon: r.cc_REGON,\r\n                                    iname: r.ci_name,\r\n                                    isurname: r.ci_surname,\r\n                                    icity: r.ci_city,\r\n                                    istreet: r.ci_street,\r\n                                    ihouse: r.ci_number,\r\n                                    iflat: r.ci_number_flat,\r\n                                    izip: r.ci_zip,\r\n                                    zip1: zipA,\r\n                                    zip2: zipB\r\n                                    //zip2: r.ci_zip.substring(3,6)\r\n                                ,\r\n                                }));\r\n                            })\r\n                            //console.log(res.data);\r\n                            setAccountFound(true);\r\n                        }\r\n                    })*/\r\n                } else {\r\n                    console.log(\"We still have it\");\r\n                    setAccountFound(true);\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    let AccountData, AccFormData, AccountType, address, fullname, zip1, zip2;\r\n\r\n    if (AccountFound) {\r\n        if (User.accinfo.cname === null) {\r\n            AccountType = \"indywidualne\";\r\n            fullname = User.accinfo.iname + \" \" + User.accinfo.isurname;\r\n            address = User.accinfo.istreet + \" \" + User.accinfo.ihouse + \"/\" + User.accinfo.iflat;\r\n            zip1 = User.accinfo.izip.substring(0,2);\r\n            zip2 = User.accinfo.izip.substring(3,6);\r\n        } else {\r\n            AccountType = \"firmowe\";\r\n            fullname = User.accinfo.cname;\r\n            address = User.accinfo.cstreet + \" \" + User.accinfo.chouse + \"/\" + User.accinfo.cflat;\r\n            zip1 = User.accinfo.czip.substring(0,2);\r\n            zip2 = User.accinfo.czip.substring(3,6);\r\n        }\r\n    } else if (!UserLogged) {\r\n        AccountData = (\r\n            <div>\r\n                Nie wykryto zalogowanego usera.\r\n            </div>\r\n        )\r\n    } else {\r\n        AccountData = (\r\n            <div>\r\n                Brak danych\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let ACStyle, EAStyle, CPStyle;\r\n    //ACStyle = {display: 'block'};\r\n    EAStyle = {display: 'none'};\r\n    CPStyle = {display: 'none'};\r\n\r\n    if (TabDisp.accshow) {\r\n        ACStyle = {display: 'block'};\r\n        EAStyle = {display: 'none'};\r\n        CPStyle = {display: 'none'};\r\n    }\r\n    if (TabDisp.accedit) {\r\n        ACStyle = {display: 'none'};\r\n        EAStyle = {display: 'block'};\r\n        CPStyle = {display: 'none'};\r\n    }\r\n\r\n    const changeTab = (option) => {\r\n        if (option === 0) {\r\n            setTabDisp({...TabDisp, accshow: false, accedit: true, accpass: false});\r\n        }\r\n        if (option === 1) {\r\n            setTabDisp({...TabDisp, accshow: false, accedit: false, accpass: true});\r\n        }\r\n        if (option === 2) {\r\n            setTabDisp({...TabDisp, accshow: true, accedit: false, accpass: false});\r\n        }\r\n    }\r\n\r\n    const handleFormData = (data, event) => {\r\n\r\n        switch(data) {\r\n            case \"LOG\": setFormData({...FormData, login: event.target.value}); break;\r\n            case \"CNM\": setFormData({...FormData, cname: event.target.value}); break;\r\n            case \"CST\": setFormData({...FormData, cstreet: event.target.value}); break;\r\n            case \"CCT\": setFormData({...FormData, ccity: event.target.value}); break;\r\n            case \"CHO\": setFormData({...FormData, chouse: event.target.value}); break;\r\n            case \"CFL\": setFormData({...FormData, cflat: event.target.value}); break;\r\n            //case \"CZP\": setFormData({...FormData, czip: event.target.value}); break;\r\n            case \"CNP\": setFormData({...FormData, cnip: event.target.value}); break;\r\n            case \"CRG\": setFormData({...FormData, cregon: event.target.value}); break;\r\n            case \"INM\": setFormData({...FormData, iname: event.target.value}); break;\r\n            case \"ISN\": setFormData({...FormData, isurname: event.target.value}); break;\r\n            case \"ICT\": setFormData({...FormData, icity: event.target.value}); break;\r\n            case \"IST\": setFormData({...FormData, istreet: event.target.value}); break;\r\n            case \"IHO\": setFormData({...FormData, ihouuse: event.target.value}); break;\r\n            case \"IFL\": setFormData({...FormData, iflat: event.target.value}); break;\r\n            case \"ZP1\": setFormData({...FormData, zip1: event.target.value}); break;\r\n            case \"ZP2\": setFormData({...FormData, zip2: event.target.value}); break;\r\n        }\r\n        console.log(FormData);\r\n    }\r\n\r\n    const changeAccountData = () => {\r\n        let valid = 0;\r\n        let info1 = 'BŁĄD: Kod pocztowy powinien zawierać tylko cyfry';\r\n        let info2 = 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry';\r\n        if (isNaN(FormData.zip1)) {\r\n            if (!ErrorInfo.includes(info1)) {\r\n            setErrorInfo([...ErrorInfo, \"BŁĄD: Kod pocztowy powinien zawierać tylko cyfry\"]);\r\n            //console.log(FormData.zip1);\r\n            valid++;\r\n            }\r\n        }\r\n        if (isNaN(FormData.cregon) && FormData.cregon !== null) {\r\n            if (!ErrorInfo.includes(info2)) {\r\n            setErrorInfo([...ErrorInfo, 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry']);\r\n            valid++;\r\n            }\r\n        }\r\n\r\n        if (valid > 0) {\r\n            setIsError(true);\r\n        } else {\r\n            Axios.post(ServerPath + \"editaccount.php\", FormData)\r\n            .then(res => {\r\n                console.log(res.data);\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    console.log(FormData);\r\n\r\n    return(\r\n        <div className=\"SiteContainer\">\r\n            <TitleBar title=\"Konto użytkownika\"/>\r\n            <div className=\"AccountData\" style={ACStyle}>\r\n                <div className=\"AccountNameContainer\">\r\n                    <div className=\"AccountName\">\r\n                        <FaRegUserCircle size={50}/>\r\n                        <h1>{fullname}</h1>\r\n                    </div>\r\n                    <div className=\"AccountType\">Konto {AccountType}</div>\r\n                </div>\r\n                <ShowAccountData\r\n                    login={User.userinfo.login}\r\n                    mail={User.accinfo.mail}\r\n                    iname={User.accinfo.iname}\r\n                    isurname={User.accinfo.isurname}\r\n                    address={address}\r\n                    izip={User.accinfo.izip}\r\n                    icity={User.accinfo.icity}\r\n                    cname={User.accinfo.cname}\r\n                    cnip={User.accinfo.cnip}\r\n                    cregon={User.accinfo.cregon}\r\n                    czip={User.accinfo.czip}\r\n                    ccity={User.accinfo.ccity}\r\n                    changetab={changeTab.bind(this, 0)}\r\n                />\r\n            </div>\r\n            <div className=\"AccountData\" style={EAStyle}>\r\n                <div className=\"AccountNameContainer\">\r\n                    <div className=\"AccountName\">\r\n                        <FaRegUserCircle size={50}/>\r\n                        <h1>{fullname}</h1>\r\n                    </div>\r\n                    <div className=\"AccountType\">Konto {AccountType}</div>\r\n                </div>\r\n                <EditAccountData\r\n                    login={User.userinfo.login}\r\n                    mail={User.accinfo.mail}\r\n                    iname={User.accinfo.iname}\r\n                    isurname={User.accinfo.isurname}\r\n                    address={address}\r\n                    izip1={zip1}\r\n                    izip2={zip2}\r\n                    icity={User.accinfo.icity}\r\n                    cname={User.accinfo.cname}\r\n                    cnip={User.accinfo.cnip}\r\n                    cregon={User.accinfo.cregon}\r\n                    czip1={zip1}\r\n                    czip2={zip2}\r\n                    ccity={User.accinfo.ccity}\r\n                    cstreet={User.accinfo.cstreet}\r\n                    chouse={User.accinfo.chouse}\r\n                    cflat={User.accinfo.cflat}\r\n                    changetab={changeTab}\r\n                    submitdatachange={changeAccountData}\r\n                    iserror={IsError}\r\n                    errorinfo={ErrorInfo}\r\n                    log={handleFormData.bind(this, \"LOG\")}\r\n                    cnm={handleFormData.bind(this, \"CNM\")}                  \r\n                    cst={handleFormData.bind(this, \"CST\")}\r\n                    cct={handleFormData.bind(this, \"CCT\")}\r\n                    cho={handleFormData.bind(this, \"CHO\")}\r\n                    cfl={handleFormData.bind(this, \"CFL\")}\r\n                    czp={handleFormData.bind(this, \"CZP\")}\r\n                    cnp={handleFormData.bind(this, \"CNP\")}\r\n                    crg={handleFormData.bind(this, \"CRG\")}\r\n                    inm={handleFormData.bind(this, \"INM\")}\r\n                    isn={handleFormData.bind(this, \"ISN\")}\r\n                    ict={handleFormData.bind(this, \"ICT\")}\r\n                    ist={handleFormData.bind(this, \"IST\")}\r\n                    iho={handleFormData.bind(this, \"IHO\")}\r\n                    ifl={handleFormData.bind(this, \"IFL\")}\r\n                    zp1={handleFormData.bind(this, \"ZP1\")}\r\n                    zp2={handleFormData.bind(this, \"ZP2\")}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account;\r\n\r\n//<NavLink to=\"/accountedit\"><button>EDYCJA KONTA</button></NavLink>\r\n//<NavLink to=\"/myorders\"><button>MOJE ZAMÓWIENIA</button></NavLink>\r\n//<NavLink to=\"/myorders\"><button>ZMIEŃ HASŁO</button></NavLink>"]},"metadata":{},"sourceType":"module"}