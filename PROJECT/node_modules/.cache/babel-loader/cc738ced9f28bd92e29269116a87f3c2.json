{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\Account\\\\Account.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Account.scss';\nimport { UserContext, ServerPath } from '../../containers/App';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { FaRegUserCircle } from 'react-icons/fa';\n\nconst Account = () => {\n  const [User, setUser] = useContext(UserContext);\n  const [AccountInfo, setAccountInfo] = useState([]);\n  const [AccountFound, setAccountFound] = useState(false); //let UserId = Cookies.get('psid');\n  //let DecodedUserId = decodeURIComponent(UserId);\n\n  let SessionId = Cookies.get('pssession'); //let DecodedUserName = decodeURIComponent(UserName);\n  //const [UserData, setUserData] = useState({\n  //    id: DecodedUserId,\n  //    login: DecodedUserName\n  //});\n\n  useEffect(() => {\n    if (SessionId !== null) {\n      Axios.post(ServerPath + 'UserAccount.php', SessionId).then(res => {\n        if (res.data.length > 0) {\n          setAccountInfo(res.data);\n          console.log(res.data);\n          setAccountFound(true);\n        }\n      });\n    }\n  }, []);\n  console.log(AccountFound);\n  let AccountData;\n  let login, mail, address, name, surname, fullname, street, streetno, flatno, city, zip, nip, regon;\n  let AccountType;\n\n  if (AccountFound) {\n    AccountInfo.map((r, index) => {\n      console.log(r.cc_name);\n\n      if (r.cc_name == null) {\n        AccountType = \"indywidualne\";\n        login = r.u_login;\n        mail = r.u_mail;\n        name = r.ci_name;\n        surname = r.ci_surname;\n        fullname = r.ci_name + \" \" + r.ci_surname;\n        street = r.ci_street;\n        streetno = r.ci_number;\n        flatno = r.ci_number_flat;\n        city = r.ci_city;\n        zip = r.ci_zip;\n      } else {\n        AccountType = \"firmowe\";\n        login = r.u_login;\n        mail = r.u_mail;\n        name = r.cc_name;\n        fullname = r.cc_name;\n        street = r.cc_street;\n        streetno = r.cc_number;\n        flatno = r.cc_number_flat;\n        city = r.cc_city;\n        zip = r.cc_zip;\n        nip = r.cc_NIP;\n        regon = r.cc_REGON;\n      } //key = {index};\n\n    });\n\n    if (AccountType === \"indywidualne\") {\n      if (flatno) {\n        address = streetno + \"/\" + flatno;\n      } else {\n        address = streetno;\n      }\n\n      AccountData = React.createElement(\"div\", {\n        className: \"AccountData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AccountNameContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"AccountName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(FaRegUserCircle, {\n        size: 50,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, fullname)), React.createElement(\"div\", {\n        className: \"AccountType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Konto \", AccountType)), React.createElement(\"div\", {\n        className: \"AccountInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"DANE OSOBOWE\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Login: \", login), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"E-mail: \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Imi\\u0119: \", name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Nazwisko: \", surname), React.createElement(\"hr\", {\n        className: \"separator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"ADRES\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, street, \" \", address)));\n    }\n  } else {\n    AccountData = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Brak danych\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"SiteContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: \"Dane konta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), AccountData);\n};\n\nexport default Account;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/Account/Account.js"],"names":["React","useContext","useEffect","useState","UserContext","ServerPath","TitleBar","Axios","Cookies","FaRegUserCircle","Account","User","setUser","AccountInfo","setAccountInfo","AccountFound","setAccountFound","SessionId","get","post","then","res","data","length","console","log","AccountData","login","mail","address","name","surname","fullname","street","streetno","flatno","city","zip","nip","regon","AccountType","map","r","index","cc_name","u_login","u_mail","ci_name","ci_surname","ci_street","ci_number","ci_number_flat","ci_city","ci_zip","cc_street","cc_number","cc_number_flat","cc_city","cc_zip","cc_NIP","cc_REGON"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './Account.scss';\r\nimport { UserContext, ServerPath } from '../../containers/App';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\n\r\nconst Account = () => {\r\n    const [User, setUser] = useContext(UserContext);\r\n    const [AccountInfo, setAccountInfo] = useState([]);\r\n    const [AccountFound, setAccountFound] = useState(false);\r\n    //let UserId = Cookies.get('psid');\r\n    //let DecodedUserId = decodeURIComponent(UserId);\r\n    let SessionId = Cookies.get('pssession');\r\n    //let DecodedUserName = decodeURIComponent(UserName);\r\n    //const [UserData, setUserData] = useState({\r\n    //    id: DecodedUserId,\r\n    //    login: DecodedUserName\r\n    //});\r\n\r\n    useEffect(() => {\r\n        if (SessionId !== null) {\r\n            Axios.post(ServerPath   + 'UserAccount.php', SessionId)\r\n            .then(res => {\r\n                if(res.data.length > 0) {\r\n                    setAccountInfo(res.data);\r\n                    console.log(res.data);\r\n                    setAccountFound(true);\r\n                }\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    console.log(AccountFound);\r\n\r\n    let AccountData;\r\n    let login, mail, address, name, surname, fullname, street, streetno, flatno, city, zip, nip, regon;\r\n    let AccountType;\r\n\r\n    if (AccountFound) {\r\n        AccountInfo.map((r, index) => {\r\n            console.log(r.cc_name);\r\n            if (r.cc_name == null) {\r\n                AccountType = \"indywidualne\";\r\n                login = r.u_login;\r\n                mail = r.u_mail;\r\n                name = r.ci_name;\r\n                surname = r.ci_surname;\r\n                fullname = r.ci_name + \" \" + r.ci_surname\r\n                street = r.ci_street;\r\n                streetno = r.ci_number;\r\n                flatno = r.ci_number_flat\r\n                city = r.ci_city;\r\n                zip = r.ci_zip;\r\n            } else {\r\n                AccountType = \"firmowe\";\r\n                login = r.u_login;\r\n                mail = r.u_mail;\r\n                name = r.cc_name;\r\n                fullname = r.cc_name;\r\n                street = r.cc_street;\r\n                streetno = r.cc_number;\r\n                flatno = r.cc_number_flat\r\n                city = r.cc_city;\r\n                zip = r.cc_zip;\r\n                nip = r.cc_NIP;\r\n                regon = r.cc_REGON;\r\n            }\r\n            //key = {index};\r\n        })\r\n\r\n        if (AccountType === \"indywidualne\") {\r\n            if (flatno) {\r\n                address = streetno + \"/\" + flatno;\r\n            } else {\r\n                address = streetno;\r\n            }\r\n            AccountData = (\r\n                <div className=\"AccountData\">\r\n                    <div className=\"AccountNameContainer\">\r\n                        <div className=\"AccountName\">\r\n                            <FaRegUserCircle size={50}/>\r\n                            <h1>{fullname}</h1>\r\n                        </div>\r\n                        <div className=\"AccountType\">Konto {AccountType}</div>\r\n                    </div>\r\n                    <div className=\"AccountInfo\">\r\n                        <h3>DANE OSOBOWE</h3>\r\n                        <p>Login: {login}</p>\r\n                        <p>E-mail: </p>\r\n                        <p>Imię: {name}</p>\r\n                        <p>Nazwisko: {surname}</p>\r\n                        <hr className=\"separator\"/>\r\n                        <h3>ADRES</h3>\r\n                        <p>{street} {address}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    } else {\r\n        AccountData = <p>Brak danych</p>\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"SiteContainer\">\r\n            <TitleBar title=\"Dane konta\"/>\r\n            {AccountData}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account;"]},"metadata":{},"sourceType":"module"}