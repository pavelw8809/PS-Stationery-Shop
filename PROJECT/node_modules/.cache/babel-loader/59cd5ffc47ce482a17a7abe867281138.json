{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\Account\\\\Account.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Account.scss';\nimport { UserContext, ServerPath } from '../../containers/App';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { FaRegUserCircle } from 'react-icons/fa';\n\nconst Account = () => {\n  const [User, setUser] = useContext(UserContext);\n  const [AccountInfo, setAccountInfo] = useState([]);\n  const [AccountFound, setAccountFound] = useState(false); //let UserId = Cookies.get('psid');\n  //let DecodedUserId = decodeURIComponent(UserId);\n\n  let SessionId = Cookies.get('pssession'); //let DecodedUserName = decodeURIComponent(UserName);\n  //const [UserData, setUserData] = useState({\n  //    id: DecodedUserId,\n  //    login: DecodedUserName\n  //});\n\n  useEffect(() => {\n    if (SessionId !== null) {\n      //console.log(User.accinfo.length);\n      if (User.accinfo.length == null) {\n        Axios.post(ServerPath + 'UserAccount.php', SessionId).then(res => {\n          if (res.data.length > 0) {\n            //setAccountInfo(res.data);\n            console.log(res.data);\n            res.data.map((r, index) => {\n              setUser(prevState => ({ ...prevState,\n                accinfo: {\n                  mail: r.u_mail,\n                  cname: r.cc_name,\n                  ccity: r.cc_city,\n                  cstreet: r.cc_street,\n                  chouse: r.cc_number,\n                  cflat: r.cc_number_flat,\n                  czip: r.cc_zip,\n                  cnip: r.cc_NIP,\n                  cregon: r.cc_REGON,\n                  iname: r.ci_name,\n                  isurname: r.ci_surname,\n                  icity: r.ci_city,\n                  istreet: r.ci_street,\n                  ihouse: r.ci_number,\n                  iflat: r.ci_number_flat,\n                  izip: r.ci_zip\n                }\n              }));\n            }); //console.log(res.data);\n\n            setAccountFound(true);\n          }\n        });\n      } else {\n        console.log(\"We still have it\");\n      }\n    }\n  }, []);\n  let AccountData, AccountType, address, fullname;\n\n  if (AccountFound) {\n    if (User.accinfo.cc_name == null) {\n      AccountType = \"indywidualne\";\n      fullname = User.accinfo.iname + \" \" + User.accinfo.isurname;\n      address = User.accinfo.istreet + \" \" + User.accinfo.ihouse + \"/\" + User.accinfo.iflat;\n    } else {\n      AccountType = \"firmowe\";\n    }\n  } else {\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Brak danych\");\n  }\n  /*\r\n      console.log(AccountFound);\r\n  \r\n      let AccountData;\r\n  \r\n      let AccountType;\r\n  \r\n      if (AccountFound) {\r\n          AccountInfo.map((r, index) => {\r\n              console.log(r.cc_name);\r\n              if (r.cc_name == null) {\r\n                  setUser({...User, userinfo: {\r\n                      AccountType: \"indywidualne\",\r\n                      login: r.u_login,\r\n                      mail: r.u_mail,\r\n                      name: r.ci_name,\r\n                      surname: r.ci_surname,\r\n                      fullname: r.ci_name + \" \" + r.ci_surname,\r\n                      street: r.ci_street,\r\n                      streetno: r.ci_number,\r\n                      flatno: r.ci_number_flat,\r\n                      city: r.ci_city,\r\n                      zip: r.ci_zip\r\n                  }})\r\n  \r\n              } else {\r\n                  AccountType = \"firmowe\";\r\n                  login = r.u_login;\r\n                  mail = r.u_mail;\r\n                  name = r.cc_name;\r\n                  fullname = r.cc_name;\r\n                  street = r.cc_street;\r\n                  streetno = r.cc_number;\r\n                  flatno = r.cc_number_flat\r\n                  city = r.cc_city;\r\n                  zip = r.cc_zip;\r\n                  nip = r.cc_NIP;\r\n                  regon = r.cc_REGON;\r\n              }\r\n              //key = {index};\r\n          })\r\n  \r\n          if (flatno) {\r\n              address = streetno + \"/\" + flatno;\r\n          } else {\r\n              address = streetno;\r\n          }\r\n  */\n\n\n  if (AccountType === \"indywidualne\") {\n    AccountData = React.createElement(\"div\", {\n      className: \"AccountData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountNameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(FaRegUserCircle, {\n      size: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, fullname)), React.createElement(\"div\", {\n      className: \"AccountType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Konto \", User.userinfo.AccountType)), React.createElement(\"div\", {\n      className: \"AccountInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"DANE OSOBOWE\"), React.createElement(\"div\", {\n      className: \"AccountData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Login: \", User.userinfo.login), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"E-mail: \", User.accinfo.mail), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Imi\\u0119: \", User.accinfo.iname), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Nazwisko: \", User.accinfo.isurname)), React.createElement(\"hr\", {\n      className: \"separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"ADRES\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, User.accinfo.istreet, \" \", User.accinfo.iaddress), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, User.accinfo.izip, \" \", User.accinfo.icity))));\n  }\n\n  if (AccountType === \"firmowe\") {\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"SiteContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: \"Dane konta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), User.accinfo.istreet);\n};\n\nexport default Account;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/Account/Account.js"],"names":["React","useContext","useEffect","useState","UserContext","ServerPath","TitleBar","Axios","Cookies","FaRegUserCircle","Account","User","setUser","AccountInfo","setAccountInfo","AccountFound","setAccountFound","SessionId","get","accinfo","length","post","then","res","data","console","log","map","r","index","prevState","mail","u_mail","cname","cc_name","ccity","cc_city","cstreet","cc_street","chouse","cc_number","cflat","cc_number_flat","czip","cc_zip","cnip","cc_NIP","cregon","cc_REGON","iname","ci_name","isurname","ci_surname","icity","ci_city","istreet","ci_street","ihouse","ci_number","iflat","ci_number_flat","izip","ci_zip","AccountData","AccountType","address","fullname","userinfo","login","iaddress"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,gBAAP;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,sBAAxC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,eAAT,QAAgC,gBAAhC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD,CAHkB,CAIlB;AACA;;AACA,MAAIc,SAAS,GAAGT,OAAO,CAACU,GAAR,CAAY,WAAZ,CAAhB,CANkB,CAOlB;AACA;AACA;AACA;AACA;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,SAAS,KAAK,IAAlB,EAAwB;AACpB;AACA,UAAIN,IAAI,CAACQ,OAAL,CAAaC,MAAb,IAAuB,IAA3B,EAAiC;AAC7Bb,QAAAA,KAAK,CAACc,IAAN,CAAWhB,UAAU,GAAK,iBAA1B,EAA6CY,SAA7C,EACCK,IADD,CACMC,GAAG,IAAI;AACT,cAAGA,GAAG,CAACC,IAAJ,CAASJ,MAAT,GAAkB,CAArB,EAAwB;AACpB;AACAK,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACAD,YAAAA,GAAG,CAACC,IAAJ,CAASG,GAAT,CAAa,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACvBjB,cAAAA,OAAO,CAAEkB,SAAD,KAAgB,EAAC,GAAGA,SAAJ;AAAeX,gBAAAA,OAAO,EAAE;AAC5CY,kBAAAA,IAAI,EAAEH,CAAC,CAACI,MADoC;AAE5CC,kBAAAA,KAAK,EAAEL,CAAC,CAACM,OAFmC;AAG5CC,kBAAAA,KAAK,EAAEP,CAAC,CAACQ,OAHmC;AAI5CC,kBAAAA,OAAO,EAAET,CAAC,CAACU,SAJiC;AAK5CC,kBAAAA,MAAM,EAAEX,CAAC,CAACY,SALkC;AAM5CC,kBAAAA,KAAK,EAAEb,CAAC,CAACc,cANmC;AAO5CC,kBAAAA,IAAI,EAAEf,CAAC,CAACgB,MAPoC;AAQ5CC,kBAAAA,IAAI,EAAEjB,CAAC,CAACkB,MARoC;AAS5CC,kBAAAA,MAAM,EAAEnB,CAAC,CAACoB,QATkC;AAU5CC,kBAAAA,KAAK,EAAErB,CAAC,CAACsB,OAVmC;AAW5CC,kBAAAA,QAAQ,EAAEvB,CAAC,CAACwB,UAXgC;AAY5CC,kBAAAA,KAAK,EAAEzB,CAAC,CAAC0B,OAZmC;AAa5CC,kBAAAA,OAAO,EAAE3B,CAAC,CAAC4B,SAbiC;AAc5CC,kBAAAA,MAAM,EAAE7B,CAAC,CAAC8B,SAdkC;AAe5CC,kBAAAA,KAAK,EAAE/B,CAAC,CAACgC,cAfmC;AAgB5CC,kBAAAA,IAAI,EAAEjC,CAAC,CAACkC;AAhBoC;AAAxB,eAAhB,CAAD,CAAP;AAkBH,aAnBD,EAHoB,CAuBpB;;AACA9C,YAAAA,eAAe,CAAC,IAAD,CAAf;AACH;AACJ,SA5BD;AA6BH,OA9BD,MA8BO;AACHS,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ;AACJ,GArCQ,EAqCN,EArCM,CAAT;AAuCA,MAAIqC,WAAJ,EAAiBC,WAAjB,EAA8BC,OAA9B,EAAuCC,QAAvC;;AAEA,MAAInD,YAAJ,EAAkB;AACd,QAAIJ,IAAI,CAACQ,OAAL,CAAae,OAAb,IAAwB,IAA5B,EAAkC;AAC9B8B,MAAAA,WAAW,GAAG,cAAd;AACAE,MAAAA,QAAQ,GAAGvD,IAAI,CAACQ,OAAL,CAAa8B,KAAb,GAAqB,GAArB,GAA2BtC,IAAI,CAACQ,OAAL,CAAagC,QAAnD;AACAc,MAAAA,OAAO,GAAGtD,IAAI,CAACQ,OAAL,CAAaoC,OAAb,GAAuB,GAAvB,GAA6B5C,IAAI,CAACQ,OAAL,CAAasC,MAA1C,GAAmD,GAAnD,GAAyD9C,IAAI,CAACQ,OAAL,CAAawC,KAAhF;AACH,KAJD,MAIO;AACHK,MAAAA,WAAW,GAAG,SAAd;AACH;AACJ,GARD,MAQO;AACHD,IAAAA,WAAW,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ;AAKH;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDQ,MAAIC,WAAW,KAAK,cAApB,EAAoC;AAChCD,IAAAA,WAAW,GACP;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKG,QAAL,CAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAoCvD,IAAI,CAACwD,QAAL,CAAcH,WAAlD,CALJ,CADJ,EAQI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWrD,IAAI,CAACwD,QAAL,CAAcC,KAAzB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYzD,IAAI,CAACQ,OAAL,CAAaY,IAAzB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAUpB,IAAI,CAACQ,OAAL,CAAa8B,KAAvB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAActC,IAAI,CAACQ,OAAL,CAAagC,QAA3B,CAJJ,CAFJ,EAQI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIxC,IAAI,CAACQ,OAAL,CAAaoC,OAAjB,OAA2B5C,IAAI,CAACQ,OAAL,CAAakD,QAAxC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI1D,IAAI,CAACQ,OAAL,CAAa0C,IAAjB,OAAwBlD,IAAI,CAACQ,OAAL,CAAakC,KAArC,CAFJ,CAVJ,CARJ,CADJ;AA0BH;;AACD,MAAIW,WAAW,KAAK,SAApB,EAA+B;AAC3BD,IAAAA,WAAW,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAEL,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKpD,IAAI,CAACQ,OAAL,CAAaoC,OAFlB,CADJ;AAMH,CA7JD;;AA+JA,eAAe7C,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './Account.scss';\r\nimport { UserContext, ServerPath } from '../../containers/App';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\n\r\nconst Account = () => {\r\n    const [User, setUser] = useContext(UserContext);\r\n    const [AccountInfo, setAccountInfo] = useState([]);\r\n    const [AccountFound, setAccountFound] = useState(false);\r\n    //let UserId = Cookies.get('psid');\r\n    //let DecodedUserId = decodeURIComponent(UserId);\r\n    let SessionId = Cookies.get('pssession');\r\n    //let DecodedUserName = decodeURIComponent(UserName);\r\n    //const [UserData, setUserData] = useState({\r\n    //    id: DecodedUserId,\r\n    //    login: DecodedUserName\r\n    //});\r\n\r\n    useEffect(() => {\r\n        if (SessionId !== null) {\r\n            //console.log(User.accinfo.length);\r\n            if (User.accinfo.length == null) {\r\n                Axios.post(ServerPath   + 'UserAccount.php', SessionId)\r\n                .then(res => {\r\n                    if(res.data.length > 0) {\r\n                        //setAccountInfo(res.data);\r\n                        console.log(res.data);\r\n                        res.data.map((r, index) => {\r\n                            setUser((prevState) => ({...prevState, accinfo: {\r\n                                mail: r.u_mail,\r\n                                cname: r.cc_name,\r\n                                ccity: r.cc_city,\r\n                                cstreet: r.cc_street,\r\n                                chouse: r.cc_number,\r\n                                cflat: r.cc_number_flat,\r\n                                czip: r.cc_zip,\r\n                                cnip: r.cc_NIP,\r\n                                cregon: r.cc_REGON,\r\n                                iname: r.ci_name,\r\n                                isurname: r.ci_surname,\r\n                                icity: r.ci_city,\r\n                                istreet: r.ci_street,\r\n                                ihouse: r.ci_number,\r\n                                iflat: r.ci_number_flat,\r\n                                izip: r.ci_zip\r\n                            }}));\r\n                        })\r\n                        //console.log(res.data);\r\n                        setAccountFound(true);\r\n                    }\r\n                })\r\n            } else {\r\n                console.log(\"We still have it\");\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    let AccountData, AccountType, address, fullname;\r\n\r\n    if (AccountFound) {\r\n        if (User.accinfo.cc_name == null) {\r\n            AccountType = \"indywidualne\";\r\n            fullname = User.accinfo.iname + \" \" + User.accinfo.isurname;\r\n            address = User.accinfo.istreet + \" \" + User.accinfo.ihouse + \"/\" + User.accinfo.iflat;\r\n        } else {\r\n            AccountType = \"firmowe\";\r\n        }\r\n    } else {\r\n        AccountData = (\r\n            <div>\r\n                Brak danych\r\n            </div>\r\n        )\r\n    }\r\n/*\r\n    console.log(AccountFound);\r\n\r\n    let AccountData;\r\n\r\n    let AccountType;\r\n\r\n    if (AccountFound) {\r\n        AccountInfo.map((r, index) => {\r\n            console.log(r.cc_name);\r\n            if (r.cc_name == null) {\r\n                setUser({...User, userinfo: {\r\n                    AccountType: \"indywidualne\",\r\n                    login: r.u_login,\r\n                    mail: r.u_mail,\r\n                    name: r.ci_name,\r\n                    surname: r.ci_surname,\r\n                    fullname: r.ci_name + \" \" + r.ci_surname,\r\n                    street: r.ci_street,\r\n                    streetno: r.ci_number,\r\n                    flatno: r.ci_number_flat,\r\n                    city: r.ci_city,\r\n                    zip: r.ci_zip\r\n                }})\r\n\r\n            } else {\r\n                AccountType = \"firmowe\";\r\n                login = r.u_login;\r\n                mail = r.u_mail;\r\n                name = r.cc_name;\r\n                fullname = r.cc_name;\r\n                street = r.cc_street;\r\n                streetno = r.cc_number;\r\n                flatno = r.cc_number_flat\r\n                city = r.cc_city;\r\n                zip = r.cc_zip;\r\n                nip = r.cc_NIP;\r\n                regon = r.cc_REGON;\r\n            }\r\n            //key = {index};\r\n        })\r\n\r\n        if (flatno) {\r\n            address = streetno + \"/\" + flatno;\r\n        } else {\r\n            address = streetno;\r\n        }\r\n*/\r\n        if (AccountType === \"indywidualne\") {\r\n            AccountData = (\r\n                <div className=\"AccountData\">\r\n                    <div className=\"AccountNameContainer\">\r\n                        <div className=\"AccountName\">\r\n                            <FaRegUserCircle size={50}/>\r\n                            <h1>{fullname}</h1>\r\n                        </div>\r\n                        <div className=\"AccountType\">Konto {User.userinfo.AccountType}</div>\r\n                    </div>\r\n                    <div className=\"AccountInfo\">\r\n                        <h3>DANE OSOBOWE</h3>\r\n                        <div className=\"AccountData\">\r\n                            <p>Login: {User.userinfo.login}</p>\r\n                            <p>E-mail: {User.accinfo.mail}</p>\r\n                            <p>Imię: {User.accinfo.iname}</p>\r\n                            <p>Nazwisko: {User.accinfo.isurname}</p>\r\n                        </div>\r\n                        <hr className=\"separator\"/>\r\n                        <h3>ADRES</h3>\r\n                        <div>\r\n                            <p>{User.accinfo.istreet} {User.accinfo.iaddress}</p>\r\n                            <p>{User.accinfo.izip} {User.accinfo.icity}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        if (AccountType === \"firmowe\") {\r\n            AccountData = (\r\n                <div></div>\r\n            )\r\n        }\r\n\r\n    return(\r\n        <div className=\"SiteContainer\">\r\n            <TitleBar title=\"Dane konta\"/>\r\n            {User.accinfo.istreet}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account;"]},"metadata":{},"sourceType":"module"}