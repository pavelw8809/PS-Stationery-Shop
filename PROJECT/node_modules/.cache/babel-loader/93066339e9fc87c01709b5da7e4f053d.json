{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\CartItem\\\\CartItem.js\";\nimport React, { useState, useContext } from 'react';\nimport { CartContext, TotalContext } from '../../containers/App';\nimport './CartItem.scss';\nimport { TiDelete } from \"react-icons/ti\";\n\nconst increaseQuantity2 = (index, cartstate, totalstate, counter, totalprice) => {\n  let newState = [...cartstate];\n  newState[index].quantity = newState[index].quantity + 1;\n  newState[index].prodtotal = parseFloat(newState[index].prodtotal) + parseFloat(newState[index].price);\n  setCounter({\n    quantity: newCart[index].quantity\n  });\n  setTotalPrice({\n    totalprice: newCart[index].prodtotal\n  });\n  Total({\n    total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\n  });\n};\n\nconst CartItem = props => {\n  const [initCart, Cart] = useContext(CartContext); // stan globalny - stan koszyka\n\n  const [initTotal, Total] = useContext(TotalContext); // stan globalny - suma do zapłaty\n\n  const [counter, setCounter] = useState({\n    quantity: props.quantity\n  }); // stan lokalny - wyświetla ilość produktu\n\n  const [totalPrice, setTotalPrice] = useState({\n    totalprice: props.prodtotal\n  }); // stan lokalny - wyświetla sumę do zapłaty\n\n  const Image = require('../../images/images/' + props.imagename + '.png'); // Ścieżka do zdjęcia\n\n\n  let ProdImgStyle;\n  ProdImgStyle = {\n    // Stylizacja zdjęcia - zdjęcie jako tło karty\n    backgroundImage: \"url(\" + Image + \")\"\n  };\n\n  const increaseQuantity = index => {\n    let newCart = [...initCart];\n    newCart[index].quantity = newCart[index].quantity + 1;\n    newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\n    setCounter({\n      quantity: newCart[index].quantity\n    });\n    setTotalPrice({\n      totalprice: newCart[index].prodtotal\n    });\n    Total({\n      total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\n    });\n  };\n\n  const decreaseQuantity = index => {\n    if (counter.quantity > 1) {\n      let newCart = [...initCart];\n      newCart[index].quantity = newCart[index].quantity - 1;\n      newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\n      setCounter({\n        quantity: newCart[index].quantity\n      });\n      setTotalPrice({\n        totalprice: newCart[index].prodtotal\n      });\n      Total({\n        total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"CartItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CartItemImg\",\n    style: ProdImgStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CartItemContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"CartItemName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, props.name, \" - \", props.desc), React.createElement(\"div\", {\n    className: \"CartItemPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CartProdPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, parseFloat(props.price).toFixed(2)), React.createElement(\"div\", {\n    className: \"CartItemPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: increaseQuantity2.bind(this, props.id, initCart, [initTotal, Total], [counter, setCounter], [totalPrice, setTotalPrice]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"input\", {\n    className: \"CartqInput\",\n    type: \"text\",\n    value: counter.quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"qBtn\",\n    onClick: decreaseQuantity.bind(this, props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"-\")), React.createElement(\"div\", {\n    className: \"CartItemTotal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, parseFloat(totalPrice.totalprice).toFixed(2)))), React.createElement(\"button\", {\n    className: \"CartRemBtn\",\n    onClick: props.removeitem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(TiDelete, {\n    size: 30,\n    className: \"RemBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })));\n};\n\nexport default CartItem; //<img className=\"CartItemImg\" src={Image} alt=\"prodimg\"/>","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/CartItem/CartItem.js"],"names":["React","useState","useContext","CartContext","TotalContext","TiDelete","increaseQuantity2","index","cartstate","totalstate","counter","totalprice","newState","quantity","prodtotal","parseFloat","price","setCounter","newCart","setTotalPrice","Total","total","initTotal","CartItem","props","initCart","Cart","totalPrice","Image","require","imagename","ProdImgStyle","backgroundImage","increaseQuantity","decreaseQuantity","name","desc","toFixed","bind","id","removeitem"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { CartContext, TotalContext } from '../../containers/App';\r\nimport './CartItem.scss';\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\nconst increaseQuantity2 = (index, cartstate, totalstate, counter, totalprice) => {\r\n    let newState = [...cartstate];\r\n    newState[index].quantity = newState[index].quantity+1;\r\n    newState[index].prodtotal = parseFloat(newState[index].prodtotal) + parseFloat(newState[index].price);\r\n\r\n    setCounter({\r\n        quantity: newCart[index].quantity\r\n    })\r\n    setTotalPrice({\r\n        totalprice: newCart[index].prodtotal\r\n    })\r\n    Total({\r\n        total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\r\n    })\r\n}\r\n\r\nconst CartItem = (props) => {\r\n\r\n    const [initCart, Cart] = useContext(CartContext);                               // stan globalny - stan koszyka\r\n    const [initTotal, Total] = useContext(TotalContext);                            // stan globalny - suma do zapłaty\r\n    const [counter, setCounter] = useState({quantity: props.quantity})              // stan lokalny - wyświetla ilość produktu\r\n    const [totalPrice, setTotalPrice] = useState({totalprice: props.prodtotal})     // stan lokalny - wyświetla sumę do zapłaty\r\n\r\n    const Image = require('../../images/images/' + props.imagename + '.png');       // Ścieżka do zdjęcia\r\n\r\n    let ProdImgStyle;\r\n    ProdImgStyle = {                                                                // Stylizacja zdjęcia - zdjęcie jako tło karty\r\n        backgroundImage: \"url(\" + Image + \")\"\r\n    }\r\n\r\n\r\n\r\n    const increaseQuantity = (index) => {\r\n        let newCart = [...initCart];\r\n        newCart[index].quantity = newCart[index].quantity+1;\r\n        newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) + parseFloat(newCart[index].price);\r\n        \r\n        setCounter({\r\n            quantity: newCart[index].quantity\r\n        })\r\n        setTotalPrice({\r\n            totalprice: newCart[index].prodtotal\r\n        })\r\n        Total({\r\n            total: parseFloat(initTotal.total) + parseFloat(newCart[index].price)\r\n        })\r\n    }\r\n\r\n    const decreaseQuantity = (index) => {\r\n        if (counter.quantity > 1) {\r\n            let newCart = [...initCart];\r\n            newCart[index].quantity = newCart[index].quantity-1;\r\n            newCart[index].prodtotal = parseFloat(newCart[index].prodtotal) - parseFloat(newCart[index].price);\r\n\r\n            setCounter({\r\n                quantity: newCart[index].quantity\r\n            })\r\n            setTotalPrice({\r\n                totalprice: newCart[index].prodtotal\r\n            })\r\n            Total({\r\n                total: parseFloat(initTotal.total) - parseFloat(newCart[index].price)\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"CartItem\">\r\n            <div className=\"CartItemImg\" style={ProdImgStyle}></div>\r\n            <div className=\"CartItemContainer\">\r\n                <h4 className=\"CartItemName\">{props.name} - {props.desc}</h4>\r\n                <div className=\"CartItemPrice\">\r\n                    <div className=\"CartProdPrice\">{parseFloat(props.price).toFixed(2)}</div>\r\n                    <div className=\"CartItemPanel\">\r\n                        <button className=\"qBtn\" onClick={increaseQuantity2.bind(this, props.id, initCart, [initTotal, Total], [counter, setCounter], [totalPrice, setTotalPrice])}>+</button>\r\n                        <input className=\"CartqInput\" type=\"text\" value={counter.quantity}/>\r\n                        <button className=\"qBtn\" onClick={decreaseQuantity.bind(this, props.id)}>-</button>\r\n                    </div>\r\n                    <div className=\"CartItemTotal\">\r\n                        {parseFloat(totalPrice.totalprice).toFixed(2)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className=\"CartRemBtn\" onClick={props.removeitem}><TiDelete size={30} className=\"RemBtn\"/></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n\r\n//<img className=\"CartItemImg\" src={Image} alt=\"prodimg\"/>\r\n"]},"metadata":{},"sourceType":"module"}