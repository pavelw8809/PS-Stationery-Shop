{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\components\\\\UserBtn\\\\UserBtn.js\";\nimport React, { useContext, useState } from 'react';\nimport './UserBtn.scss';\nimport Login from '../Login/Login';\nimport Account from '../AccountMenu/AccountMenu';\nimport { UserContext } from '../../containers/App';\n\nconst UserBtn = props => {\n  const [User, setUser] = useContext(UserContext);\n  const [LogShow, setLogShow] = useState(false);\n  const [AccShow, setAccShow] = useState(false); // Login pop-up (if user is not logged in)\n\n  let LoginW;\n\n  const loginWindow = () => {\n    setLogShow(!LogShow);\n  };\n\n  if (LogShow) {\n    LoginW = \"LoginW\";\n  } else {\n    LoginW = \"LoginW hidden\";\n  } // Acount menu (if user is logged in)\n\n\n  let AccountMenu;\n\n  const accountM = () => {\n    setAccShow(!AccShow);\n  };\n\n  if (AccShow) {\n    AccountM = \"AccountM\";\n  } else {\n    AccountM = \"AccountM hidden\";\n  } // Checking if user is logged in\n\n\n  let UserInfoBtn;\n\n  if (!User.login) {\n    UserInfoBtn = React.createElement(\"button\", {\n      className: \"LogBtn\",\n      onClick: loginWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"ZALOGUJ\");\n  } else {\n    UserInfoBtn = React.createElement(\"button\", {\n      className: \"LogBtn\",\n      onClick: accountMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, User.login);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"UserBtnContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: LoginW,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: AccountM,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Account, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), UserInfoBtn);\n};\n\nexport default UserBtn;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/components/UserBtn/UserBtn.js"],"names":["React","useContext","useState","Login","Account","UserContext","UserBtn","props","User","setUser","LogShow","setLogShow","AccShow","setAccShow","LoginW","loginWindow","AccountMenu","accountM","AccountM","UserInfoBtn","login","accountMenu"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,UAAU,CAACI,WAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC,CAJuB,CAMvB;;AAEA,MAAIY,MAAJ;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtBJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAFD;;AAIA,MAAIA,OAAJ,EAAa;AACTI,IAAAA,MAAM,GAAG,QAAT;AACH,GAFD,MAEO;AACHA,IAAAA,MAAM,GAAG,eAAT;AACH,GAlBsB,CAoBvB;;;AAEA,MAAIE,WAAJ;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACnBJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAFD;;AAIA,MAAIA,OAAJ,EAAa;AACTM,IAAAA,QAAQ,GAAG,UAAX;AACH,GAFD,MAEO;AACHA,IAAAA,QAAQ,GAAG,iBAAX;AACH,GAhCsB,CAoCvB;;;AAEA,MAAIC,WAAJ;;AAEA,MAAI,CAACX,IAAI,CAACY,KAAV,EAAiB;AACbD,IAAAA,WAAW,GAAG;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEJ,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAd;AACH,GAFD,MAEO;AACHI,IAAAA,WAAW,GAAG;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEE,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkDb,IAAI,CAACY,KAAvD,CAAd;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEN,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAEI,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAOKC,WAPL,CADJ;AAYH,CA1DD;;AA4DA,eAAeb,OAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport './UserBtn.scss';\r\nimport Login from '../Login/Login';\r\nimport Account from '../AccountMenu/AccountMenu';\r\nimport { UserContext } from '../../containers/App';\r\n\r\nconst UserBtn = (props) => {\r\n\r\n    const [User, setUser] = useContext(UserContext);\r\n    const [LogShow, setLogShow] = useState(false);\r\n    const [AccShow, setAccShow] = useState(false);\r\n\r\n    // Login pop-up (if user is not logged in)\r\n\r\n    let LoginW;\r\n\r\n    const loginWindow = () => {\r\n        setLogShow(!LogShow);\r\n    }\r\n\r\n    if (LogShow) {\r\n        LoginW = \"LoginW\"\r\n    } else {\r\n        LoginW = \"LoginW hidden\"\r\n    }\r\n\r\n    // Acount menu (if user is logged in)\r\n\r\n    let AccountMenu;\r\n\r\n    const accountM = () => {\r\n        setAccShow(!AccShow)\r\n    }\r\n\r\n    if (AccShow) {\r\n        AccountM = \"AccountM\";\r\n    } else {\r\n        AccountM = \"AccountM hidden\";\r\n    }\r\n\r\n    \r\n\r\n    // Checking if user is logged in\r\n\r\n    let UserInfoBtn;\r\n\r\n    if (!User.login) {\r\n        UserInfoBtn = <button className=\"LogBtn\" onClick={loginWindow}>ZALOGUJ</button>\r\n    } else {\r\n        UserInfoBtn = <button className=\"LogBtn\" onClick={accountMenu}>{User.login}</button>\r\n    }\r\n\r\n    return(\r\n        <div className=\"UserBtnContainer\">\r\n            <div className={LoginW}>\r\n                <Login/>\r\n            </div>\r\n            <div className={AccountM}>\r\n                <Account/>\r\n            </div>\r\n            {UserInfoBtn}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserBtn;"]},"metadata":{},"sourceType":"module"}