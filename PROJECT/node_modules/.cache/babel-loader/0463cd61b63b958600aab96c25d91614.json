{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\Account\\\\Account.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Account.scss';\nimport { UserContext, ServerPath } from '../../containers/App';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { FaRegUserCircle } from 'react-icons/fa';\n\nconst Account = () => {\n  const [User, setUser] = useContext(UserContext);\n  const [AccountInfo, setAccountInfo] = useState([]);\n  const [AccountFound, setAccountFound] = useState(false); //let UserId = Cookies.get('psid');\n  //let DecodedUserId = decodeURIComponent(UserId);\n\n  let SessionId = Cookies.get('pssession'); //let DecodedUserName = decodeURIComponent(UserName);\n  //const [UserData, setUserData] = useState({\n  //    id: DecodedUserId,\n  //    login: DecodedUserName\n  //});\n\n  useEffect(() => {\n    if (DecodedUserId !== \"undefined\") {\n      Axios.post(ServerPath + 'UserAccount.php', UserData).then(res => {\n        setAccountInfo(res.data);\n        console.log(res.data);\n        setAccountFound(true);\n      });\n    }\n  }, []);\n  let AccountData;\n  let name, surname, fullname, street, streetno, city, zip, nip, regon;\n  let AccountType;\n  /*\r\n      if (AccountFound) {\r\n          AccountInfo.map((r, index) => {\r\n              console.log(r.cc_name);\r\n              if (r.cc_name == null) {\r\n                  AccountType = \"indywidualne\";\r\n                  name = r.ci_name;\r\n                  surname = r.ci_surname;\r\n                  fullname = r.ci_name + \" \" + r.ci_surname\r\n                  street = r.ci_street;\r\n                  streetno = r.ci_number;\r\n                  city = r.ci_city;\r\n                  zip = r.ci_zip;\r\n              } else {\r\n                  AccountType = \"firmowe\"\r\n                  name = r.cc_name;\r\n                  fullname = r.cc_name;\r\n                  street = r.cc_street;\r\n                  streetno = r.cc_number;\r\n                  city = r.cc_city;\r\n                  zip = r.cc_zip;\r\n                  nip = r.cc_NIP;\r\n                  regon = r.cc_REGON;\r\n              }\r\n              //key = {index};\r\n          })\r\n          if (AccountType === \"indywidualne\") {\r\n              AccountData = (\r\n                  <div className=\"AccountData\">\r\n                      <div className=\"AccountNameContainer\">\r\n                          <div className=\"AccountName\">\r\n                              <FaRegUserCircle size={50}/>\r\n                              <h1>{fullname}</h1>\r\n                          </div>\r\n                          <div className=\"AccountType\">Konto {AccountType}</div>\r\n                      </div>\r\n                      <div className=\"AccountInfo\">\r\n                          <h3>DANE OSOBOWE</h3>\r\n                          <p>Login: {UserData.login}</p>\r\n                          <p>E-mail: </p>\r\n                          <p>Imię: {name}</p>\r\n                          <p>Nazwisko: {surname}</p>\r\n                          <hr className=\"separator\"/>\r\n                          <h3>ADRES</h3>\r\n                          <p>Ulica: </p>\r\n                      </div>\r\n                  </div>\r\n              )\r\n          }\r\n      } else {\r\n          AccountData = <p>Brak danych</p>\r\n      }\r\n  \r\n  \r\n      return(\r\n          <div className=\"SiteContainer\">\r\n              <TitleBar title=\"Dane konta\"/>\r\n              {AccountData}\r\n          </div>\r\n      )\r\n      */\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  });\n};\n\nexport default Account;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/Account/Account.js"],"names":["React","useContext","useEffect","useState","UserContext","ServerPath","TitleBar","Axios","Cookies","FaRegUserCircle","Account","User","setUser","AccountInfo","setAccountInfo","AccountFound","setAccountFound","SessionId","get","DecodedUserId","post","UserData","then","res","data","console","log","AccountData","name","surname","fullname","street","streetno","city","zip","nip","regon","AccountType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,gBAAP;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,sBAAxC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,eAAT,QAAgC,gBAAhC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD,CAHkB,CAIlB;AACA;;AACA,MAAIc,SAAS,GAAGT,OAAO,CAACU,GAAR,CAAY,WAAZ,CAAhB,CANkB,CAOlB;AACA;AACA;AACA;AACA;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,aAAa,KAAK,WAAtB,EAAmC;AAC/BZ,MAAAA,KAAK,CAACa,IAAN,CAAWf,UAAU,GAAK,iBAA1B,EAA6CgB,QAA7C,EACCC,IADD,CACMC,GAAG,IAAI;AACTT,QAAAA,cAAc,CAACS,GAAG,CAACC,IAAL,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACAR,QAAAA,eAAe,CAAC,IAAD,CAAf;AACH,OALD;AAMH;AACJ,GATQ,EASN,EATM,CAAT;AAWA,MAAIW,WAAJ;AACA,MAAIC,IAAJ,EAAUC,OAAV,EAAmBC,QAAnB,EAA6BC,MAA7B,EAAqCC,QAArC,EAA+CC,IAA/C,EAAqDC,GAArD,EAA0DC,GAA1D,EAA+DC,KAA/D;AACA,MAAIC,WAAJ;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DG,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACF,CAzFD;;AA2FA,eAAe3B,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './Account.scss';\r\nimport { UserContext, ServerPath } from '../../containers/App';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\n\r\nconst Account = () => {\r\n    const [User, setUser] = useContext(UserContext);\r\n    const [AccountInfo, setAccountInfo] = useState([]);\r\n    const [AccountFound, setAccountFound] = useState(false);\r\n    //let UserId = Cookies.get('psid');\r\n    //let DecodedUserId = decodeURIComponent(UserId);\r\n    let SessionId = Cookies.get('pssession');\r\n    //let DecodedUserName = decodeURIComponent(UserName);\r\n    //const [UserData, setUserData] = useState({\r\n    //    id: DecodedUserId,\r\n    //    login: DecodedUserName\r\n    //});\r\n\r\n    useEffect(() => {\r\n        if (DecodedUserId !== \"undefined\") {\r\n            Axios.post(ServerPath   + 'UserAccount.php', UserData)\r\n            .then(res => {\r\n                setAccountInfo(res.data);\r\n                console.log(res.data);\r\n                setAccountFound(true);\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    let AccountData;\r\n    let name, surname, fullname, street, streetno, city, zip, nip, regon;\r\n    let AccountType;\r\n/*\r\n    if (AccountFound) {\r\n        AccountInfo.map((r, index) => {\r\n            console.log(r.cc_name);\r\n            if (r.cc_name == null) {\r\n                AccountType = \"indywidualne\";\r\n                name = r.ci_name;\r\n                surname = r.ci_surname;\r\n                fullname = r.ci_name + \" \" + r.ci_surname\r\n                street = r.ci_street;\r\n                streetno = r.ci_number;\r\n                city = r.ci_city;\r\n                zip = r.ci_zip;\r\n            } else {\r\n                AccountType = \"firmowe\"\r\n                name = r.cc_name;\r\n                fullname = r.cc_name;\r\n                street = r.cc_street;\r\n                streetno = r.cc_number;\r\n                city = r.cc_city;\r\n                zip = r.cc_zip;\r\n                nip = r.cc_NIP;\r\n                regon = r.cc_REGON;\r\n            }\r\n            //key = {index};\r\n        })\r\n        if (AccountType === \"indywidualne\") {\r\n            AccountData = (\r\n                <div className=\"AccountData\">\r\n                    <div className=\"AccountNameContainer\">\r\n                        <div className=\"AccountName\">\r\n                            <FaRegUserCircle size={50}/>\r\n                            <h1>{fullname}</h1>\r\n                        </div>\r\n                        <div className=\"AccountType\">Konto {AccountType}</div>\r\n                    </div>\r\n                    <div className=\"AccountInfo\">\r\n                        <h3>DANE OSOBOWE</h3>\r\n                        <p>Login: {UserData.login}</p>\r\n                        <p>E-mail: </p>\r\n                        <p>Imię: {name}</p>\r\n                        <p>Nazwisko: {surname}</p>\r\n                        <hr className=\"separator\"/>\r\n                        <h3>ADRES</h3>\r\n                        <p>Ulica: </p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    } else {\r\n        AccountData = <p>Brak danych</p>\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"SiteContainer\">\r\n            <TitleBar title=\"Dane konta\"/>\r\n            {AccountData}\r\n        </div>\r\n    )\r\n    */\r\n   return(<div></div>)\r\n}\r\n\r\nexport default Account;"]},"metadata":{},"sourceType":"module"}