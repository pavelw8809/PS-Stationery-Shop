{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\Account\\\\Account.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Account.scss';\nimport { UserContext, ServerPath } from '../../containers/App';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { FaRegUserCircle } from 'react-icons/fa';\nimport ShowAccountData from '../../components/ShowAccountData/ShowAccountData';\nimport EditAccountData from '../../components/EditAccountData/EditAccountData';\n\nconst Account = () => {\n  const [User, setUser] = useContext(UserContext);\n  const [AccountInfo, setAccountInfo] = useState([]);\n  const [AccountFound, setAccountFound] = useState(false);\n  const [UserLogged, setUserLogged] = useState(false);\n  const [TabDisp, setTabDisp] = useState({\n    accshow: true,\n    accedit: false,\n    accpass: false\n  });\n  const [FormData, setFormData] = useState();\n  const [IsError, setIsError] = useState(false);\n  const [ErrorInfo, setErrorInfo] = useState([]); //let UserId = Cookies.get('psid');\n  //let DecodedUserId = decodeURIComponent(UserId);\n\n  let SessionId = Cookies.get('pssession');\n  let ExtSession = Cookies.get('psacc'); //let DecodedUserName = decodeURIComponent(UserName);\n  //const [UserData, setUserData] = useState({\n  //    id: DecodedUserId,\n  //    login: DecodedUserName\n  //});\n\n  let History = useHistory();\n  console.log(ExtSession);\n  useEffect(() => {\n    if (!ExtSession) {\n      History.push('/extlogin');\n    } else {\n      if (SessionId !== null) {\n        console.log(User.accinfo);\n\n        if (!User.acccontrol) {\n          console.log(\"loading...\");\n          Axios.post(ServerPath + 'UserAccount.php', ExtSession).then(res => {\n            console.log(res.data);\n\n            if (res.data.length > 0) {\n              //setAccountInfo(res.data);\n              res.data.map((r, index) => {\n                let zipA, zipB;\n\n                if (r.ci_zip !== null) {\n                  zipA = r.ci_zip.substring(0, 2);\n                  zipB = r.ci_zip.substring(3, 6);\n                }\n\n                if (r.cc_zip !== null) {\n                  zipA = r.cc_zip.substring(0, 2);\n                  zipB = r.cc_zip.substring(3, 6);\n                }\n\n                setUser(prevState => ({ ...prevState,\n                  accinfo: {\n                    mail: r.u_mail,\n                    cname: r.cc_name,\n                    ccity: r.cc_city,\n                    cstreet: r.cc_street,\n                    chouse: r.cc_number,\n                    cflat: r.cc_number_flat,\n                    czip: r.cc_zip,\n                    cnip: r.cc_NIP,\n                    cregon: r.cc_REGON,\n                    iname: r.ci_name,\n                    isurname: r.ci_surname,\n                    icity: r.ci_city,\n                    istreet: r.ci_street,\n                    ihouse: r.ci_number,\n                    iflat: r.ci_number_flat,\n                    izip: r.ci_zip\n                  },\n                  acccontrol: true\n                }));\n                setFormData(prevState => ({ ...prevState,\n                  mail: r.u_mail,\n                  cname: r.cc_name,\n                  ccity: r.cc_city,\n                  cstreet: r.cc_street,\n                  chouse: r.cc_number,\n                  cflat: r.cc_number_flat,\n                  czip: r.cc_zip,\n                  cnip: r.cc_NIP,\n                  cregon: r.cc_REGON,\n                  iname: r.ci_name,\n                  isurname: r.ci_surname,\n                  icity: r.ci_city,\n                  istreet: r.ci_street,\n                  ihouse: r.ci_number,\n                  iflat: r.ci_number_flat,\n                  izip: r.ci_zip,\n                  zip1: zipA,\n                  zip2: zipB //zip2: r.ci_zip.substring(3,6)\n\n                }));\n              }); //console.log(res.data);\n\n              setAccountFound(true);\n            }\n          });\n        } else {\n          console.log(\"We still have it\");\n          setAccountFound(true);\n        }\n      }\n    }\n  }, []);\n  let AccountData, AccFormData, AccountType, address, fullname, zip1, zip2;\n  let ACStyle, EAStyle, CPStyle; //ACStyle = {display: 'block'};\n\n  EAStyle = {\n    display: 'none'\n  };\n  CPStyle = {\n    display: 'none'\n  };\n\n  if (TabDisp.accshow) {\n    ACStyle = {\n      display: 'block'\n    };\n    EAStyle = {\n      display: 'none'\n    };\n    CPStyle = {\n      display: 'none'\n    };\n  }\n\n  if (TabDisp.accedit) {\n    ACStyle = {\n      display: 'none'\n    };\n    EAStyle = {\n      display: 'block'\n    };\n    CPStyle = {\n      display: 'none'\n    };\n  }\n\n  const changeTab = option => {\n    if (option === 0) {\n      setTabDisp({ ...TabDisp,\n        accshow: false,\n        accedit: true,\n        accpass: false\n      });\n    }\n\n    if (option === 1) {\n      setTabDisp({ ...TabDisp,\n        accshow: false,\n        accedit: false,\n        accpass: true\n      });\n    }\n\n    if (option === 2) {\n      setTabDisp({ ...TabDisp,\n        accshow: true,\n        accedit: false,\n        accpass: false\n      });\n    }\n  };\n\n  const handleFormData = (data, event) => {\n    switch (data) {\n      case \"LOG\":\n        setFormData({ ...FormData,\n          login: event.target.value\n        });\n        break;\n\n      case \"CNM\":\n        setFormData({ ...FormData,\n          cname: event.target.value\n        });\n        break;\n\n      case \"CST\":\n        setFormData({ ...FormData,\n          cstreet: event.target.value\n        });\n        break;\n\n      case \"CCT\":\n        setFormData({ ...FormData,\n          ccity: event.target.value\n        });\n        break;\n\n      case \"CHO\":\n        setFormData({ ...FormData,\n          chouse: event.target.value\n        });\n        break;\n\n      case \"CFL\":\n        setFormData({ ...FormData,\n          cflat: event.target.value\n        });\n        break;\n      //case \"CZP\": setFormData({...FormData, czip: event.target.value}); break;\n\n      case \"CNP\":\n        setFormData({ ...FormData,\n          cnip: event.target.value\n        });\n        break;\n\n      case \"CRG\":\n        setFormData({ ...FormData,\n          cregon: event.target.value\n        });\n        break;\n\n      case \"INM\":\n        setFormData({ ...FormData,\n          iname: event.target.value\n        });\n        break;\n\n      case \"ISN\":\n        setFormData({ ...FormData,\n          isurname: event.target.value\n        });\n        break;\n\n      case \"ICT\":\n        setFormData({ ...FormData,\n          icity: event.target.value\n        });\n        break;\n\n      case \"IST\":\n        setFormData({ ...FormData,\n          istreet: event.target.value\n        });\n        break;\n\n      case \"IHO\":\n        setFormData({ ...FormData,\n          ihouse: event.target.value\n        });\n        break;\n\n      case \"IFL\":\n        setFormData({ ...FormData,\n          iflat: event.target.value\n        });\n        break;\n\n      case \"ZP1\":\n        setFormData({ ...FormData,\n          zip1: event.target.value\n        });\n        break;\n\n      case \"ZP2\":\n        setFormData({ ...FormData,\n          zip2: event.target.value\n        });\n        break;\n    }\n\n    console.log(FormData);\n  };\n\n  const changeAccountData = () => {\n    let valid = 0;\n    let info1 = 'BŁĄD: Kod pocztowy powinien zawierać tylko cyfry';\n    let info2 = 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry';\n\n    if (isNaN(FormData.zip1)) {\n      if (!ErrorInfo.includes(info1)) {\n        setErrorInfo([...ErrorInfo, \"BŁĄD: Kod pocztowy powinien zawierać tylko cyfry\"]); //console.log(FormData.zip1);\n\n        valid++;\n      }\n    }\n\n    if (isNaN(FormData.cregon) && FormData.cregon !== null) {\n      if (!ErrorInfo.includes(info2)) {\n        setErrorInfo([...ErrorInfo, 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry']);\n        valid++;\n      }\n    }\n\n    if (valid > 0) {\n      setIsError(true);\n    } else {\n      Axios.post(ServerPath + \"editaccount.php\", FormData).then(res => {\n        console.log(res.data);\n      });\n    }\n  };\n\n  if (AccountFound) {\n    if (User.accinfo.cname === null) {\n      AccountType = \"indywidualne\";\n      fullname = User.accinfo.iname + \" \" + User.accinfo.isurname;\n      address = User.accinfo.istreet + \" \" + User.accinfo.ihouse + \"/\" + User.accinfo.iflat; //zip1 = User.accinfo.izip.substring(0,2);\n      //zip2 = User.accinfo.izip.substring(3,6);\n    } else {\n      AccountType = \"firmowe\";\n      fullname = User.accinfo.cname;\n      address = User.accinfo.cstreet + \" \" + User.accinfo.chouse + \"/\" + User.accinfo.cflat; //zip1 = User.accinfo.czip.substring(0,2);\n      //zip2 = User.accinfo.czip.substring(3,6);\n    }\n\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountData\",\n      style: ACStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountNameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(FaRegUserCircle, {\n      size: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, fullname)), React.createElement(\"div\", {\n      className: \"AccountType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Konto \", AccountType)), React.createElement(ShowAccountData, {\n      login: User.userinfo.login,\n      mail: User.accinfo.mail,\n      iname: User.accinfo.iname,\n      isurname: User.accinfo.isurname,\n      address: address,\n      izip: User.accinfo.izip,\n      icity: User.accinfo.icity,\n      cname: User.accinfo.cname,\n      cnip: User.accinfo.cnip,\n      cregon: User.accinfo.cregon,\n      czip: User.accinfo.czip,\n      ccity: User.accinfo.ccity,\n      changetab: changeTab.bind(this, 0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"AccountData\",\n      style: EAStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountNameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(FaRegUserCircle, {\n      size: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, fullname)), React.createElement(\"div\", {\n      className: \"AccountType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Konto \", AccountType)), React.createElement(EditAccountData, {\n      login: User.userinfo.login,\n      mail: User.accinfo.mail,\n      iname: User.accinfo.iname,\n      isurname: User.accinfo.isurname //address={address}\n      ,\n      istreet: User.accinfo.istreet,\n      ihouse: User.accinfo.ihouse,\n      iflat: User.accinfo.iflat,\n      izip1: zip1,\n      izip2: zip2,\n      icity: User.accinfo.icity,\n      cname: User.accinfo.cname,\n      cnip: User.accinfo.cnip,\n      cregon: User.accinfo.cregon,\n      czip1: zip1,\n      czip2: zip2,\n      ccity: User.accinfo.ccity,\n      cstreet: User.accinfo.cstreet,\n      chouse: User.accinfo.chouse,\n      cflat: User.accinfo.cflat,\n      changetab: changeTab,\n      submitdatachange: changeAccountData,\n      iserror: IsError,\n      errorinfo: ErrorInfo,\n      log: handleFormData.bind(this, \"LOG\"),\n      cnm: handleFormData.bind(this, \"CNM\"),\n      cst: handleFormData.bind(this, \"CST\"),\n      cct: handleFormData.bind(this, \"CCT\"),\n      cho: handleFormData.bind(this, \"CHO\"),\n      cfl: handleFormData.bind(this, \"CFL\"),\n      czp: handleFormData.bind(this, \"CZP\"),\n      cnp: handleFormData.bind(this, \"CNP\"),\n      crg: handleFormData.bind(this, \"CRG\"),\n      inm: handleFormData.bind(this, \"INM\"),\n      isn: handleFormData.bind(this, \"ISN\"),\n      ict: handleFormData.bind(this, \"ICT\"),\n      ist: handleFormData.bind(this, \"IST\"),\n      iho: handleFormData.bind(this, \"IHO\"),\n      ifl: handleFormData.bind(this, \"IFL\"),\n      zp1: handleFormData.bind(this, \"ZP1\"),\n      zp2: handleFormData.bind(this, \"ZP2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })));\n  } else if (!UserLogged) {\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Nie wykryto zalogowanego usera.\");\n  } else {\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Brak danych\");\n  }\n\n  console.log(FormData);\n  return React.createElement(\"div\", {\n    className: \"SiteContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: \"Konto u\\u017Cytkownika\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }), AccountData);\n};\n\nexport default Account; //<NavLink to=\"/accountedit\"><button>EDYCJA KONTA</button></NavLink>\n//<NavLink to=\"/myorders\"><button>MOJE ZAMÓWIENIA</button></NavLink>\n//<NavLink to=\"/myorders\"><button>ZMIEŃ HASŁO</button></NavLink>","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/Account/Account.js"],"names":["React","useContext","useEffect","useState","UserContext","ServerPath","useHistory","NavLink","TitleBar","Axios","Cookies","FaRegUserCircle","ShowAccountData","EditAccountData","Account","User","setUser","AccountInfo","setAccountInfo","AccountFound","setAccountFound","UserLogged","setUserLogged","TabDisp","setTabDisp","accshow","accedit","accpass","FormData","setFormData","IsError","setIsError","ErrorInfo","setErrorInfo","SessionId","get","ExtSession","History","console","log","push","accinfo","acccontrol","post","then","res","data","length","map","r","index","zipA","zipB","ci_zip","substring","cc_zip","prevState","mail","u_mail","cname","cc_name","ccity","cc_city","cstreet","cc_street","chouse","cc_number","cflat","cc_number_flat","czip","cnip","cc_NIP","cregon","cc_REGON","iname","ci_name","isurname","ci_surname","icity","ci_city","istreet","ci_street","ihouse","ci_number","iflat","ci_number_flat","izip","zip1","zip2","AccountData","AccFormData","AccountType","address","fullname","ACStyle","EAStyle","CPStyle","display","changeTab","option","handleFormData","event","login","target","value","changeAccountData","valid","info1","info2","isNaN","includes","userinfo","bind"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './Account.scss';\r\nimport { UserContext, ServerPath } from '../../containers/App';\r\nimport { useHistory, NavLink } from 'react-router-dom';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\nimport ShowAccountData from '../../components/ShowAccountData/ShowAccountData';\r\nimport EditAccountData from '../../components/EditAccountData/EditAccountData';\r\n\r\nconst Account = () => {\r\n    const [User, setUser] = useContext(UserContext);\r\n    const [AccountInfo, setAccountInfo] = useState([]);\r\n    const [AccountFound, setAccountFound] = useState(false);\r\n    const [UserLogged, setUserLogged] = useState(false);\r\n    const [TabDisp, setTabDisp] = useState({accshow: true, accedit: false, accpass: false})\r\n    const [FormData, setFormData] = useState();\r\n    const [IsError, setIsError] = useState(false);\r\n    const [ErrorInfo, setErrorInfo] = useState([]);\r\n    //let UserId = Cookies.get('psid');\r\n    //let DecodedUserId = decodeURIComponent(UserId);\r\n    let SessionId = Cookies.get('pssession');\r\n    let ExtSession = Cookies.get('psacc');\r\n    //let DecodedUserName = decodeURIComponent(UserName);\r\n    //const [UserData, setUserData] = useState({\r\n    //    id: DecodedUserId,\r\n    //    login: DecodedUserName\r\n    //});\r\n    let History = useHistory();\r\n\r\n    console.log(ExtSession);\r\n\r\n    useEffect(() => {\r\n        if (!ExtSession) {\r\n            History.push('/extlogin');\r\n        } else {\r\n            if (SessionId !== null) {\r\n                console.log(User.accinfo);\r\n                if (!User.acccontrol) {\r\n                    \r\n                    console.log(\"loading...\");\r\n                    Axios.post(ServerPath   + 'UserAccount.php', ExtSession)\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                        if(res.data.length > 0) {\r\n                            //setAccountInfo(res.data);\r\n                            \r\n                            res.data.map((r, index) => {\r\n                                let zipA, zipB;\r\n                                if (r.ci_zip !== null) {\r\n                                    zipA = r.ci_zip.substring(0,2);\r\n                                    zipB = r.ci_zip.substring(3,6);\r\n                                }\r\n                                if (r.cc_zip !== null) {\r\n                                    zipA = r.cc_zip.substring(0,2)\r\n                                    zipB = r.cc_zip.substring(3,6);\r\n                                }\r\n                                setUser((prevState) => ({...prevState, accinfo: {\r\n                                    mail: r.u_mail,\r\n                                    cname: r.cc_name,\r\n                                    ccity: r.cc_city,\r\n                                    cstreet: r.cc_street,\r\n                                    chouse: r.cc_number,\r\n                                    cflat: r.cc_number_flat,\r\n                                    czip: r.cc_zip,\r\n                                    cnip: r.cc_NIP,\r\n                                    cregon: r.cc_REGON,\r\n                                    iname: r.ci_name,\r\n                                    isurname: r.ci_surname,\r\n                                    icity: r.ci_city,\r\n                                    istreet: r.ci_street,\r\n                                    ihouse: r.ci_number,\r\n                                    iflat: r.ci_number_flat,\r\n                                    izip: r.ci_zip\r\n                                },\r\n                                    acccontrol: true\r\n                                }));\r\n                                \r\n                                setFormData((prevState) => ({...prevState, \r\n                                    mail: r.u_mail,\r\n                                    cname: r.cc_name,\r\n                                    ccity: r.cc_city,\r\n                                    cstreet: r.cc_street,\r\n                                    chouse: r.cc_number,\r\n                                    cflat: r.cc_number_flat,\r\n                                    czip: r.cc_zip,\r\n                                    cnip: r.cc_NIP,\r\n                                    cregon: r.cc_REGON,\r\n                                    iname: r.ci_name,\r\n                                    isurname: r.ci_surname,\r\n                                    icity: r.ci_city,\r\n                                    istreet: r.ci_street,\r\n                                    ihouse: r.ci_number,\r\n                                    iflat: r.ci_number_flat,\r\n                                    izip: r.ci_zip,\r\n                                    zip1: zipA,\r\n                                    zip2: zipB\r\n                                    //zip2: r.ci_zip.substring(3,6)\r\n                                ,\r\n                                }));\r\n                            })\r\n                            //console.log(res.data);\r\n                            setAccountFound(true);\r\n                        }\r\n                    })\r\n                } else {\r\n                    console.log(\"We still have it\");\r\n                    setAccountFound(true);\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    let AccountData, AccFormData, AccountType, address, fullname, zip1, zip2;\r\n\r\n    let ACStyle, EAStyle, CPStyle;\r\n    //ACStyle = {display: 'block'};\r\n    EAStyle = {display: 'none'};\r\n    CPStyle = {display: 'none'};\r\n\r\n    if (TabDisp.accshow) {\r\n        ACStyle = {display: 'block'};\r\n        EAStyle = {display: 'none'};\r\n        CPStyle = {display: 'none'};\r\n    }\r\n    if (TabDisp.accedit) {\r\n        ACStyle = {display: 'none'};\r\n        EAStyle = {display: 'block'};\r\n        CPStyle = {display: 'none'};\r\n    }\r\n\r\n    const changeTab = (option) => {\r\n        if (option === 0) {\r\n            setTabDisp({...TabDisp, accshow: false, accedit: true, accpass: false});\r\n        }\r\n        if (option === 1) {\r\n            setTabDisp({...TabDisp, accshow: false, accedit: false, accpass: true});\r\n        }\r\n        if (option === 2) {\r\n            setTabDisp({...TabDisp, accshow: true, accedit: false, accpass: false});\r\n        }\r\n    }\r\n\r\n    const handleFormData = (data, event) => {\r\n\r\n        switch(data) {\r\n            case \"LOG\": setFormData({...FormData, login: event.target.value}); break;\r\n            case \"CNM\": setFormData({...FormData, cname: event.target.value}); break;\r\n            case \"CST\": setFormData({...FormData, cstreet: event.target.value}); break;\r\n            case \"CCT\": setFormData({...FormData, ccity: event.target.value}); break;\r\n            case \"CHO\": setFormData({...FormData, chouse: event.target.value}); break;\r\n            case \"CFL\": setFormData({...FormData, cflat: event.target.value}); break;\r\n            //case \"CZP\": setFormData({...FormData, czip: event.target.value}); break;\r\n            case \"CNP\": setFormData({...FormData, cnip: event.target.value}); break;\r\n            case \"CRG\": setFormData({...FormData, cregon: event.target.value}); break;\r\n            case \"INM\": setFormData({...FormData, iname: event.target.value}); break;\r\n            case \"ISN\": setFormData({...FormData, isurname: event.target.value}); break;\r\n            case \"ICT\": setFormData({...FormData, icity: event.target.value}); break;\r\n            case \"IST\": setFormData({...FormData, istreet: event.target.value}); break;\r\n            case \"IHO\": setFormData({...FormData, ihouse: event.target.value}); break;\r\n            case \"IFL\": setFormData({...FormData, iflat: event.target.value}); break;\r\n            case \"ZP1\": setFormData({...FormData, zip1: event.target.value}); break;\r\n            case \"ZP2\": setFormData({...FormData, zip2: event.target.value}); break;\r\n        }\r\n        console.log(FormData);\r\n    }\r\n\r\n    const changeAccountData = () => {\r\n        let valid = 0;\r\n        let info1 = 'BŁĄD: Kod pocztowy powinien zawierać tylko cyfry';\r\n        let info2 = 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry';\r\n        if (isNaN(FormData.zip1)) {\r\n            if (!ErrorInfo.includes(info1)) {\r\n            setErrorInfo([...ErrorInfo, \"BŁĄD: Kod pocztowy powinien zawierać tylko cyfry\"]);\r\n            //console.log(FormData.zip1);\r\n            valid++;\r\n            }\r\n        }\r\n        if (isNaN(FormData.cregon) && FormData.cregon !== null) {\r\n            if (!ErrorInfo.includes(info2)) {\r\n            setErrorInfo([...ErrorInfo, 'BŁĄD: Numer REGON powinien zawierać wyłącznie cyfry']);\r\n            valid++;\r\n            }\r\n        }\r\n\r\n        if (valid > 0) {\r\n            setIsError(true);\r\n        } else {\r\n            Axios.post(ServerPath + \"editaccount.php\", FormData)\r\n            .then(res => {\r\n                console.log(res.data);\r\n            })\r\n        }\r\n    }\r\n\r\n    if (AccountFound) {\r\n        if (User.accinfo.cname === null) {\r\n            AccountType = \"indywidualne\";\r\n            fullname = User.accinfo.iname + \" \" + User.accinfo.isurname;\r\n            address = User.accinfo.istreet + \" \" + User.accinfo.ihouse + \"/\" + User.accinfo.iflat;\r\n            //zip1 = User.accinfo.izip.substring(0,2);\r\n            //zip2 = User.accinfo.izip.substring(3,6);\r\n        } else {\r\n            AccountType = \"firmowe\";\r\n            fullname = User.accinfo.cname;\r\n            address = User.accinfo.cstreet + \" \" + User.accinfo.chouse + \"/\" + User.accinfo.cflat;\r\n            //zip1 = User.accinfo.czip.substring(0,2);\r\n            //zip2 = User.accinfo.czip.substring(3,6);\r\n        }\r\n        AccountData = (\r\n            <div>\r\n            <div className=\"AccountData\" style={ACStyle}>\r\n                <div className=\"AccountNameContainer\">\r\n                    <div className=\"AccountName\">\r\n                        <FaRegUserCircle size={50}/>\r\n                        <h1>{fullname}</h1>\r\n                    </div>\r\n                    <div className=\"AccountType\">Konto {AccountType}</div>\r\n                </div>\r\n                <ShowAccountData\r\n                    login={User.userinfo.login}\r\n                    mail={User.accinfo.mail}\r\n                    iname={User.accinfo.iname}\r\n                    isurname={User.accinfo.isurname}\r\n                    address={address}\r\n                    izip={User.accinfo.izip}\r\n                    icity={User.accinfo.icity}\r\n                    cname={User.accinfo.cname}\r\n                    cnip={User.accinfo.cnip}\r\n                    cregon={User.accinfo.cregon}\r\n                    czip={User.accinfo.czip}\r\n                    ccity={User.accinfo.ccity}\r\n                    changetab={changeTab.bind(this, 0)}\r\n                />\r\n            </div>\r\n            <div className=\"AccountData\" style={EAStyle}>\r\n                <div className=\"AccountNameContainer\">\r\n                    <div className=\"AccountName\">\r\n                        <FaRegUserCircle size={50}/>\r\n                        <h1>{fullname}</h1>\r\n                    </div>\r\n                    <div className=\"AccountType\">Konto {AccountType}</div>\r\n                </div>\r\n                <EditAccountData\r\n                    login={User.userinfo.login}\r\n                    mail={User.accinfo.mail}\r\n                    iname={User.accinfo.iname}\r\n                    isurname={User.accinfo.isurname}\r\n                    //address={address}\r\n                    istreet={User.accinfo.istreet}\r\n                    ihouse={User.accinfo.ihouse}\r\n                    iflat={User.accinfo.iflat}\r\n                    izip1={zip1}\r\n                    izip2={zip2}\r\n                    icity={User.accinfo.icity}\r\n                    cname={User.accinfo.cname}\r\n                    cnip={User.accinfo.cnip}\r\n                    cregon={User.accinfo.cregon}\r\n                    czip1={zip1}\r\n                    czip2={zip2}\r\n                    ccity={User.accinfo.ccity}\r\n                    cstreet={User.accinfo.cstreet}\r\n                    chouse={User.accinfo.chouse}\r\n                    cflat={User.accinfo.cflat}\r\n                    changetab={changeTab}\r\n                    submitdatachange={changeAccountData}\r\n                    iserror={IsError}\r\n                    errorinfo={ErrorInfo}\r\n                    log={handleFormData.bind(this, \"LOG\")}\r\n                    cnm={handleFormData.bind(this, \"CNM\")}                  \r\n                    cst={handleFormData.bind(this, \"CST\")}\r\n                    cct={handleFormData.bind(this, \"CCT\")}\r\n                    cho={handleFormData.bind(this, \"CHO\")}\r\n                    cfl={handleFormData.bind(this, \"CFL\")}\r\n                    czp={handleFormData.bind(this, \"CZP\")}\r\n                    cnp={handleFormData.bind(this, \"CNP\")}\r\n                    crg={handleFormData.bind(this, \"CRG\")}\r\n                    inm={handleFormData.bind(this, \"INM\")}\r\n                    isn={handleFormData.bind(this, \"ISN\")}\r\n                    ict={handleFormData.bind(this, \"ICT\")}\r\n                    ist={handleFormData.bind(this, \"IST\")}\r\n                    iho={handleFormData.bind(this, \"IHO\")}\r\n                    ifl={handleFormData.bind(this, \"IFL\")}\r\n                    zp1={handleFormData.bind(this, \"ZP1\")}\r\n                    zp2={handleFormData.bind(this, \"ZP2\")}\r\n                />\r\n            </div></div>\r\n        )\r\n    } else if (!UserLogged) {\r\n        AccountData = (\r\n            <div>\r\n                Nie wykryto zalogowanego usera.\r\n            </div>\r\n        )\r\n    } else {\r\n        AccountData = (\r\n            <div>\r\n                Brak danych\r\n            </div>\r\n        )\r\n    }\r\n\r\n    console.log(FormData);\r\n\r\n    return(\r\n        <div className=\"SiteContainer\">\r\n            <TitleBar title=\"Konto użytkownika\"/>\r\n            {AccountData}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account;\r\n\r\n//<NavLink to=\"/accountedit\"><button>EDYCJA KONTA</button></NavLink>\r\n//<NavLink to=\"/myorders\"><button>MOJE ZAMÓWIENIA</button></NavLink>\r\n//<NavLink to=\"/myorders\"><button>ZMIEŃ HASŁO</button></NavLink>"]},"metadata":{},"sourceType":"module"}