{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WSB_SELCOR\\\\PROJECT\\\\src\\\\containers\\\\Account\\\\Account.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Account.scss';\nimport { UserContext, ServerPath } from '../../containers/App';\nimport { useHistory } from 'react-router-dom';\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { FaRegUserCircle } from 'react-icons/fa';\nimport DataRecord from '../../components/DataRecord/DataRecord';\n\nconst Account = () => {\n  const [User, setUser] = useContext(UserContext);\n  const [AccountInfo, setAccountInfo] = useState([]);\n  const [AccountFound, setAccountFound] = useState(false); //let UserId = Cookies.get('psid');\n  //let DecodedUserId = decodeURIComponent(UserId);\n\n  let SessionId = Cookies.get('pssession');\n  let ExtSession = Cookies.get('psacc'); //let DecodedUserName = decodeURIComponent(UserName);\n  //const [UserData, setUserData] = useState({\n  //    id: DecodedUserId,\n  //    login: DecodedUserName\n  //});\n\n  let History = useHistory();\n  console.log(ExtSession);\n  useEffect(() => {\n    if (!ExtSession) {\n      History.push('/login');\n    } else {\n      if (SessionId !== null) {\n        console.log(User.accinfo.mail);\n\n        if (User.accinfo.mail == 'undefined') {\n          Axios.post(ServerPath + 'UserAccount.php', SessionId).then(res => {\n            if (res.data.length > 0) {\n              //setAccountInfo(res.data);\n              console.log(res.data);\n              res.data.map((r, index) => {\n                setUser(prevState => ({ ...prevState,\n                  accinfo: {\n                    mail: r.u_mail,\n                    cname: r.cc_name,\n                    ccity: r.cc_city,\n                    cstreet: r.cc_street,\n                    chouse: r.cc_number,\n                    cflat: r.cc_number_flat,\n                    czip: r.cc_zip,\n                    cnip: r.cc_NIP,\n                    cregon: r.cc_REGON,\n                    iname: r.ci_name,\n                    isurname: r.ci_surname,\n                    icity: r.ci_city,\n                    istreet: r.ci_street,\n                    ihouse: r.ci_number,\n                    iflat: r.ci_number_flat,\n                    izip: r.ci_zip\n                  }\n                }));\n              }); //console.log(res.data);\n\n              setAccountFound(true);\n            }\n          });\n        } else {\n          console.log(\"We still have it\");\n        }\n      }\n    }\n  }, []);\n  let AccountData, AccountType, address, fullname;\n\n  if (AccountFound) {\n    if (User.accinfo.cc_name == null) {\n      AccountType = \"indywidualne\";\n      fullname = User.accinfo.iname + \" \" + User.accinfo.isurname;\n      address = User.accinfo.istreet + \" \" + User.accinfo.ihouse + \"/\" + User.accinfo.iflat;\n    } else {\n      AccountType = \"firmowe\";\n      fullname = User.accinfo.cname;\n      address = User.accinfo.cstreet + \" \" + User.accinfo.chouse + \"/\" + User.accinfo.cflat;\n    }\n  } else {\n    AccountData = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Brak danych\");\n  }\n  /*\r\n      console.log(AccountFound);\r\n  \r\n      let AccountData;\r\n  \r\n      let AccountType;\r\n  \r\n      if (AccountFound) {\r\n          AccountInfo.map((r, index) => {\r\n              console.log(r.cc_name);\r\n              if (r.cc_name == null) {\r\n                  setUser({...User, userinfo: {\r\n                      AccountType: \"indywidualne\",\r\n                      login: r.u_login,\r\n                      mail: r.u_mail,\r\n                      name: r.ci_name,\r\n                      surname: r.ci_surname,\r\n                      fullname: r.ci_name + \" \" + r.ci_surname,\r\n                      street: r.ci_street,\r\n                      streetno: r.ci_number,\r\n                      flatno: r.ci_number_flat,\r\n                      city: r.ci_city,\r\n                      zip: r.ci_zip\r\n                  }})\r\n  \r\n              } else {\r\n                  AccountType = \"firmowe\";\r\n                  login = r.u_login;\r\n                  mail = r.u_mail;\r\n                  name = r.cc_name;\r\n                  fullname = r.cc_name;\r\n                  street = r.cc_street;\r\n                  streetno = r.cc_number;\r\n                  flatno = r.cc_number_flat\r\n                  city = r.cc_city;\r\n                  zip = r.cc_zip;\r\n                  nip = r.cc_NIP;\r\n                  regon = r.cc_REGON;\r\n              }\r\n              //key = {index};\r\n          })\r\n  \r\n          if (flatno) {\r\n              address = streetno + \"/\" + flatno;\r\n          } else {\r\n              address = streetno;\r\n          }\r\n  */\n\n\n  if (AccountType === \"indywidualne\") {\n    AccountData = React.createElement(\"div\", {\n      className: \"AccountInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"DANE KONTA\"), React.createElement(\"div\", {\n      className: \"AccountMainData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Login: \", User.userinfo.login), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"E-mail: \", User.accinfo.mail)), React.createElement(\"hr\", {\n      className: \"separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"DANE PERSONALNE\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Imi\\u0119: \", User.accinfo.iname), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Nazwisko: \", User.accinfo.isurname)), React.createElement(\"hr\", {\n      className: \"separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"ADRES\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, address), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, User.accinfo.izip, \" \", User.accinfo.icity)), React.createElement(\"hr\", {\n      className: \"separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }));\n  }\n\n  if (AccountType === \"firmowe\") {\n    AccountData = AccountData = React.createElement(\"div\", {\n      className: \"AccountData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AccountInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"DANE KONTA\"), React.createElement(\"div\", {\n      className: \"AccountMainData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Login: \", User.userinfo.login), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"E-mail: \", User.accinfo.mail)), React.createElement(\"hr\", {\n      className: \"separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"DANE FIRMY\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Nazwa firmy: \", User.accinfo.iname), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"NIP: \", User.accinfo.cnip), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"REGON: \", User.accinfo.cregon)), React.createElement(\"hr\", {\n      className: \"separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"ADRES\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, address), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, User.accinfo.izip, \" \", User.accinfo.icity)), React.createElement(\"hr\", {\n      className: \"separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"SiteContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    title: \"Dane konta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"AccountData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"AccountNameContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"AccountName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(FaRegUserCircle, {\n    size: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, fullname)), React.createElement(\"div\", {\n    className: \"AccountType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Konto \", AccountType)), AccountData, React.createElement(\"div\", {\n    className: \"AccountPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"EDYCJA KONTA\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"MOJE ZAM\\xD3WIENIA\"))));\n};\n\nexport default Account;","map":{"version":3,"sources":["C:/xampp/htdocs/WSB_SELCOR/PROJECT/src/containers/Account/Account.js"],"names":["React","useContext","useEffect","useState","UserContext","ServerPath","useHistory","TitleBar","Axios","Cookies","FaRegUserCircle","DataRecord","Account","User","setUser","AccountInfo","setAccountInfo","AccountFound","setAccountFound","SessionId","get","ExtSession","History","console","log","push","accinfo","mail","post","then","res","data","length","map","r","index","prevState","u_mail","cname","cc_name","ccity","cc_city","cstreet","cc_street","chouse","cc_number","cflat","cc_number_flat","czip","cc_zip","cnip","cc_NIP","cregon","cc_REGON","iname","ci_name","isurname","ci_surname","icity","ci_city","istreet","ci_street","ihouse","ci_number","iflat","ci_number_flat","izip","ci_zip","AccountData","AccountType","address","fullname","userinfo","login"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './Account.scss';\r\nimport { UserContext, ServerPath } from '../../containers/App';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TitleBar from '../../components/TitleBar/TitleBar';\r\nimport Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { FaRegUserCircle } from 'react-icons/fa';\r\nimport DataRecord from '../../components/DataRecord/DataRecord';\r\n\r\nconst Account = () => {\r\n    const [User, setUser] = useContext(UserContext);\r\n    const [AccountInfo, setAccountInfo] = useState([]);\r\n    const [AccountFound, setAccountFound] = useState(false);\r\n    //let UserId = Cookies.get('psid');\r\n    //let DecodedUserId = decodeURIComponent(UserId);\r\n    let SessionId = Cookies.get('pssession');\r\n    let ExtSession = Cookies.get('psacc');\r\n    //let DecodedUserName = decodeURIComponent(UserName);\r\n    //const [UserData, setUserData] = useState({\r\n    //    id: DecodedUserId,\r\n    //    login: DecodedUserName\r\n    //});\r\n    let History = useHistory();\r\n\r\n    console.log(ExtSession);\r\n\r\n    useEffect(() => {\r\n        if (!ExtSession) {\r\n            History.push('/login');\r\n        } else {\r\n            if (SessionId !== null) {\r\n                console.log(User.accinfo.mail);\r\n                if (User.accinfo.mail == 'undefined') {\r\n                    Axios.post(ServerPath   + 'UserAccount.php', SessionId)\r\n                    .then(res => {\r\n                        if(res.data.length > 0) {\r\n                            //setAccountInfo(res.data);\r\n                            console.log(res.data);\r\n                            res.data.map((r, index) => {\r\n                                setUser((prevState) => ({...prevState, accinfo: {\r\n                                    mail: r.u_mail,\r\n                                    cname: r.cc_name,\r\n                                    ccity: r.cc_city,\r\n                                    cstreet: r.cc_street,\r\n                                    chouse: r.cc_number,\r\n                                    cflat: r.cc_number_flat,\r\n                                    czip: r.cc_zip,\r\n                                    cnip: r.cc_NIP,\r\n                                    cregon: r.cc_REGON,\r\n                                    iname: r.ci_name,\r\n                                    isurname: r.ci_surname,\r\n                                    icity: r.ci_city,\r\n                                    istreet: r.ci_street,\r\n                                    ihouse: r.ci_number,\r\n                                    iflat: r.ci_number_flat,\r\n                                    izip: r.ci_zip\r\n                                }}));\r\n                            })\r\n                            //console.log(res.data);\r\n                            setAccountFound(true);\r\n                        }\r\n                    })\r\n                } else {\r\n                    console.log(\"We still have it\");\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    let AccountData, AccountType, address, fullname;\r\n\r\n    if (AccountFound) {\r\n        if (User.accinfo.cc_name == null) {\r\n            AccountType = \"indywidualne\";\r\n            fullname = User.accinfo.iname + \" \" + User.accinfo.isurname;\r\n            address = User.accinfo.istreet + \" \" + User.accinfo.ihouse + \"/\" + User.accinfo.iflat;\r\n        } else {\r\n            AccountType = \"firmowe\";\r\n            fullname = User.accinfo.cname;\r\n            address = User.accinfo.cstreet + \" \" + User.accinfo.chouse + \"/\" + User.accinfo.cflat;\r\n        }\r\n    } else {\r\n        AccountData = (\r\n            <div>\r\n                Brak danych\r\n            </div>\r\n        )\r\n    }\r\n/*\r\n    console.log(AccountFound);\r\n\r\n    let AccountData;\r\n\r\n    let AccountType;\r\n\r\n    if (AccountFound) {\r\n        AccountInfo.map((r, index) => {\r\n            console.log(r.cc_name);\r\n            if (r.cc_name == null) {\r\n                setUser({...User, userinfo: {\r\n                    AccountType: \"indywidualne\",\r\n                    login: r.u_login,\r\n                    mail: r.u_mail,\r\n                    name: r.ci_name,\r\n                    surname: r.ci_surname,\r\n                    fullname: r.ci_name + \" \" + r.ci_surname,\r\n                    street: r.ci_street,\r\n                    streetno: r.ci_number,\r\n                    flatno: r.ci_number_flat,\r\n                    city: r.ci_city,\r\n                    zip: r.ci_zip\r\n                }})\r\n\r\n            } else {\r\n                AccountType = \"firmowe\";\r\n                login = r.u_login;\r\n                mail = r.u_mail;\r\n                name = r.cc_name;\r\n                fullname = r.cc_name;\r\n                street = r.cc_street;\r\n                streetno = r.cc_number;\r\n                flatno = r.cc_number_flat\r\n                city = r.cc_city;\r\n                zip = r.cc_zip;\r\n                nip = r.cc_NIP;\r\n                regon = r.cc_REGON;\r\n            }\r\n            //key = {index};\r\n        })\r\n\r\n        if (flatno) {\r\n            address = streetno + \"/\" + flatno;\r\n        } else {\r\n            address = streetno;\r\n        }\r\n*/\r\n        if (AccountType === \"indywidualne\") {\r\n            AccountData = (\r\n                <div className=\"AccountInfo\">\r\n                    <h3>DANE KONTA</h3>\r\n                    <div className=\"AccountMainData\">\r\n                        <p>Login: {User.userinfo.login}</p>\r\n                        <p>E-mail: {User.accinfo.mail}</p>\r\n                    </div>\r\n                    <hr className=\"separator\"/>\r\n                    <h3>DANE PERSONALNE</h3>\r\n                    <div>\r\n                        <p>Imię: {User.accinfo.iname}</p>\r\n                        <p>Nazwisko: {User.accinfo.isurname}</p>\r\n                    </div>\r\n                    <hr className=\"separator\"/>\r\n                    <h3>ADRES</h3>\r\n                    <div>\r\n                        <p>{address}</p>\r\n                        <p>{User.accinfo.izip} {User.accinfo.icity}</p>\r\n                    </div>\r\n                    <hr className=\"separator\"/>\r\n                </div>\r\n            )\r\n        }\r\n        if (AccountType === \"firmowe\") {\r\n            AccountData = (\r\n                AccountData = (\r\n                    <div className=\"AccountData\">\r\n                        <div className=\"AccountInfo\">\r\n                            <h3>DANE KONTA</h3>\r\n                            <div className=\"AccountMainData\">\r\n                                <p>Login: {User.userinfo.login}</p>\r\n                                <p>E-mail: {User.accinfo.mail}</p>\r\n                            </div>\r\n                            <hr className=\"separator\"/>\r\n                            <h3>DANE FIRMY</h3>\r\n                            <div>\r\n                                <p>Nazwa firmy: {User.accinfo.iname}</p>\r\n                                <p>NIP: {User.accinfo.cnip}</p>\r\n                                <p>REGON: {User.accinfo.cregon}</p>\r\n                            </div>\r\n                            <hr className=\"separator\"/>\r\n                            <h3>ADRES</h3>\r\n                            <div>\r\n                                <p>{address}</p>\r\n                                <p>{User.accinfo.izip} {User.accinfo.icity}</p>\r\n                            </div>\r\n                            <hr className=\"separator\"/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            )\r\n        }\r\n\r\n    return(\r\n        <div className=\"SiteContainer\">\r\n            <TitleBar title=\"Dane konta\"/>\r\n            <div className=\"AccountData\">\r\n                <div className=\"AccountNameContainer\">\r\n                    <div className=\"AccountName\">\r\n                            <FaRegUserCircle size={50}/>\r\n                            <h1>{fullname}</h1>\r\n                        </div>\r\n                        <div className=\"AccountType\">Konto {AccountType}</div>\r\n                    </div>\r\n                    {AccountData}\r\n                <div className=\"AccountPanel\">\r\n                    <button>EDYCJA KONTA</button>\r\n                    <button>MOJE ZAMÓWIENIA</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account;"]},"metadata":{},"sourceType":"module"}